{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112826492_627012862","id":"20190424-153346_1010921897","dateCreated":"2019-04-24T15:33:46+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:27478","text":"%md <img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>","dateUpdated":"2019-04-24T15:33:55+0200","dateFinished":"2019-04-24T15:33:55+0200","dateStarted":"2019-04-24T15:33:55+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>\n</div>"}]}},{"text":"%md\n# 1.5 Conversion between DataFrames, Datasets and RDDs","user":"anonymous","dateUpdated":"2019-04-24T15:34:04+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112835384_1859619974","id":"20190424-153355_158323812","dateCreated":"2019-04-24T15:33:55+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:27556","dateFinished":"2019-04-24T15:34:04+0200","dateStarted":"2019-04-24T15:34:04+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>1.5 Conversion between DataFrames, Datasets and RDDs</h1>\n</div>"}]}},{"text":"%md\n***1.5.1 Converting a DataFrame to a Dataset***\n\n***1.5.2 Converting a DataFrame to a RDD***\n\n***1.5.3 Converting a Dataset to a DataFrame***\n\n***1.5.4 Converting a Dataset to a RDD***\n\n***1.5.5 Converting a RDD to a DataFrame***\n\n***1.5.6 Converting a RDD to a Dataset***","user":"anonymous","dateUpdated":"2019-04-24T15:34:14+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112844887_-1099359527","id":"20190424-153404_1781432162","dateCreated":"2019-04-24T15:34:04+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:27650","dateFinished":"2019-04-24T15:34:14+0200","dateStarted":"2019-04-24T15:34:14+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>1.5.1 Converting a DataFrame to a Dataset</em></strong></p>\n<p><strong><em>1.5.2 Converting a DataFrame to a RDD</em></strong></p>\n<p><strong><em>1.5.3 Converting a Dataset to a DataFrame</em></strong></p>\n<p><strong><em>1.5.4 Converting a Dataset to a RDD</em></strong></p>\n<p><strong><em>1.5.5 Converting a RDD to a DataFrame</em></strong></p>\n<p><strong><em>1.5.6 Converting a RDD to a Dataset</em></strong></p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T15:35:15+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112913443_1616764059","id":"20190424-153513_359092411","dateCreated":"2019-04-24T15:35:13+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:27929","dateFinished":"2019-04-24T15:35:15+0200","dateStarted":"2019-04-24T15:35:15+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\n//path of data source file\nval dataPath = \"dbfs:/cs-spark-training/Songs/\"","user":"anonymous","dateUpdated":"2019-04-24T15:34:22+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112854632_1269520657","id":"20190424-153414_1480740024","dateCreated":"2019-04-24T15:34:14+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:27743","dateFinished":"2019-04-24T15:34:22+0200","dateStarted":"2019-04-24T15:34:22+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dataPath: String = dbfs:/cs-spark-training/Songs/\n"}]}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T15:35:29+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112925886_1898265684","id":"20190424-153525_1825460273","dateCreated":"2019-04-24T15:35:25+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28019","dateFinished":"2019-04-24T15:35:29+0200","dateStarted":"2019-04-24T15:35:29+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\ndataPath = r'dbfs:/cs-spark-training/Songs/'\nsongDF = spark.read.load(dataPath)","user":"anonymous","dateUpdated":"2019-04-24T15:35:36+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112862744_623147381","id":"20190424-153422_1370522374","dateCreated":"2019-04-24T15:34:22+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:27832","dateFinished":"2019-04-24T15:35:36+0200","dateStarted":"2019-04-24T15:35:36+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 2, in <module>\nNameError: name 'spark' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 2, in <module>\nNameError: name 'spark' is not defined\n\n"}]}},{"text":"%md\n## 1.5.1 Converting a DataFrame to a Dataset","user":"anonymous","dateUpdated":"2019-04-24T15:35:47+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112936607_-1465041281","id":"20190424-153536_1662214098","dateCreated":"2019-04-24T15:35:36+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28109","dateFinished":"2019-04-24T15:35:47+0200","dateStarted":"2019-04-24T15:35:47+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1.5.1 Converting a DataFrame to a Dataset</h2>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T15:40:44+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113242661_-65337381","id":"20190424-154042_424807347","dateCreated":"2019-04-24T15:40:42+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29813","dateFinished":"2019-04-24T15:40:44+0200","dateStarted":"2019-04-24T15:40:44+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%md\n* Using a case class","user":"anonymous","dateUpdated":"2019-04-24T15:35:53+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112944345_1835132320","id":"20190424-153544_520930718","dateCreated":"2019-04-24T15:35:44+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28198","dateFinished":"2019-04-24T15:35:53+0200","dateStarted":"2019-04-24T15:35:53+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>Using a case class</li>\n</ul>\n</div>"}]}},{"text":"%spark\nval songDF = spark.read.load(dataPath)\n\ncase class Music(artist: String, loudness: Double)\n\nval songDS = songDF.as[Music]\n\nsongDS.show(false)","user":"anonymous","dateUpdated":"2019-04-24T15:36:14+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112953441_-1824744737","id":"20190424-153553_708475123","dateCreated":"2019-04-24T15:35:53+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28311","dateFinished":"2019-04-24T15:36:14+0200","dateStarted":"2019-04-24T15:36:14+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:21: error: Unable to find encoder for type stored in a Dataset.  Primitive types (Int, String, etc) and Product types (case classes) are supported by importing spark.implicits._  Support for serializing other types will be added in future releases.\n       val songDS = songDF.as[Music]\n                             ^\n"}]}},{"text":"%md\n* Using a tuple","user":"anonymous","dateUpdated":"2019-04-24T15:38:04+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556112974297_-2116843985","id":"20190424-153614_1981224755","dateCreated":"2019-04-24T15:36:14+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28400","dateFinished":"2019-04-24T15:38:04+0200","dateStarted":"2019-04-24T15:38:04+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>Using a tuple</li>\n</ul>\n</div>"}]}},{"text":"%spark\nval songDsTuple = songDF.as[(String, Double)]\n\nsongDsTuple.show(false)","user":"anonymous","dateUpdated":"2019-04-24T15:38:14+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113084161_-1030945047","id":"20190424-153804_1177070445","dateCreated":"2019-04-24T15:38:04+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28489","dateFinished":"2019-04-24T15:38:14+0200","dateStarted":"2019-04-24T15:38:14+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:29: error: not found: value songDF\n       val songDsTuple = songDF.as[(String, Double)]\n                         ^\n"}]}},{"text":"%md\n## 1.5.2 Converting a DataFrame to a RDD","user":"anonymous","dateUpdated":"2019-04-24T15:38:27+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113094601_-819292696","id":"20190424-153814_1519235653","dateCreated":"2019-04-24T15:38:14+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28578","dateFinished":"2019-04-24T15:38:27+0200","dateStarted":"2019-04-24T15:38:27+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1.5.2 Converting a DataFrame to a RDD</h2>\n</div>"}]}},{"text":"%md\n* To convert DataFrames to RDDs use `.rdd`","user":"anonymous","dateUpdated":"2019-04-24T15:38:33+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113102537_1473140327","id":"20190424-153822_1781635403","dateCreated":"2019-04-24T15:38:22+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28667","dateFinished":"2019-04-24T15:38:33+0200","dateStarted":"2019-04-24T15:38:33+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>To convert DataFrames to RDDs use <code>.rdd</code></li>\n</ul>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T15:40:53+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113113721_-942670660","id":"20190424-153833_1882030658","dateCreated":"2019-04-24T15:38:33+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28780","dateFinished":"2019-04-24T15:40:53+0200","dateStarted":"2019-04-24T15:40:53+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nval songRDD = songDF.rdd\n\nsongRDD.collect.foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T15:38:57+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113122137_962339445","id":"20190424-153842_432886644","dateCreated":"2019-04-24T15:38:42+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28870","dateFinished":"2019-04-24T15:38:57+0200","dateStarted":"2019-04-24T15:38:57+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:35: error: not found: value songDF\n       val songRDD = songDF.rdd\n                     ^\n"}]}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T15:39:07+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113137025_323379485","id":"20190424-153857_291477756","dateCreated":"2019-04-24T15:38:57+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28959","dateFinished":"2019-04-24T15:39:07+0200","dateStarted":"2019-04-24T15:39:07+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nfrom __future__ import print_function\n\nsongRDDdefault = songDF.rdd","user":"anonymous","dateUpdated":"2019-04-24T15:45:09+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113147954_438485014","id":"20190424-153907_1187758323","dateCreated":"2019-04-24T15:39:07+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29048","dateFinished":"2019-04-24T15:45:09+0200","dateStarted":"2019-04-24T15:45:09+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 2, in <module>\nNameError: name 'songDF' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 2, in <module>\nNameError: name 'songDF' is not defined\n\n"}]}},{"text":"%md\n## 1.5.3 Converting a Dataset to a DataFrame","user":"anonymous","dateUpdated":"2019-04-24T15:39:25+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113153642_-2007403121","id":"20190424-153913_104827002","dateCreated":"2019-04-24T15:39:13+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29137","dateFinished":"2019-04-24T15:39:25+0200","dateStarted":"2019-04-24T15:39:25+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1.5.3 Converting a Dataset to a DataFrame</h2>\n</div>"}]}},{"text":"%md\n* To convert Datasets to DataFrames use `.toDF()`","user":"anonymous","dateUpdated":"2019-04-24T15:39:31+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113162826_2018177721","id":"20190424-153922_1052000686","dateCreated":"2019-04-24T15:39:22+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29226","dateFinished":"2019-04-24T15:39:31+0200","dateStarted":"2019-04-24T15:39:31+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>To convert Datasets to DataFrames use <code>.toDF()</code></li>\n</ul>\n</div>"}]}},{"text":"%spark\nval songDfDataset = songDS.toDF()\n\nsongDfDataset.show(false)","user":"anonymous","dateUpdated":"2019-04-24T15:39:39+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113170994_-1809676725","id":"20190424-153930_913227052","dateCreated":"2019-04-24T15:39:30+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29339","dateFinished":"2019-04-24T15:39:39+0200","dateStarted":"2019-04-24T15:39:39+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:29: error: not found: value songDS\n       val songDfDataset = songDS.toDF()\n                           ^\n"}]}},{"text":"%md\n## 1.5.4 Converting a Dataset to a RDD","user":"anonymous","dateUpdated":"2019-04-24T15:39:49+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113179953_1219594523","id":"20190424-153939_418218620","dateCreated":"2019-04-24T15:39:39+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29428","dateFinished":"2019-04-24T15:39:49+0200","dateStarted":"2019-04-24T15:39:49+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1.5.4 Converting a Dataset to a RDD</h2>\n</div>"}]}},{"text":"%md\n* To convert Datasets to RDDs use `.rdd`","user":"anonymous","dateUpdated":"2019-04-24T15:39:55+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113186082_-564956635","id":"20190424-153946_843897463","dateCreated":"2019-04-24T15:39:46+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29517","dateFinished":"2019-04-24T15:39:55+0200","dateStarted":"2019-04-24T15:39:55+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>To convert Datasets to RDDs use <code>.rdd</code></li>\n</ul>\n</div>"}]}},{"text":"//returns RDD of case class type\nval songRddDatasetCaseClass = songDS.rdd\nsongRddDatasetCaseClass.collect.foreach(println)\n\n//returns RDD of a tuple type\nval songRddDatasetTuple = songDsTuple.rdd\nsongRddDatasetTuple.collect.foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T15:40:10+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113195338_2103485690","id":"20190424-153955_966392820","dateCreated":"2019-04-24T15:39:55+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29630","dateFinished":"2019-04-24T15:40:10+0200","dateStarted":"2019-04-24T15:40:10+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:30: error: not found: value songDS\n       val songRddDatasetCaseClass = songDS.rdd\n                                     ^\n<console>:34: error: not found: value songDsTuple\n       val songRddDatasetTuple = songDsTuple.rdd\n                                 ^\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556113210010_-775477778","id":"20190424-154010_1405105532","dateCreated":"2019-04-24T15:40:10+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29719","text":"%md\n## 1.5.5 Converting a RDD to a DataFrame","dateUpdated":"2019-04-24T16:15:24+0200","dateFinished":"2019-04-24T16:15:24+0200","dateStarted":"2019-04-24T16:15:24+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1.5.5 Converting a RDD to a DataFrame</h2>\n</div>"}]}},{"text":"%md\n* If the RDD is strongly typed (e.g. through case class or tuple) you can use `.toDF()` again.","user":"anonymous","dateUpdated":"2019-04-24T16:15:31+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115321021_1462779288","id":"20190424-161521_1191804596","dateCreated":"2019-04-24T16:15:21+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:29937","dateFinished":"2019-04-24T16:15:31+0200","dateStarted":"2019-04-24T16:15:31+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>If the RDD is strongly typed (e.g. through case class or tuple) you can use <code>.toDF()</code> again.</li>\n</ul>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:15:44+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115331442_262576714","id":"20190424-161531_1366239576","dateCreated":"2019-04-24T16:15:31+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30050","dateFinished":"2019-04-24T16:15:44+0200","dateStarted":"2019-04-24T16:15:44+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\n//Schema implicitly available due to case class\nval songDfCaseClass = songRddDatasetCaseClass.toDF()  \nsongDfCaseClass.show(false)\n\n//Schema implicitly available due to tuple\nval songDfTuple = songRddDatasetTuple.toDF()\nsongDfTuple.show(false)","user":"anonymous","dateUpdated":"2019-04-24T16:15:57+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115344178_1445404688","id":"20190424-161544_1165201400","dateCreated":"2019-04-24T16:15:44+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30140","dateFinished":"2019-04-24T16:15:57+0200","dateStarted":"2019-04-24T16:15:57+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:30: error: not found: value songRddDatasetCaseClass\n       val songDfCaseClass = songRddDatasetCaseClass.toDF()\n                             ^\n<console>:34: error: not found: value songRddDatasetTuple\n       val songDfTuple = songRddDatasetTuple.toDF()\n                         ^\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115349779_-2140000471","id":"20190424-161549_1822860009","dateCreated":"2019-04-24T16:15:49+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30230","text":"%md\n* If this isn´t the case (i.e. RDD of type row -> RDD[Row]) you have to map each element into a RDD of type case class respectively of type tuple and convert it afterwards\nwith `.toDF()` to a DataFrame.","dateUpdated":"2019-04-24T16:33:20+0200","dateFinished":"2019-04-24T16:33:20+0200","dateStarted":"2019-04-24T16:33:20+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>If this isn´t the case (i.e. RDD of type row -&gt; RDD[Row]) you have to map each element into a RDD of type case class respectively of type tuple and convert it afterwards<br/>with <code>.toDF()</code> to a DataFrame.</li>\n</ul>\n</div>"}]}},{"text":"%spark\n//Check type of RDD 'songRDD'\nval check = songRDD.map(x => x)\n\n//create case class\ncase class Music(artist: String, loudness: Double)\n\n//map row to case class (RDD[Music]) and convert to DataFrame by calling '.toDF()' (DataFrame)\nval songDfRDD = songRDD.map(row => Music(row.getAs[String](0), row.getAs[Double](1))).toDF()\nsongDfRDD.show(false)\n\n//map row to tuple (RDD[(String, Double)]) and convert to DataFrame by calling '.toDF()' (DataFrame)\nval songDfTuple = songRDD.map(row => (row.getAs[String](0), row.getAs[Double](1))).toDF()\nsongDfTuple.show(false)","user":"anonymous","dateUpdated":"2019-04-24T16:17:02+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115400531_-950992896","id":"20190424-161640_1979102466","dateCreated":"2019-04-24T16:16:40+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30351","dateFinished":"2019-04-24T16:17:02+0200","dateStarted":"2019-04-24T16:17:02+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:26: error: value getAs is not a member of String\n       val songDfRDD = songRDD.map(row => Music(row.getAs[String](0), row.getAs[Double](1))).toDF()\n                                                    ^\n<console>:26: error: value getAs is not a member of String\n       val songDfRDD = songRDD.map(row => Music(row.getAs[String](0), row.getAs[Double](1))).toDF()\n                                                                          ^\n<console>:30: error: value getAs is not a member of String\n       val songDfTuple = songRDD.map(row => (row.getAs[String](0), row.getAs[Double](1))).toDF()\n                                                 ^\n<console>:30: error: value getAs is not a member of String\n       val songDfTuple = songRDD.map(row => (row.getAs[String](0), row.getAs[Double](1))).toDF()\n                                                                       ^\n"}]}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T16:17:12+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115413155_381679333","id":"20190424-161653_208671266","dateCreated":"2019-04-24T16:16:53+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30440","dateFinished":"2019-04-24T16:17:12+0200","dateStarted":"2019-04-24T16:17:12+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nprint(*songRDDtuple.collect(), sep = '\\n')\n\n# there are too many ways to do it. the shortest one being:\nsongDFfromRDD1 = songRDDtuple.toDF(['artist', 'loudness'])\nsongDFfromRDD1.show()\nsongDFfromRDD1.printSchema()","user":"anonymous","dateUpdated":"2019-04-24T16:17:18+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115432250_831041786","id":"20190424-161712_77670243","dateCreated":"2019-04-24T16:17:12+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30545","dateFinished":"2019-04-24T16:17:18+0200","dateStarted":"2019-04-24T16:17:18+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDDtuple' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDDtuple' is not defined\n\n"}]}},{"text":"%md\n## 1.5.6 Converting a RDD to a Dataset","user":"anonymous","dateUpdated":"2019-04-24T16:17:28+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115438130_1256190645","id":"20190424-161718_992015717","dateCreated":"2019-04-24T16:17:18+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30634","dateFinished":"2019-04-24T16:17:28+0200","dateStarted":"2019-04-24T16:17:28+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1.5.6 Converting a RDD to a Dataset</h2>\n</div>"}]}},{"text":"%md\n* If the RDD is strongly typed (e.g. through case class or tuple) you can use `.toDS()`.","user":"anonymous","dateUpdated":"2019-04-24T16:17:34+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115444987_1658919352","id":"20190424-161724_2070368091","dateCreated":"2019-04-24T16:17:24+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30723","dateFinished":"2019-04-24T16:17:34+0200","dateStarted":"2019-04-24T16:17:34+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>If the RDD is strongly typed (e.g. through case class or tuple) you can use <code>.toDS()</code>.</li>\n</ul>\n</div>"}]}},{"text":"%spark\n//Schema implicitly available due to case class\nval songDsCaseClass = songRddDatasetCaseClass.toDS()\nsongDsCaseClass.show(false)\n\nval songDsTuple = songRddDatasetTuple.toDS()\nsongDsTuple.show(false)","user":"anonymous","dateUpdated":"2019-04-24T16:17:46+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115454419_-1144886562","id":"20190424-161734_1638365034","dateCreated":"2019-04-24T16:17:34+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30836","dateFinished":"2019-04-24T16:17:46+0200","dateStarted":"2019-04-24T16:17:46+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:30: error: not found: value songRddDatasetCaseClass\n       val songDsCaseClass = songRddDatasetCaseClass.toDS()\n                             ^\n<console>:33: error: not found: value songRddDatasetTuple\n       val songDsTuple = songRddDatasetTuple.toDS()\n                         ^\n"}]}},{"text":"%md\n* If this isn´t the case (i.e. RDD of type row -> RDD[Row]) you have to map each element into a RDD of type case class respectively of type tuple and convert it afterwards\nwith `.toDS()` to a Dataset.","user":"anonymous","dateUpdated":"2019-04-24T16:32:51+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115466413_1430246194","id":"20190424-161746_1841330015","dateCreated":"2019-04-24T16:17:46+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:30925","dateFinished":"2019-04-24T16:32:51+0200","dateStarted":"2019-04-24T16:32:51+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>If this isn´t the case (i.e. RDD of type row -&gt; RDD[Row]) you have to map each element into a RDD of type case class respectively of type tuple and convert it afterwards<br/>with <code>.toDS()</code> to a Dataset.</li>\n</ul>\n</div>"}]}},{"text":"%spark\n//Check type of RDD 'songRDD'\nval check = songRDD.map(x => x)\n\n//create case class\ncase class Music(artist: String, loudness: Double)\n\n//map row to case class (RDD[Music]) and convert to Dataset by calling '.toDS()' (Dataset[Music])\nval songDsRDD = songRDD.map(row => Music(row.getAs[String](0), row.getAs[Double](1))).toDS()\nsongDsRDD.show(false)\n\n//map row to tuple (RDD[(String, Double)]) and convert to Dataset by calling '.toDS()' (Dataset[(String, Double)])\nval songDsTuple = songRDD.map(row => (row.getAs[String](0), row.getAs[Double](1))).toDS()\nsongDsTuple.show(false)","user":"anonymous","dateUpdated":"2019-04-24T16:18:16+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556115473379_1509177238","id":"20190424-161753_1752176734","dateCreated":"2019-04-24T16:17:53+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:31014","dateFinished":"2019-04-24T16:18:16+0200","dateStarted":"2019-04-24T16:18:16+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:26: error: value getAs is not a member of String\n       val songDsRDD = songRDD.map(row => Music(row.getAs[String](0), row.getAs[Double](1))).toDS()\n                                                    ^\n<console>:26: error: value getAs is not a member of String\n       val songDsRDD = songRDD.map(row => Music(row.getAs[String](0), row.getAs[Double](1))).toDS()\n                                                                          ^\n<console>:30: error: value getAs is not a member of String\n       val songDsTuple = songRDD.map(row => (row.getAs[String](0), row.getAs[Double](1))).toDS()\n                                                 ^\n<console>:30: error: value getAs is not a member of String\n       val songDsTuple = songRDD.map(row => (row.getAs[String](0), row.getAs[Double](1))).toDS()\n                                                                       ^\n"}]}}],"name":"/1. DataFrames, Datasets & RDDs/1.5 Conversion between DataFrames, Datasets and RDDs","id":"2E968WZKX","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"python:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}