{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556116952976_878581761","id":"20190424-164232_866240267","dateCreated":"2019-04-24T16:42:32+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:33397","text":"%md <img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>","dateUpdated":"2019-04-24T16:42:39+0200","dateFinished":"2019-04-24T16:42:39+0200","dateStarted":"2019-04-24T16:42:39+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>\n</div>"}]}},{"text":"%md \n# 2.2 RDD: Transformations & Actions","user":"anonymous","dateUpdated":"2019-04-24T16:42:46+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556116959369_-289196740","id":"20190424-164239_1438219612","dateCreated":"2019-04-24T16:42:39+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:33475","dateFinished":"2019-04-24T16:42:46+0200","dateStarted":"2019-04-24T16:42:46+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>2.2 RDD: Transformations &amp; Actions</h1>\n</div>"}]}},{"text":"%md\n***2.2.1 RDD Transformations***\n  \n***2.2.2 RDD Actions***\n  \n***2.2.3 Applying RDD API***\n  \n* Creation of sample data out of in-memory data\n       \n* Exemplary RDD transformations without shuffling (`map`, `mapPartitions`, `mapPartitionsWithIndex`, `flatMap`, `filter`)\n       \n* Exemplary RDD transformations involving shuffle (`groupByKey`, `reduceByKey`, `sortBy`, `repartition`)\n       \n* Exemplary RDD actions (`collect`, `count`, `reduce`, `foreach`)\n       \n***2.2.4 Group exercise***","user":"anonymous","dateUpdated":"2019-04-24T16:42:52+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556116966615_1921935761","id":"20190424-164246_1308104480","dateCreated":"2019-04-24T16:42:46+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:33569","dateFinished":"2019-04-24T16:42:52+0200","dateStarted":"2019-04-24T16:42:52+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>2.2.1 RDD Transformations</em></strong></p>\n<p><strong><em>2.2.2 RDD Actions</em></strong></p>\n<p><strong><em>2.2.3 Applying RDD API</em></strong></p>\n<ul>\n  <li>\n  <p>Creation of sample data out of in-memory data</p></li>\n  <li>\n  <p>Exemplary RDD transformations without shuffling (<code>map</code>, <code>mapPartitions</code>, <code>mapPartitionsWithIndex</code>, <code>flatMap</code>, <code>filter</code>)</p></li>\n  <li>\n  <p>Exemplary RDD transformations involving shuffle (<code>groupByKey</code>, <code>reduceByKey</code>, <code>sortBy</code>, <code>repartition</code>)</p></li>\n  <li>\n  <p>Exemplary RDD actions (<code>collect</code>, <code>count</code>, <code>reduce</code>, <code>foreach</code>)</p></li>\n</ul>\n<p><strong><em>2.2.4 Group exercise</em></strong></p>\n</div>"}]}},{"text":"%md\n## 2.2.1 RDD Transformations\n\n*   Overview of RDD transformations can be found [here](https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.rdd.RDD).\n\n*   Some RDD transformations provide predefined functions (i.e. `distinct`). In general you have to apply your own, use case specific function inside a RDD transformation (i.e. `map`)\n\n*   Examples of some common transformations:\n    - `union`\n    - `map`\n    - `filter`\n    - `distinct`","user":"anonymous","dateUpdated":"2019-04-24T16:43:02+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556116972592_1298214820","id":"20190424-164252_1189981600","dateCreated":"2019-04-24T16:42:52+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:33659","dateFinished":"2019-04-24T16:43:02+0200","dateStarted":"2019-04-24T16:43:02+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>2.2.1 RDD Transformations</h2>\n<ul>\n  <li>\n  <p>Overview of RDD transformations can be found <a href=\"https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.rdd.RDD\">here</a>.</p></li>\n  <li>\n  <p>Some RDD transformations provide predefined functions (i.e. <code>distinct</code>). In general you have to apply your own, use case specific function inside a RDD transformation (i.e. <code>map</code>)</p></li>\n  <li>\n    <p>Examples of some common transformations:</p>\n    <ul>\n      <li><code>union</code></li>\n      <li><code>map</code></li>\n      <li><code>filter</code></li>\n      <li><code>distinct</code></li>\n    </ul>\n  </li>\n</ul>\n</div>"}]}},{"text":"%md\n## 2.2.2 RDD actions\n\n*   Overview of RDD actions can be found [here](https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.rdd.RDD).\n\n*   Examples of some common ations:\n    - `count`\n    - `take`\n    - `collect`\n    - `first`","user":"anonymous","dateUpdated":"2019-04-24T16:43:11+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556116978696_-181440549","id":"20190424-164258_8090283","dateCreated":"2019-04-24T16:42:58+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:33749","dateFinished":"2019-04-24T16:43:11+0200","dateStarted":"2019-04-24T16:43:11+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>2.2.2 RDD actions</h2>\n<ul>\n  <li>\n  <p>Overview of RDD actions can be found <a href=\"https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.rdd.RDD\">here</a>.</p></li>\n  <li>\n    <p>Examples of some common ations:</p>\n    <ul>\n      <li><code>count</code></li>\n      <li><code>take</code></li>\n      <li><code>collect</code></li>\n      <li><code>first</code></li>\n    </ul>\n  </li>\n</ul>\n</div>"}]}},{"text":"%md\n## 2.2.3 Applying RDD API","user":"anonymous","dateUpdated":"2019-04-24T16:43:22+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556116991464_-1490825257","id":"20190424-164311_1714774242","dateCreated":"2019-04-24T16:43:11+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:33862","dateFinished":"2019-04-24T16:43:22+0200","dateStarted":"2019-04-24T16:43:22+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>2.2.3 Applying RDD API</h2>\n</div>"}]}},{"text":"%md\n#### Creation of sample data out of in-memory data","user":"anonymous","dateUpdated":"2019-04-24T16:43:29+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117002201_-762616856","id":"20190424-164322_193765665","dateCreated":"2019-04-24T16:43:22+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:33952","dateFinished":"2019-04-24T16:43:29+0200","dateStarted":"2019-04-24T16:43:29+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Creation of sample data out of in-memory data</h4>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:44:12+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117007112_-1992434390","id":"20190424-164327_1952853990","dateCreated":"2019-04-24T16:43:27+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34042","dateFinished":"2019-04-24T16:44:12+0200","dateStarted":"2019-04-24T16:44:12+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\n// define case class representing schema of our data.\ncase class Song(artist: String, loudness: Double)\n\n// create standard Scala array -> Located on the master node only, and not distributed\nval songArray = Array(\n  Song(\"Beastie Boys\", -5.0), \n  Song(\"Frank Sinatra\", -10.0), \n  Song(\"Muse\", -7.0),\n  Song(\"Muse\", -6.0)\n)\n\n// Create an RDD of type Song out of in-memory data\nval songRDD = sc.parallelize(songArray)\n\n// which is automatically distributed on X partitions\nsongRDD.getNumPartitions","user":"anonymous","dateUpdated":"2019-04-24T16:44:28+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117052953_-307185310","id":"20190424-164412_2082837201","dateCreated":"2019-04-24T16:44:12+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34155","dateFinished":"2019-04-24T16:44:28+0200","dateStarted":"2019-04-24T16:44:28+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class Song\nsongArray: Array[Song] = Array(Song(Beastie Boys,-5.0), Song(Frank Sinatra,-10.0), Song(Muse,-7.0), Song(Muse,-6.0))\nsongRDD: org.apache.spark.rdd.RDD[Song] = ParallelCollectionRDD[4] at parallelize at <console>:29\nres44: Int = 1\n"}]}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T16:44:37+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117068544_1159284469","id":"20190424-164428_1940915419","dateCreated":"2019-04-24T16:44:28+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34244","dateFinished":"2019-04-24T16:44:37+0200","dateStarted":"2019-04-24T16:44:37+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nfrom __future__ import print_function\nmyData = (\n  ('Beastie Boys', -5.0),\n  ('Frank Sinatra', -10.0),\n  ('Muse', -7.0),\n  ('Muse', -6.0)\n)\nsongRDD = sc.parallelize(myData)\nprint(*songRDD.collect(), sep = '\\n')\nprint('Number of Partitions: {}'.format(songRDD.getNumPartitions()))","user":"anonymous","dateUpdated":"2019-04-24T16:44:44+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117077665_-1728500025","id":"20190424-164437_1229353474","dateCreated":"2019-04-24T16:44:37+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34342","dateFinished":"2019-04-24T16:44:44+0200","dateStarted":"2019-04-24T16:44:44+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 8, in <module>\nNameError: name 'sc' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 8, in <module>\nNameError: name 'sc' is not defined\n\n"}]}},{"text":"%md\n### Examplary RDD transformations without shuffling\n\n*   `map`: Creates a new RDD by mapping all *elements* via a self-defined function\n\n*   `mapPartitions`: Similar to map it also creates a new RDD by mapping all *partitions* via a self-defined function\n\n*   `mapPartitionsWithIndex`: Similar to mapPartitions it also creates a new RDD by mapping all *partitions* via a self-defined function and tracks the index of the original partition\n\n*   `flatMap`: Creates a new RDD by mapping all elements via a self-defined function and flattens the result\n\n*   `filter`: Returns only elements which match the filter condition","user":"anonymous","dateUpdated":"2019-04-24T16:44:54+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117084273_-1183511138","id":"20190424-164444_1278854587","dateCreated":"2019-04-24T16:44:44+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34431","dateFinished":"2019-04-24T16:44:54+0200","dateStarted":"2019-04-24T16:44:54+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Examplary RDD transformations without shuffling</h3>\n<ul>\n  <li>\n  <p><code>map</code>: Creates a new RDD by mapping all <em>elements</em> via a self-defined function</p></li>\n  <li>\n  <p><code>mapPartitions</code>: Similar to map it also creates a new RDD by mapping all <em>partitions</em> via a self-defined function</p></li>\n  <li>\n  <p><code>mapPartitionsWithIndex</code>: Similar to mapPartitions it also creates a new RDD by mapping all <em>partitions</em> via a self-defined function and tracks the index of the original partition</p></li>\n  <li>\n  <p><code>flatMap</code>: Creates a new RDD by mapping all elements via a self-defined function and flattens the result</p></li>\n  <li>\n  <p><code>filter</code>: Returns only elements which match the filter condition</p></li>\n</ul>\n</div>"}]}},{"text":"%md\n#### map\nCreates a new RDD by applying a function `f` to all *elements* of the current RDD.","user":"anonymous","dateUpdated":"2019-04-24T16:45:01+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117094313_1340004238","id":"20190424-164454_1532182699","dateCreated":"2019-04-24T16:44:54+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34520","dateFinished":"2019-04-24T16:45:01+0200","dateStarted":"2019-04-24T16:45:01+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>map</h4>\n<p>Creates a new RDD by applying a function <code>f</code> to all <em>elements</em> of the current RDD.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:45:16+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117101289_1825899816","id":"20190424-164501_1253317514","dateCreated":"2019-04-24T16:45:01+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34610","dateFinished":"2019-04-24T16:45:16+0200","dateStarted":"2019-04-24T16:45:16+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nsongRDD.map(song => song.artist).collect.foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T16:45:31+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117116729_-747971931","id":"20190424-164516_1876661419","dateCreated":"2019-04-24T16:45:16+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34700","dateFinished":"2019-04-24T16:45:31+0200","dateStarted":"2019-04-24T16:45:31+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Beastie Boys\nFrank Sinatra\nMuse\nMuse\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=0"],"interpreterSettingId":"spark"}}},{"text":"// this is semantically equivalent but more concise\nsongRDD.map(_.artist).collect.foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T16:45:43+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117131089_1597309621","id":"20190424-164531_1341922235","dateCreated":"2019-04-24T16:45:31+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34789","dateFinished":"2019-04-24T16:45:43+0200","dateStarted":"2019-04-24T16:45:43+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Beastie Boys\nFrank Sinatra\nMuse\nMuse\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117143473_-1403924955","id":"20190424-164543_1994340469","dateCreated":"2019-04-24T16:45:43+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34902","text":"// this is semantically equivalent but more verbose\ndef artist(s: Song): String = s.artist\n\nsongRDD.map(artist).collect.foreach(println)","dateUpdated":"2019-04-24T16:45:50+0200","dateFinished":"2019-04-24T16:45:50+0200","dateStarted":"2019-04-24T16:45:50+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:41: error: type mismatch;\n found   : Song => String\n required: Song => ?\n       songRDD.map(artist).collect.foreach(println)\n                   ^\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117150624_1139693905","id":"20190424-164550_47552777","dateCreated":"2019-04-24T16:45:50+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35015","text":"%md\n<b><font color='blue'size=5>Python</font>","dateUpdated":"2019-04-24T16:46:03+0200","dateFinished":"2019-04-24T16:46:03+0200","dateStarted":"2019-04-24T16:46:03+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nprint(*songRDD.map(lambda x: x[0]).collect(), sep = '\\n')","user":"anonymous","dateUpdated":"2019-04-24T16:46:10+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117163657_902259325","id":"20190424-164603_387787021","dateCreated":"2019-04-24T16:46:03+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35104","dateFinished":"2019-04-24T16:46:10+0200","dateStarted":"2019-04-24T16:46:10+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md\n### mapPartitions\nCreates a new RDD by applying a function `f` to all *partitions* of the current RDD.","user":"anonymous","dateUpdated":"2019-04-24T16:46:21+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117170761_-2023406917","id":"20190424-164610_517975478","dateCreated":"2019-04-24T16:46:10+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35193","dateFinished":"2019-04-24T16:46:21+0200","dateStarted":"2019-04-24T16:46:21+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>mapPartitions</h3>\n<p>Creates a new RDD by applying a function <code>f</code> to all <em>partitions</em> of the current RDD.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:46:35+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117177874_-405075991","id":"20190424-164617_2019112030","dateCreated":"2019-04-24T16:46:17+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35282","dateFinished":"2019-04-24T16:46:35+0200","dateStarted":"2019-04-24T16:46:35+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nsongRDD.mapPartitions(song => song.map(a => a.artist))\n       .collect\n       .foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T16:46:44+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117195154_-2036703761","id":"20190424-164635_1755470908","dateCreated":"2019-04-24T16:46:35+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35395","dateFinished":"2019-04-24T16:46:44+0200","dateStarted":"2019-04-24T16:46:44+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Beastie Boys\nFrank Sinatra\nMuse\nMuse\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T16:46:53+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117204546_-1135709302","id":"20190424-164644_252579373","dateCreated":"2019-04-24T16:46:44+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35484","dateFinished":"2019-04-24T16:46:53+0200","dateStarted":"2019-04-24T16:46:53+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nsongRDD.mapPartitions(lambda partition: [x[0] for x in partition]).collect()","user":"anonymous","dateUpdated":"2019-04-24T16:46:59+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117213490_-1929384613","id":"20190424-164653_1000339056","dateCreated":"2019-04-24T16:46:53+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35598","dateFinished":"2019-04-24T16:46:59+0200","dateStarted":"2019-04-24T16:46:59+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md\n### mapPartitionsWithIndex\nCreates a new RDD by applying a function `f` to all *partitions* of the current RDD and tracks the index of each partition.","user":"anonymous","dateUpdated":"2019-04-24T16:47:10+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117219722_101529193","id":"20190424-164659_867317345","dateCreated":"2019-04-24T16:46:59+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35687","dateFinished":"2019-04-24T16:47:10+0200","dateStarted":"2019-04-24T16:47:10+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>mapPartitionsWithIndex</h3>\n<p>Creates a new RDD by applying a function <code>f</code> to all <em>partitions</em> of the current RDD and tracks the index of each partition.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:47:20+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117227266_-397579311","id":"20190424-164707_760764841","dateCreated":"2019-04-24T16:47:07+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35776","dateFinished":"2019-04-24T16:47:20+0200","dateStarted":"2019-04-24T16:47:20+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nsongRDD.mapPartitionsWithIndex((index, song) => (song.map(a => a.artist + \" at index \" + index)))\n                              .collect\n                              .foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T16:47:33+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117240234_951749085","id":"20190424-164720_461065472","dateCreated":"2019-04-24T16:47:20+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35889","dateFinished":"2019-04-24T16:47:33+0200","dateStarted":"2019-04-24T16:47:33+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Beastie Boys at index 0\nFrank Sinatra at index 0\nMuse at index 0\nMuse at index 0\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T16:47:43+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117253633_1079704114","id":"20190424-164733_1832365325","dateCreated":"2019-04-24T16:47:33+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:35978","dateFinished":"2019-04-24T16:47:43+0200","dateStarted":"2019-04-24T16:47:43+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\n# same stuff as mapPartitions, just with additional index. The index refers to the partition!\nmyTransformation = songRDD.mapPartitionsWithIndex(lambda idx, partition: ['{} at index {}'.format(x[0], idx) for x in partition])\nprint(*myTransformation.collect(), sep = '\\n') ","user":"anonymous","dateUpdated":"2019-04-24T16:47:49+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117263570_1682398723","id":"20190424-164743_520757229","dateCreated":"2019-04-24T16:47:43+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36092","dateFinished":"2019-04-24T16:47:49+0200","dateStarted":"2019-04-24T16:47:49+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md \n\n#### flatMap\n\nApplies a function `f: (T) => TraversableOnce[U]` to the elements of a RDD and flattens the result.","user":"anonymous","dateUpdated":"2019-04-24T16:48:10+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117269530_251334714","id":"20190424-164749_384903392","dateCreated":"2019-04-24T16:47:49+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36181","dateFinished":"2019-04-24T16:48:10+0200","dateStarted":"2019-04-24T16:48:10+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>flatMap</h4>\n<p>Applies a function <code>f: (T) =&gt; TraversableOnce[U]</code> to the elements of a RDD and flattens the result.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:48:19+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117290027_254668863","id":"20190424-164810_116970684","dateCreated":"2019-04-24T16:48:10+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36270","dateFinished":"2019-04-24T16:48:19+0200","dateStarted":"2019-04-24T16:48:19+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nsongRDD.flatMap(_.artist.split(\" \")).collect.foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T16:48:31+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117299090_1570260304","id":"20190424-164819_480696606","dateCreated":"2019-04-24T16:48:19+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36360","dateFinished":"2019-04-24T16:48:31+0200","dateStarted":"2019-04-24T16:48:31+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Beastie\nBoys\nFrank\nSinatra\nMuse\nMuse\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=4"],"interpreterSettingId":"spark"}}},{"text":"// flatMap vs. map\nval withMap = songRDD.map(_.artist.split(\" \")).collect\nval withFlatMap = songRDD.flatMap(_.artist.split(\" \")).collect","user":"anonymous","dateUpdated":"2019-04-24T16:48:46+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117311306_-2116134412","id":"20190424-164831_646211793","dateCreated":"2019-04-24T16:48:31+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36449","dateFinished":"2019-04-24T16:48:47+0200","dateStarted":"2019-04-24T16:48:46+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"withMap: Array[Array[String]] = Array(Array(Beastie, Boys), Array(Frank, Sinatra), Array(Muse), Array(Muse))\nwithFlatMap: Array[String] = Array(Beastie, Boys, Frank, Sinatra, Muse, Muse)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=5","http://192.168.178.200:4040/jobs/job?id=6"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117326795_-680584083","id":"20190424-164846_1644244362","dateCreated":"2019-04-24T16:48:46+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36562","text":"%md\n<b><font color='blue'size=5>Python</font>","dateUpdated":"2019-04-24T16:48:57+0200","dateFinished":"2019-04-24T16:48:57+0200","dateStarted":"2019-04-24T16:48:57+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nf = lambda x: str(x[0]).split(' ')\nprint(*songRDD.map(f).collect(), sep = '\\n')\nprint('\\n')\nprint(*songRDD.flatMap(f).collect(), sep = '\\n')","user":"anonymous","dateUpdated":"2019-04-24T16:49:03+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117337122_375180913","id":"20190424-164857_1740391552","dateCreated":"2019-04-24T16:48:57+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36678","dateFinished":"2019-04-24T16:49:03+0200","dateStarted":"2019-04-24T16:49:03+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 2, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 2, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md \n\n#### filter\nCreate a new RDD containing only those elements for which `f` returns `true`.\n","user":"anonymous","dateUpdated":"2019-04-24T16:49:11+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117343867_1086099405","id":"20190424-164903_2059339109","dateCreated":"2019-04-24T16:49:03+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36767","dateFinished":"2019-04-24T16:49:11+0200","dateStarted":"2019-04-24T16:49:11+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>filter</h4>\n<p>Create a new RDD containing only those elements for which <code>f</code> returns <code>true</code>.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:49:21+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117351138_-2012319569","id":"20190424-164911_513846320","dateCreated":"2019-04-24T16:49:11+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36856","dateFinished":"2019-04-24T16:49:21+0200","dateStarted":"2019-04-24T16:49:21+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nsongRDD.filter(s => s.loudness > -8.0).collect","user":"anonymous","dateUpdated":"2019-04-24T16:49:43+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117361338_-1847056699","id":"20190424-164921_138118664","dateCreated":"2019-04-24T16:49:21+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:36946","dateFinished":"2019-04-24T16:49:43+0200","dateStarted":"2019-04-24T16:49:43+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res53: Array[Song] = Array(Song(Beastie Boys,-5.0), Song(Muse,-7.0), Song(Muse,-6.0))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=9"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117369867_-1246722977","id":"20190424-164929_56039700","dateCreated":"2019-04-24T16:49:29+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37036","text":"%md\n<b><font color='blue'size=5>Python</font>","dateUpdated":"2019-04-24T16:49:57+0200","dateFinished":"2019-04-24T16:49:57+0200","dateStarted":"2019-04-24T16:49:57+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\n# we could use names instead of positions (x[0] or x[1]) if we decided to go with the pyspark Row object instead of a tuple\nsongRDD.filter(lambda x: x[1] > -8.0).collect()","user":"anonymous","dateUpdated":"2019-04-24T16:50:03+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117397411_-2058464259","id":"20190424-164957_698676761","dateCreated":"2019-04-24T16:49:57+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37239","dateFinished":"2019-04-24T16:50:03+0200","dateStarted":"2019-04-24T16:50:03+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md\n### Examplary RDD transformations involving shuffling\n\n*   `groupByKey`: Works on a collection of Key-Values pairs and returns a Map with a list of all values for each key.\n\n*   `reduceByKey`: Works on a collection of Key-Values pairs and merges the values for each key using an associative and commutative reduce function.\n\n*   `sortBy`: Sort Dataset by a specified function.\n\n*   `repartition`: Partitions the dataset into the manually specified number of partitions.","user":"anonymous","dateUpdated":"2019-04-24T16:51:49+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117403931_66730049","id":"20190424-165003_1648997800","dateCreated":"2019-04-24T16:50:03+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37328","dateFinished":"2019-04-24T16:51:49+0200","dateStarted":"2019-04-24T16:51:49+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Examplary RDD transformations involving shuffling</h3>\n<ul>\n  <li>\n  <p><code>groupByKey</code>: Works on a collection of Key-Values pairs and returns a Map with a list of all values for each key.</p></li>\n  <li>\n  <p><code>reduceByKey</code>: Works on a collection of Key-Values pairs and merges the values for each key using an associative and commutative reduce function.</p></li>\n  <li>\n  <p><code>sortBy</code>: Sort Dataset by a specified function.</p></li>\n  <li>\n  <p><code>repartition</code>: Partitions the dataset into the manually specified number of partitions.</p></li>\n</ul>\n</div>"}]}},{"text":"%md\n#### groupByKey\nGroup the values for each key in the RDD into a single sequence.","user":"anonymous","dateUpdated":"2019-04-24T16:52:03+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117509779_-1290779368","id":"20190424-165149_67196361","dateCreated":"2019-04-24T16:51:49+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37417","dateFinished":"2019-04-24T16:52:03+0200","dateStarted":"2019-04-24T16:52:03+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>groupByKey</h4>\n<p>Group the values for each key in the RDD into a single sequence.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:52:13+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117523578_-538798849","id":"20190424-165203_1534480763","dateCreated":"2019-04-24T16:52:03+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37507","dateFinished":"2019-04-24T16:52:13+0200","dateStarted":"2019-04-24T16:52:13+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\n// 'keyBy' creates RDD containing key-value pairs, so called PairRDD´s by applying a function. Similar to creating a tuple using `map`.\nval songPairRDD = songRDD.keyBy(_.artist)        //.map(song => (song.artist, song))\nsongPairRDD.collect.foreach(println)\n\nprintln(\"##############################\")\n\nsongPairRDD.groupByKey\n           .collect.foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T16:52:31+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117533100_-432101779","id":"20190424-165213_2055988822","dateCreated":"2019-04-24T16:52:13+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37597","dateFinished":"2019-04-24T16:52:31+0200","dateStarted":"2019-04-24T16:52:31+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(Beastie Boys,Song(Beastie Boys,-5.0))\n(Frank Sinatra,Song(Frank Sinatra,-10.0))\n(Muse,Song(Muse,-7.0))\n(Muse,Song(Muse,-6.0))\n##############################\n(Beastie Boys,CompactBuffer(Song(Beastie Boys,-5.0)))\n(Frank Sinatra,CompactBuffer(Song(Frank Sinatra,-10.0)))\n(Muse,CompactBuffer(Song(Muse,-7.0), Song(Muse,-6.0)))\nsongPairRDD: org.apache.spark.rdd.RDD[(String, Song)] = MapPartitionsRDD[15] at keyBy at <console>:37\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=10","http://192.168.178.200:4040/jobs/job?id=11"],"interpreterSettingId":"spark"}}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T16:53:11+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117551108_-1542638793","id":"20190424-165231_1901045190","dateCreated":"2019-04-24T16:52:31+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37686","dateFinished":"2019-04-24T16:53:11+0200","dateStarted":"2019-04-24T16:53:11+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\n# we group by the first element in the iterable \nprint(*songRDD.groupByKey().collect(), sep='\\n')\nprint('\\n')\n# now, turn the iterable object into a tuple, so we can see the actual values\nprint(*songRDD.groupByKey().mapValues(tuple).collect(), sep='\\n')","user":"anonymous","dateUpdated":"2019-04-24T16:53:19+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117591516_-1072039117","id":"20190424-165311_276236066","dateCreated":"2019-04-24T16:53:11+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37802","dateFinished":"2019-04-24T16:53:19+0200","dateStarted":"2019-04-24T16:53:19+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md\n#### reduceByKey\n\nMerge the values belonging to a key by applying a reduce function `f`. `f` is applied locally (each worker) first. Afterwards the already reduced data is shuffled and `f` is applied again to obtain the final result.\n\n`f` must be *associative* and *commutative*. Thus `f` must satisfy the following properties:\n\n*   `f(f(x, y), z) = f(x, f(y, z))` (associativity)\n*   `f(x, y) = f(y, x)` (commutativity)","user":"anonymous","dateUpdated":"2019-04-24T16:53:28+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117599739_1989230695","id":"20190424-165319_1621637736","dateCreated":"2019-04-24T16:53:19+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37891","dateFinished":"2019-04-24T16:53:28+0200","dateStarted":"2019-04-24T16:53:28+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>reduceByKey</h4>\n<p>Merge the values belonging to a key by applying a reduce function <code>f</code>. <code>f</code> is applied locally (each worker) first. Afterwards the already reduced data is shuffled and <code>f</code> is applied again to obtain the final result.</p>\n<p><code>f</code> must be <em>associative</em> and <em>commutative</em>. Thus <code>f</code> must satisfy the following properties:</p>\n<ul>\n  <li><code>f(f(x, y), z) = f(x, f(y, z))</code> (associativity)</li>\n  <li><code>f(x, y) = f(y, x)</code> (commutativity)</li>\n</ul>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:53:40+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117608924_1436961629","id":"20190424-165328_1534478641","dateCreated":"2019-04-24T16:53:28+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:37980","dateFinished":"2019-04-24T16:53:40+0200","dateStarted":"2019-04-24T16:53:40+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nval totalLoudnessByArtist = songRDD.map(song => (song.artist, song.loudness))\n                                   .reduceByKey(_ + _)\n                                   .collect\n                                   .foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T16:53:53+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117620172_2030749994","id":"20190424-165340_448545818","dateCreated":"2019-04-24T16:53:40+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38070","dateFinished":"2019-04-24T16:53:54+0200","dateStarted":"2019-04-24T16:53:53+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(Beastie Boys,-5.0)\n(Frank Sinatra,-10.0)\n(Muse,-13.0)\ntotalLoudnessByArtist: Unit = ()\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=12"],"interpreterSettingId":"spark"}}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T16:54:03+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117633884_724493053","id":"20190424-165353_857413129","dateCreated":"2019-04-24T16:53:53+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38159","dateFinished":"2019-04-24T16:54:03+0200","dateStarted":"2019-04-24T16:54:03+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\n# recall, the key is by default the first element in the tuple\nsongRDD.reduceByKey(lambda accum, addMe: accum + addMe).collect()","user":"anonymous","dateUpdated":"2019-04-24T16:54:08+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117643316_-1432139919","id":"20190424-165403_1080844924","dateCreated":"2019-04-24T16:54:03+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38273","dateFinished":"2019-04-24T16:54:08+0200","dateStarted":"2019-04-24T16:54:08+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md \n\n#### sortBy\n\nSort a RDD by the values returned by the function `f`.","user":"anonymous","dateUpdated":"2019-04-24T16:54:27+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117648636_1190796424","id":"20190424-165408_325478124","dateCreated":"2019-04-24T16:54:08+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38362","dateFinished":"2019-04-24T16:54:27+0200","dateStarted":"2019-04-24T16:54:27+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>sortBy</h4>\n<p>Sort a RDD by the values returned by the function <code>f</code>.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:55:43+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117667507_-847661704","id":"20190424-165427_271637576","dateCreated":"2019-04-24T16:54:27+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38451","dateFinished":"2019-04-24T16:55:43+0200","dateStarted":"2019-04-24T16:55:43+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nval unsorted = songRDD.collect\n                      .foreach(println)\n\nprintln(\"####################################\")\n\nval sorted = songRDD.sortBy(song => song.artist, false)\n                    .collect\n                    .foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T16:55:58+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117743499_-283119478","id":"20190424-165543_1388341772","dateCreated":"2019-04-24T16:55:43+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38541","dateFinished":"2019-04-24T16:55:58+0200","dateStarted":"2019-04-24T16:55:58+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Song(Beastie Boys,-5.0)\nSong(Frank Sinatra,-10.0)\nSong(Muse,-7.0)\nSong(Muse,-6.0)\n####################################\nSong(Muse,-7.0)\nSong(Muse,-6.0)\nSong(Frank Sinatra,-10.0)\nSong(Beastie Boys,-5.0)\nunsorted: Unit = ()\nsorted: Unit = ()\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=15","http://192.168.178.200:4040/jobs/job?id=16"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117749757_-323091534","id":"20190424-165549_1176757453","dateCreated":"2019-04-24T16:55:49+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38631","text":"%md\n<b><font color='blue'size=5>Python</font>","dateUpdated":"2019-04-24T16:56:16+0200","dateFinished":"2019-04-24T16:56:16+0200","dateStarted":"2019-04-24T16:56:16+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\n# unsorted\nprint(*songRDD.collect(), sep='\\n')\nprint('\\n')\n# sort by key (first element in our tuple)\nprint(*songRDD.sortBy(lambda x: x[0], ascending = False).collect(), sep = '\\n')","user":"anonymous","dateUpdated":"2019-04-24T16:56:23+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117776075_367401646","id":"20190424-165616_832316011","dateCreated":"2019-04-24T16:56:16+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38800","dateFinished":"2019-04-24T16:56:23+0200","dateStarted":"2019-04-24T16:56:23+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md\n\n#### repartition\n\nCreate a RDD that has exactly `numPartitions` partitions.","user":"anonymous","dateUpdated":"2019-04-24T16:56:33+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117783803_-930899529","id":"20190424-165623_1225704734","dateCreated":"2019-04-24T16:56:23+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38889","dateFinished":"2019-04-24T16:56:33+0200","dateStarted":"2019-04-24T16:56:33+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>repartition</h4>\n<p>Create a RDD that has exactly <code>numPartitions</code> partitions.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:56:41+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117793243_-1701984403","id":"20190424-165633_215023255","dateCreated":"2019-04-24T16:56:33+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38978","dateFinished":"2019-04-24T16:56:41+0200","dateStarted":"2019-04-24T16:56:41+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nval initialPartitions = songRDD.getNumPartitions\nval afterRepartition = songRDD.repartition(1).getNumPartitions","user":"anonymous","dateUpdated":"2019-04-24T16:56:54+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117801204_943105532","id":"20190424-165641_862428268","dateCreated":"2019-04-24T16:56:41+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39068","dateFinished":"2019-04-24T16:56:54+0200","dateStarted":"2019-04-24T16:56:54+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"initialPartitions: Int = 1\nafterRepartition: Int = 1\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117807444_-1650195562","id":"20190424-165647_758340996","dateCreated":"2019-04-24T16:56:47+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39158","text":"%md\n<b><font color='blue'size=5>Python</font>","dateUpdated":"2019-04-24T16:57:05+0200","dateFinished":"2019-04-24T16:57:05+0200","dateStarted":"2019-04-24T16:57:05+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nprint('Before Repartitioning: {}'.format(songRDD.getNumPartitions()))\nprint('After Repartitioning: {}'.format(songRDD.repartition(1).getNumPartitions()))","user":"anonymous","dateUpdated":"2019-04-24T16:57:10+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117825660_-1220796893","id":"20190424-165705_299314566","dateCreated":"2019-04-24T16:57:05+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39296","dateFinished":"2019-04-24T16:57:10+0200","dateStarted":"2019-04-24T16:57:10+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md\n### Examplary RDD actions\n\n*   `collect`: Return all the elements of the dataset as an array at the driver program.\n\n*   `count`: Count the number of elements in the dataset.\n\n*   `reduce`: Aggregate the elements of the dataset using a self-defined function.\n\n*   `foreach`: Run a self-defined function on each element in the dataset.","user":"anonymous","dateUpdated":"2019-04-24T16:57:17+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117830629_-1619298256","id":"20190424-165710_1690085944","dateCreated":"2019-04-24T16:57:10+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39385","dateFinished":"2019-04-24T16:57:17+0200","dateStarted":"2019-04-24T16:57:17+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Examplary RDD actions</h3>\n<ul>\n  <li>\n  <p><code>collect</code>: Return all the elements of the dataset as an array at the driver program.</p></li>\n  <li>\n  <p><code>count</code>: Count the number of elements in the dataset.</p></li>\n  <li>\n  <p><code>reduce</code>: Aggregate the elements of the dataset using a self-defined function.</p></li>\n  <li>\n  <p><code>foreach</code>: Run a self-defined function on each element in the dataset.</p></li>\n</ul>\n</div>"}]}},{"text":"%md \n#### collect\n\nReturn all elements of the RDD or Dataset as an array to the driver program.","user":"anonymous","dateUpdated":"2019-04-24T16:57:24+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117837860_2116623995","id":"20190424-165717_541709283","dateCreated":"2019-04-24T16:57:17+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39474","dateFinished":"2019-04-24T16:57:24+0200","dateStarted":"2019-04-24T16:57:24+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>collect</h4>\n<p>Return all elements of the RDD or Dataset as an array to the driver program.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:57:33+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117844644_385099947","id":"20190424-165724_1393967634","dateCreated":"2019-04-24T16:57:24+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39564","dateFinished":"2019-04-24T16:57:33+0200","dateStarted":"2019-04-24T16:57:33+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nsongRDD.collect","user":"anonymous","dateUpdated":"2019-04-24T16:57:50+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117853476_220942736","id":"20190424-165733_2116791431","dateCreated":"2019-04-24T16:57:33+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39654","dateFinished":"2019-04-24T16:57:51+0200","dateStarted":"2019-04-24T16:57:50+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res56: Array[Song] = Array(Song(Beastie Boys,-5.0), Song(Frank Sinatra,-10.0), Song(Muse,-7.0), Song(Muse,-6.0))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=18"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117862220_878747549","id":"20190424-165742_1361376887","dateCreated":"2019-04-24T16:57:42+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39743","text":"%md\n<b><font color='blue'size=5>Python</font>","dateUpdated":"2019-04-24T16:58:00+0200","dateFinished":"2019-04-24T16:58:00+0200","dateStarted":"2019-04-24T16:58:00+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nsongRDD.collect()","user":"anonymous","dateUpdated":"2019-04-24T16:58:06+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117880716_209579353","id":"20190424-165800_784151006","dateCreated":"2019-04-24T16:58:00+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39908","dateFinished":"2019-04-24T16:58:06+0200","dateStarted":"2019-04-24T16:58:06+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md \n#### count\n\nCount the number of elements in the RDD or Dataset","user":"anonymous","dateUpdated":"2019-04-24T16:58:15+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117886916_-1140874443","id":"20190424-165806_1358866061","dateCreated":"2019-04-24T16:58:06+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:39997","dateFinished":"2019-04-24T16:58:15+0200","dateStarted":"2019-04-24T16:58:15+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>count</h4>\n<p>Count the number of elements in the RDD or Dataset</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:58:24+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117895012_967713726","id":"20190424-165815_89846959","dateCreated":"2019-04-24T16:58:15+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40086","dateFinished":"2019-04-24T16:58:24+0200","dateStarted":"2019-04-24T16:58:24+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nsongRDD.count","user":"anonymous","dateUpdated":"2019-04-24T16:58:38+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117904877_506994225","id":"20190424-165824_1711166050","dateCreated":"2019-04-24T16:58:24+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40176","dateFinished":"2019-04-24T16:58:38+0200","dateStarted":"2019-04-24T16:58:38+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res57: Long = 4\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=19"],"interpreterSettingId":"spark"}}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T16:58:49+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117918499_327300624","id":"20190424-165838_945755043","dateCreated":"2019-04-24T16:58:38+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40265","dateFinished":"2019-04-24T16:58:49+0200","dateStarted":"2019-04-24T16:58:49+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nsongRDD.count()","user":"anonymous","dateUpdated":"2019-04-24T16:58:56+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117929004_-1665797622","id":"20190424-165849_1458253661","dateCreated":"2019-04-24T16:58:49+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40370","dateFinished":"2019-04-24T16:58:56+0200","dateStarted":"2019-04-24T16:58:56+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md \n#### reduce\n\nAggregate the elements of the dataset using the function `f`. Note that `f` must be *associative* and *commutative*.","user":"anonymous","dateUpdated":"2019-04-24T16:59:05+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117936654_-1561412706","id":"20190424-165856_583208975","dateCreated":"2019-04-24T16:58:56+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40459","dateFinished":"2019-04-24T16:59:05+0200","dateStarted":"2019-04-24T16:59:05+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>reduce</h4>\n<p>Aggregate the elements of the dataset using the function <code>f</code>. Note that <code>f</code> must be <em>associative</em> and <em>commutative</em>.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T16:59:17+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117945861_-1562005827","id":"20190424-165905_1993527109","dateCreated":"2019-04-24T16:59:05+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40548","dateFinished":"2019-04-24T16:59:17+0200","dateStarted":"2019-04-24T16:59:17+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nval songLoudness = songRDD.map(song => song.loudness)\nsongLoudness.reduce(_ + _)","user":"anonymous","dateUpdated":"2019-04-24T16:59:29+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117956957_2128407573","id":"20190424-165916_355637872","dateCreated":"2019-04-24T16:59:16+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40638","dateFinished":"2019-04-24T16:59:29+0200","dateStarted":"2019-04-24T16:59:29+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"songLoudness: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[33] at map at <console>:36\nres58: Double = -28.0\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=20"],"interpreterSettingId":"spark"}}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T16:59:38+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117969525_843901216","id":"20190424-165929_1930164406","dateCreated":"2019-04-24T16:59:29+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40727","dateFinished":"2019-04-24T16:59:38+0200","dateStarted":"2019-04-24T16:59:38+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nsongRDD.map(lambda x: x[1]).reduce(lambda accum, addMe: accum + addMe)","user":"anonymous","dateUpdated":"2019-04-24T16:59:44+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117978469_1140138575","id":"20190424-165938_112752037","dateCreated":"2019-04-24T16:59:38+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40841","dateFinished":"2019-04-24T16:59:44+0200","dateStarted":"2019-04-24T16:59:44+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md \nIf `f` is not *associative* and *commutative* the result is non-deterministic.\n","user":"anonymous","dateUpdated":"2019-04-24T16:59:53+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117984861_-1369605050","id":"20190424-165944_1498056929","dateCreated":"2019-04-24T16:59:44+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40930","dateFinished":"2019-04-24T16:59:53+0200","dateStarted":"2019-04-24T16:59:53+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>If <code>f</code> is not <em>associative</em> and <em>commutative</em> the result is non-deterministic.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T17:00:02+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556117993501_1310132197","id":"20190424-165953_1693664106","dateCreated":"2019-04-24T16:59:53+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41019","dateFinished":"2019-04-24T17:00:02+0200","dateStarted":"2019-04-24T17:00:02+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nsongLoudness.reduce(_ - _)","user":"anonymous","dateUpdated":"2019-04-24T17:00:19+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118002612_26972516","id":"20190424-170002_540114804","dateCreated":"2019-04-24T17:00:02+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41109","dateFinished":"2019-04-24T17:00:19+0200","dateStarted":"2019-04-24T17:00:19+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res59: Double = 18.0\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=21"],"interpreterSettingId":"spark"}}},{"text":"%spark\nsongLoudness.repartition(2).reduce(_ - _)","user":"anonymous","dateUpdated":"2019-04-24T17:00:30+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118019038_-1737438280","id":"20190424-170019_1286335245","dateCreated":"2019-04-24T17:00:19+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41198","dateFinished":"2019-04-24T17:00:30+0200","dateStarted":"2019-04-24T17:00:30+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res60: Double = 6.0\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=22"],"interpreterSettingId":"spark"}}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T17:00:41+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118030357_-767859743","id":"20190424-170030_1014736459","dateCreated":"2019-04-24T17:00:30+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41311","dateFinished":"2019-04-24T17:00:41+0200","dateStarted":"2019-04-24T17:00:41+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nsongRDD.map(lambda x: x[1]).reduce(lambda accum, delMe: accum - delMe)","user":"anonymous","dateUpdated":"2019-04-24T17:00:56+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118041781_313805060","id":"20190424-170041_1800184599","dateCreated":"2019-04-24T17:00:41+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41425","dateFinished":"2019-04-24T17:00:56+0200","dateStarted":"2019-04-24T17:00:56+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%python\nsongRDD.repartition(2).map(lambda x: x[1]).reduce(lambda accum, delMe: accum - delMe)","user":"anonymous","dateUpdated":"2019-04-24T17:01:16+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118051126_-185895960","id":"20190424-170051_880501761","dateCreated":"2019-04-24T17:00:51+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41514","dateFinished":"2019-04-24T17:01:16+0200","dateStarted":"2019-04-24T17:01:16+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'songRDD' is not defined\n\n"}]}},{"text":"%md \n#### foreach\n\nApply a function `f` to each element in the RDD. `f` is executed for side-effects only. The return-value of `f` is ignored.","user":"anonymous","dateUpdated":"2019-04-24T17:01:25+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118076061_-2137468720","id":"20190424-170116_1567664464","dateCreated":"2019-04-24T17:01:16+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41618","dateFinished":"2019-04-24T17:01:25+0200","dateStarted":"2019-04-24T17:01:25+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>foreach</h4>\n<p>Apply a function <code>f</code> to each element in the RDD. <code>f</code> is executed for side-effects only. The return-value of <code>f</code> is ignored.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T17:01:36+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118085094_-1834342234","id":"20190424-170125_1350031129","dateCreated":"2019-04-24T17:01:25+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41707","dateFinished":"2019-04-24T17:01:36+0200","dateStarted":"2019-04-24T17:01:36+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\nvar artists = spark.sparkContext.collectionAccumulator[String]\n\nsongRDD\n  .repartition(1)\n  .foreach(s => artists.add(s.artist))\n\nartists.value    //return value is ignored","user":"anonymous","dateUpdated":"2019-04-24T17:01:54+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118096621_-922647408","id":"20190424-170136_2069416197","dateCreated":"2019-04-24T17:01:36+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41797","dateFinished":"2019-04-24T17:01:54+0200","dateStarted":"2019-04-24T17:01:54+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"artists: org.apache.spark.util.CollectionAccumulator[String] = CollectionAccumulator(id: 745, name: None, value: [Beastie Boys, Frank Sinatra, Muse, Muse])\nres62: java.util.List[String] = [Beastie Boys, Frank Sinatra, Muse, Muse]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=24"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118106149_-356230193","id":"20190424-170146_916496680","dateCreated":"2019-04-24T17:01:46+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:41887","text":"%md\n<b><font color='blue'size=5>Python</font>","dateUpdated":"2019-04-24T17:02:08+0200","dateFinished":"2019-04-24T17:02:08+0200","dateStarted":"2019-04-24T17:02:08+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python \n# pyspark provides only accumulators for numeric types...\nfrom pyspark.accumulators import AccumulatorParam\n\n# let's inherite & overwrite a few functions\nclass IteratorAccumulatorParam(AccumulatorParam):\n  \n    def zero(self, value):\n        return value\n      \n    def addInPlace(self, val1, val2):\n        return val1 + val2\n\nartists = sc.accumulator(list(), IteratorAccumulatorParam())\n\n# and a little helper function\ndef f(x): artists.add([x[0]])\n\nsongRDD.foreach(f)\nprint(artists.value)","user":"anonymous","dateUpdated":"2019-04-24T17:02:15+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118128126_814245891","id":"20190424-170208_1367727542","dateCreated":"2019-04-24T17:02:08+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42055","dateFinished":"2019-04-24T17:02:15+0200","dateStarted":"2019-04-24T17:02:15+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nModuleNotFoundError: No module named 'pyspark'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nModuleNotFoundError: No module named 'pyspark'\n\n"}]}},{"text":"%md\n## 2.2.4 Group Exercise\nTake messySongRDD and for each Sequence in the RDD, return all strings from that sequence.","user":"anonymous","dateUpdated":"2019-04-24T17:02:26+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118135526_-1857212196","id":"20190424-170215_325395611","dateCreated":"2019-04-24T17:02:15+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42144","dateFinished":"2019-04-24T17:02:26+0200","dateStarted":"2019-04-24T17:02:26+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>2.2.4 Group Exercise</h2>\n<p>Take messySongRDD and for each Sequence in the RDD, return all strings from that sequence.</p>\n</div>"}]}},{"text":"%md\n<b><font color='vermilion'size=5>Scala</font>","user":"anonymous","dateUpdated":"2019-04-24T17:02:36+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118143222_361349811","id":"20190424-170223_676191105","dateCreated":"2019-04-24T17:02:23+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42233","dateFinished":"2019-04-24T17:02:36+0200","dateStarted":"2019-04-24T17:02:36+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\n// create standard Scala array with sequences of differing structure and length\nval messySongArray = Array(\n  Seq(-5.0, \"Beastie Boys\"), \n  Seq(\"Frank Sinatra\", -10.0), \n  Seq(1, 2, 3, \"Muse\", -7.0)\n)\n\n// create RDD from messySongArray\nval messySongRDD = sc.parallelize(messySongArray)\n\nmessySongRDD.collect.foreach(println)\n\n// which is automatically distributed on n partitions\nval n = messySongRDD.getNumPartitions","user":"anonymous","dateUpdated":"2019-04-24T17:02:52+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118156670_-1559511697","id":"20190424-170236_1666353346","dateCreated":"2019-04-24T17:02:36+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42346","dateFinished":"2019-04-24T17:02:53+0200","dateStarted":"2019-04-24T17:02:52+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"List(-5.0, Beastie Boys)\nList(Frank Sinatra, -10.0)\nList(1, 2, 3, Muse, -7.0)\nmessySongArray: Array[Seq[Any]] = Array(List(-5.0, Beastie Boys), List(Frank Sinatra, -10.0), List(1, 2, 3, Muse, -7.0))\nmessySongRDD: org.apache.spark.rdd.RDD[Seq[Any]] = ParallelCollectionRDD[46] at parallelize at <console>:39\nn: Int = 1\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=25"],"interpreterSettingId":"spark"}}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T17:03:03+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118172854_-406547625","id":"20190424-170252_1440874513","dateCreated":"2019-04-24T17:02:52+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42435","dateFinished":"2019-04-24T17:03:03+0200","dateStarted":"2019-04-24T17:03:03+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nmessySongRDD = sc.parallelize([(-5.0, 'Beastie Boys'), ('Frank Sinatra', -10.0), (1,2,3,'Muse', -7.0)])\nprint(messySongRDD.collect(), sep='\\n')\nn = messySongRDD.getNumPartitions()\nprint('Partitions: {}'.format(n))","user":"anonymous","dateUpdated":"2019-04-24T17:03:09+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118183030_-867778165","id":"20190424-170303_656957778","dateCreated":"2019-04-24T17:03:03+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42549","dateFinished":"2019-04-24T17:03:09+0200","dateStarted":"2019-04-24T17:03:09+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\n"}]}},{"text":"%md\n### Group Exercise Solution","user":"anonymous","dateUpdated":"2019-04-24T17:03:20+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118189294_974889735","id":"20190424-170309_76737662","dateCreated":"2019-04-24T17:03:09+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42638","dateFinished":"2019-04-24T17:03:20+0200","dateStarted":"2019-04-24T17:03:20+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Group Exercise Solution</h3>\n</div>"}]}},{"text":"//Please add your solution here\n","user":"anonymous","dateUpdated":"2019-04-24T17:03:29+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118195862_1999503750","id":"20190424-170315_1360912125","dateCreated":"2019-04-24T17:03:15+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42727","dateFinished":"2019-04-24T17:03:29+0200","dateStarted":"2019-04-24T17:03:29+0200","results":{"code":"SUCCESS","msg":[]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118209166_1468483501","id":"20190424-170329_1031409891","dateCreated":"2019-04-24T17:03:29+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42839","text":"%md\n<b><font color='vermilion'size=5>Scala</font>","dateUpdated":"2019-04-24T17:03:43+0200","dateFinished":"2019-04-24T17:03:43+0200","dateStarted":"2019-04-24T17:03:43+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='vermilion'size=5>Scala</font></p>\n</div>"}]}},{"text":"%spark\n//'flatMap' with filter taking the 'isInstanceOf' function\nmessySongRDD.flatMap(_.filter( _.isInstanceOf[String]))\n            .collect\n            .foreach(println)\n\nprintln(\"###############################\")\n\n//Alternatively:\n//write function with a pattern matching\ndef isString(x: Any): Boolean = x match {\n  case x: String => true\n  case _ => false  \n}\n//apply function to 'messySongRDD'\nmessySongRDD.map(songSeq => songSeq.filter(isString)(0))\n            .collect\n            .foreach(println)","user":"anonymous","dateUpdated":"2019-04-24T17:03:50+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118223207_-367113067","id":"20190424-170343_1217734032","dateCreated":"2019-04-24T17:03:43+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42912","dateFinished":"2019-04-24T17:03:50+0200","dateStarted":"2019-04-24T17:03:50+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Beastie Boys\nFrank Sinatra\nMuse\n###############################\nBeastie Boys\nFrank Sinatra\nMuse\nisString: (x: Any)Boolean\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.178.200:4040/jobs/job?id=26","http://192.168.178.200:4040/jobs/job?id=27"],"interpreterSettingId":"spark"}}},{"text":"%spark\n//Please add your solution in here","user":"anonymous","dateUpdated":"2019-04-24T17:04:11+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118230502_1026110829","id":"20190424-170350_332947504","dateCreated":"2019-04-24T17:03:50+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:43001","dateFinished":"2019-04-24T17:04:11+0200","dateStarted":"2019-04-24T17:04:11+0200","results":{"code":"SUCCESS","msg":[]}},{"text":"%md\n<b><font color='blue'size=5>Python</font>","user":"anonymous","dateUpdated":"2019-04-24T17:04:24+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118251215_-23076890","id":"20190424-170411_1049365215","dateCreated":"2019-04-24T17:04:11+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:43116","dateFinished":"2019-04-24T17:04:24+0200","dateStarted":"2019-04-24T17:04:24+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><b><font color='blue'size=5>Python</font></p>\n</div>"}]}},{"text":"%python\nstringsOnly = messySongRDD.flatMap(lambda element: element).filter(lambda element: type(element) == str).collect()\nprint(*stringsOnly, sep = '\\n')","user":"anonymous","dateUpdated":"2019-04-24T17:04:30+0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1556118264839_-243074859","id":"20190424-170424_402635312","dateCreated":"2019-04-24T17:04:24+0200","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:43189","dateFinished":"2019-04-24T17:04:31+0200","dateStarted":"2019-04-24T17:04:31+0200","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'messySongRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-9202459694796226681.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'messySongRDD' is not defined\n\n"}]}}],"name":"/2. Operations: Transformations & Actions/2.2 RDD: Transformations & Actions","id":"2E9XYNCK2","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"python:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}