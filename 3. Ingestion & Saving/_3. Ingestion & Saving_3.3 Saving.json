{"paragraphs":[{"text":"%md <img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>","user":"anonymous","dateUpdated":"2019-05-21T08:45:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346340_895058725","id":"20190424-175326_1524654233","dateCreated":"2019-05-21T08:45:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:23428"},{"text":"%md\n# 3.3 Saving","user":"anonymous","dateUpdated":"2019-05-21T08:45:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>3.3 Saving</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346340_685327946","id":"20190424-175336_451239144","dateCreated":"2019-05-21T08:45:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:23429"},{"text":"%md\n***3.3.1 Saving DataFrames and Datasets***\n\n* Common `.DataFrameWriter` settings\n\n* Example for saving DataFrames and Datasets\n\n***3.3.2 Saving RDDs***\n\n* Saving RDDs as text files with `.saveAsTextFile` or with `.saveAsHadoopFile`for other file formats\n\n* Example for RDD ingestion out of a single text file","user":"anonymous","dateUpdated":"2019-05-21T08:45:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>3.3.1 Saving DataFrames and Datasets</em></strong></p>\n<ul>\n  <li>\n  <p>Common <code>.DataFrameWriter</code> settings</p></li>\n  <li>\n  <p>Example for saving DataFrames and Datasets</p></li>\n</ul>\n<p><strong><em>3.3.2 Saving RDDs</em></strong></p>\n<ul>\n  <li>\n  <p>Saving RDDs as text files with <code>.saveAsTextFile</code> or with <code>.saveAsHadoopFile</code>for other file formats</p></li>\n  <li>\n  <p>Example for RDD ingestion out of a single text file</p></li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346341_1947842296","id":"20190424-175347_1997058411","dateCreated":"2019-05-21T08:45:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:23430"},{"text":"%md\n## 3.3.1 Saving Dataframes and Datasets\n\nA DataFrame can be saved with `.write` which creates a `DataFrameWriter` object.\nWith the settings of the `DataFrameWriter` it´s possbile to influence the process of saving data.\n\nDatasets get saved as DataFrames.","user":"anonymous","dateUpdated":"2019-05-21T08:45:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>3.3.1 Saving Dataframes and Datasets</h2>\n<p>A DataFrame can be saved with <code>.write</code> which creates a <code>DataFrameWriter</code> object.<br/>With the settings of the <code>DataFrameWriter</code> it´s possbile to influence the process of saving data.</p>\n<p>Datasets get saved as DataFrames.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346341_889863255","id":"20190424-175356_159849096","dateCreated":"2019-05-21T08:45:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:23431"},{"text":"%md\n### Common DataFrameWriter settings\n\n*   `.format`: Specifies the type of the data source (e.g. CSV, JSON, Parquet, etc.)\n\n*   `.mode`: Specifies the handling if directory and/or file respectively table already exists (e.g. error, overwrite, append, ignore)\n\n*   `.partitionBy`: Specifies the partitioning of the data\n\n*   `.option`: Additional key-value settings (e.g. \"Header\",\"true\")\n\n*   `.save`:   For saving data to files. `.save` without `.format` reads in Parquet as default.\n\n*   `.saveAsTable`:  For saving data out as Hive tables\n\n*   `.csv`, `.json`, etc.: Instead of using `.save` one can use format specific short cuts.","user":"anonymous","dateUpdated":"2019-05-21T08:45:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Common DataFrameWriter settings</h3>\n<ul>\n  <li>\n  <p><code>.format</code>: Specifies the type of the data source (e.g. CSV, JSON, Parquet, etc.)</p></li>\n  <li>\n  <p><code>.mode</code>: Specifies the handling if directory and/or file respectively table already exists (e.g. error, overwrite, append, ignore)</p></li>\n  <li>\n  <p><code>.partitionBy</code>: Specifies the partitioning of the data</p></li>\n  <li>\n  <p><code>.option</code>: Additional key-value settings (e.g. &ldquo;Header&rdquo;,&ldquo;true&rdquo;)</p></li>\n  <li>\n  <p><code>.save</code>: For saving data to files. <code>.save</code> without <code>.format</code> reads in Parquet as default.</p></li>\n  <li>\n  <p><code>.saveAsTable</code>: For saving data out as Hive tables</p></li>\n  <li>\n  <p><code>.csv</code>, <code>.json</code>, etc.: Instead of using <code>.save</code> one can use format specific short cuts.</p></li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346341_-425283317","id":"20190424-175403_1279755413","dateCreated":"2019-05-21T08:45:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:23432"},{"text":"%md\n### Example for DataFrame savings","user":"anonymous","dateUpdated":"2019-05-21T08:45:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Example for DataFrame savings</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346341_511532324","id":"20190424-175416_632569445","dateCreated":"2019-05-21T08:45:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:23433"},{"text":"%md\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>","user":"anonymous","dateUpdated":"2019-05-21T08:47:29+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346341_-1399838293","id":"20190424-175424_1969171016","dateCreated":"2019-05-21T08:45:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23434","dateFinished":"2019-05-21T08:47:29+0000","dateStarted":"2019-05-21T08:47:29+0000"},{"text":"import org.apache.spark.sql.functions._   // Enabling of DataFrame operations\n\n// Read in Parquet file\nval songDF = spark.read.load(\"s3a://cs-spark-basic-training/Songs/\")\nsongDF.show()\n\n// Operate on 'songDF'\nval songDfChanged = songDF.withColumn(\"dummy\", lit(\"dummy\"))\nsongDfChanged.show()\n\n// Save changed DataFrame\nsongDfChanged.write.mode(\"overwrite\").save(\"s3a://cs-spark-basic-training/dummy/\")\n\n// Read in changed DataFrame\nspark.read.load(\"s3a://cs-spark-basic-training/dummy/\").show()","user":"anonymous","dateUpdated":"2019-05-21T08:51:30+0000","config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+--------+\n|       artist|loudness|\n+-------------+--------+\n|Frank Sinatra|   -10.0|\n| Beastie Boys|    -5.0|\n|         Muse|    -7.0|\n+-------------+--------+\n\n+-------------+--------+-----+\n|       artist|loudness|dummy|\n+-------------+--------+-----+\n|Frank Sinatra|   -10.0|dummy|\n| Beastie Boys|    -5.0|dummy|\n|         Muse|    -7.0|dummy|\n+-------------+--------+-----+\n\n+-------------+--------+-----+\n|       artist|loudness|dummy|\n+-------------+--------+-----+\n|Frank Sinatra|   -10.0|dummy|\n| Beastie Boys|    -5.0|dummy|\n|         Muse|    -7.0|dummy|\n+-------------+--------+-----+\n\nimport org.apache.spark.sql.functions._\nsongDF: org.apache.spark.sql.DataFrame = [artist: string, loudness: double]\nsongDfChanged: org.apache.spark.sql.DataFrame = [artist: string, loudness: double ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1558428346342_1587858736","id":"20190424-175432_1311438676","dateCreated":"2019-05-21T08:45:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23435","dateFinished":"2019-05-21T08:51:48+0000","dateStarted":"2019-05-21T08:51:30+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=108","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=109","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=110","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=111","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=112","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=113","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=114","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=115","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=116"],"interpreterSettingId":"spark"}}},{"text":"%md\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>","user":"anonymous","dateUpdated":"2019-05-21T08:47:57+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346342_1911561128","id":"20190424-175441_1870925159","dateCreated":"2019-05-21T08:45:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23436","dateFinished":"2019-05-21T08:47:57+0000","dateStarted":"2019-05-21T08:47:57+0000"},{"text":"%pyspark\nfrom pyspark.sql.functions import *   # Enabling of DataFrame operations\n\n# Read in Parquet file\nsongDF = spark.read.load(\"s3a://cs-spark-basic-training/Songs/\")\nsongDF.show()\n\n# Operate on 'songDF'\nsongDFChanged = songDF.withColumn(\"dummy\", lit(\"dummy\"))\nsongDFChanged.show()\n\n# Save changed DataFrame\nsongDFChanged.write.mode(\"overwrite\").save(\"s3a://cs-spark-basic-training/dummy/\")\n\n# Read in changed DataFrame\nspark.read.load(\"s3a://cs-spark-basic-training/dummy/\").show()","user":"anonymous","dateUpdated":"2019-05-21T09:05:45+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+--------+\n|       artist|loudness|\n+-------------+--------+\n|Frank Sinatra|   -10.0|\n| Beastie Boys|    -5.0|\n|         Muse|    -7.0|\n+-------------+--------+\n\n+-------------+--------+-----+\n|       artist|loudness|dummy|\n+-------------+--------+-----+\n|Frank Sinatra|   -10.0|dummy|\n| Beastie Boys|    -5.0|dummy|\n|         Muse|    -7.0|dummy|\n+-------------+--------+-----+\n\n+-------------+--------+-----+\n|       artist|loudness|dummy|\n+-------------+--------+-----+\n|Frank Sinatra|   -10.0|dummy|\n| Beastie Boys|    -5.0|dummy|\n|         Muse|    -7.0|dummy|\n+-------------+--------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1558428346342_1902480497","id":"20190424-175452_314204927","dateCreated":"2019-05-21T08:45:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23437","dateFinished":"2019-05-21T09:06:01+0000","dateStarted":"2019-05-21T09:05:45+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=117","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=118","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=119","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=120","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=121","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=122","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=123","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=124","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=125"],"interpreterSettingId":"spark"}}},{"text":"%md\n## 3.3.2 Saving RDDs\n\nText files can be saved with `.saveAsTextFile`\n\nOther file formats can be saved with `.saveAsHadoopFile`","user":"anonymous","dateUpdated":"2019-05-21T08:45:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>3.3.2 Saving RDDs</h2>\n<p>Text files can be saved with <code>.saveAsTextFile</code></p>\n<p>Other file formats can be saved with <code>.saveAsHadoopFile</code></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346342_-1232606020","id":"20190424-175458_1745640164","dateCreated":"2019-05-21T08:45:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:23438"},{"text":"%md\n### Example for saving a RDD as a text file","user":"anonymous","dateUpdated":"2019-05-21T08:45:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Example for saving a RDD as a text file</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346343_404847970","id":"20190424-175508_1786871836","dateCreated":"2019-05-21T08:45:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:23439"},{"text":"%md\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>","user":"anonymous","dateUpdated":"2019-05-21T08:47:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346343_-856767650","id":"20190424-175515_1145890268","dateCreated":"2019-05-21T08:45:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23440","dateFinished":"2019-05-21T08:47:37+0000","dateStarted":"2019-05-21T08:47:37+0000"},{"text":"%spark\n// Read in a single CSV as text file\nval songRDD = sc.textFile(\"s3a://cs-spark-basic-training/SongRDD/\")\nsongRDD.collect.foreach(println)\n\n// Operate on songRDD\nval wordRDD = songRDD.flatMap(x => x.split(\" \"))\n                     .filter(s => s == \"Muse\")\n\n// Save RDD\nwordRDD.saveAsTextFile(\"s3a://cs-spark-basic-training/dummyRDD3/\")\n\nprintln(\"#######################################################\")\n// Load changed RDD\nsc.textFile(\"s3a://cs-spark-basic-training/dummyRDD3/\").collect.foreach(println)\nprintln(\"#######################################################\")","user":"anonymous","dateUpdated":"2019-05-21T09:07:07+0000","config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Beastie Boys are quiet loud and their songs are called Sabotage and Intergalactic\nFrank Sinatra is not so loud and the name of his song is My Way\nMuse is rather medium loud with songs like Uprising, Starlight and Madness\n#######################################################\nMuse\n#######################################################\nsongRDD: org.apache.spark.rdd.RDD[String] = s3a://cs-spark-basic-training/SongRDD/ MapPartitionsRDD[403] at textFile at <console>:34\nwordRDD: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[405] at filter at <console>:39\n"}]},"apps":[],"jobName":"paragraph_1558428346343_-1171862356","id":"20190424-175522_1750608235","dateCreated":"2019-05-21T08:45:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23441","dateFinished":"2019-05-21T09:07:21+0000","dateStarted":"2019-05-21T09:07:07+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=126","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=127","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=128"],"interpreterSettingId":"spark"}}},{"text":"%md\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>","user":"anonymous","dateUpdated":"2019-05-21T08:48:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558428346343_-352454153","id":"20190424-175534_965033242","dateCreated":"2019-05-21T08:45:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23442","dateFinished":"2019-05-21T08:48:03+0000","dateStarted":"2019-05-21T08:48:03+0000"},{"text":"%pyspark\n# Read in a single CSV as text file\nsongRDD = sc.textFile(\"s3a://cs-spark-basic-training/SongRDD/\")\nfor element in songRDD.collect():\n    print(element)\n\n# Operate on songRDD\nwordRDD = songRDD.flatMap(lambda x: x.split(' ')).filter(lambda x: x == 'Muse')\n\n# Save RDD\nwordRDD.saveAsTextFile(\"s3a://cs-spark-basic-training/dummyRDD/\")\n\nprint(\"#######################################################\")\n# Load changed RDD\nfor element in sc.textFile(\"s3a://cs-spark-basic-training/dummyRDD/\").collect():\n    print(element)\nprint(\"#######################################################\")","user":"anonymous","dateUpdated":"2019-05-21T09:15:27+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Beastie Boys are quiet loud and their songs are called Sabotage and Intergalactic\nFrank Sinatra is not so loud and the name of his song is My Way\nMuse is rather medium loud with songs like Uprising, Starlight and Madness\n#######################################################\nMuse\n#######################################################\n"}]},"apps":[],"jobName":"paragraph_1558428346343_-1612851707","id":"20190424-175543_622030628","dateCreated":"2019-05-21T08:45:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:23443","dateFinished":"2019-05-21T09:15:31+0000","dateStarted":"2019-05-21T09:15:27+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=135","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=136","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=137"],"interpreterSettingId":"spark"}}}],"name":"/3. Ingestion & Saving/3.3 Saving","id":"2ED52EFHG","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"python:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}