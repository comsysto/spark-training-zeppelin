{"paragraphs":[{"text":"%md <img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380837_1688907784","id":"20190426-113155_114074266","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:282"},{"text":"%md\n# Exercise 1 - Introduction\n\nWe start with the typical hello world application in Spark.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 1 - Introduction</h1>\n<p>We start with the typical hello world application in Spark.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380843_-588641727","id":"20190426-113308_1229970381","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:283"},{"text":"%md\n***Task 1.1***\nLoad the following sentences into a RDD: `Spark I am your father`, `May the Spark be with you`, `May Spark live long and prosper`. Split the sentences into words. Use `map` and `flatMap`. What is the difference?\n\n***Task 1.2***\nCount the number of occurences of each word over all sentences using a RDD.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 1.1</em></strong><br/>Load the following sentences into a RDD: <code>Spark I am your father</code>, <code>May the Spark be with you</code>, <code>May Spark live long and prosper</code>. Split the sentences into words. Use <code>map</code> and <code>flatMap</code>. What is the difference?</p>\n<p><strong><em>Task 1.2</em></strong><br/>Count the number of occurences of each word over all sentences using a RDD.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380843_1556587705","id":"20190426-113322_1813938306","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:284"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380844_557432325","id":"20190426-113332_1873038629","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:285"},{"text":"%md\n### Solution 1.1 a","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 1.1 a</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380844_212015920","id":"20190426-113339_1584127901","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:286"},{"text":"%pyspark\nsentencesRDD = sc.parallelize([\"Spark I am your father\", \"May the spark be with you\", \"Spark I am your father\"])\nwordsMapRDD = sentencesRDD.map(lambda sentence: sentence.split(' '))\n\nfor element in wordsMapRDD.collect():\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Spark', 'I', 'am', 'your', 'father']\n['May', 'the', 'spark', 'be', 'with', 'you']\n['Spark', 'I', 'am', 'your', 'father']\n"}]},"apps":[],"jobName":"paragraph_1558537380846_1282323474","id":"20190426-113540_221796011","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:287"},{"text":"%md\n### Solution 1.1 b","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 1.1 b</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380846_941222115","id":"20190426-113550_1500407253","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:288"},{"text":"%pyspark\nwordsFlatMapRDD = sentencesRDD.flatMap(lambda sentence: sentence.split(' '))\n\nfor element in wordsFlatMapRDD.collect():\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Spark\nI\nam\nyour\nfather\nMay\nthe\nspark\nbe\nwith\nyou\nSpark\nI\nam\nyour\nfather\n"}]},"apps":[],"jobName":"paragraph_1558537380847_-1248512527","id":"20190426-113759_826886351","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:289"},{"text":"%md\n### Solution 1.2","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 1.2</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380847_271604561","id":"20190426-113811_769294062","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:290"},{"text":"%pyspark\nwordCount = wordsFlatMapRDD.map(lambda word: (word, 1)).reduceByKey(lambda accum, addMe: accum + addMe).sortBy(lambda x: x[0])\n\nfor element in wordCount.collect():\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"('I', 2)\n('May', 1)\n('Spark', 2)\n('am', 2)\n('be', 1)\n('father', 2)\n('spark', 1)\n('the', 1)\n('with', 1)\n('you', 1)\n('your', 2)\n"}]},"apps":[],"jobName":"paragraph_1558537380848_-379726714","id":"20190426-113829_569194761","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:291"},{"text":"%md\n# Exercise 2 - Operations and actions\n\nThis exercise we will focus on transformations and actions using different APIs.\n\nWe will deal with a snapshot of the million songs dataset containing only 1000 rows.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 2 - Operations and actions</h1>\n<p>This exercise we will focus on transformations and actions using different APIs.</p>\n<p>We will deal with a snapshot of the million songs dataset containing only 1000 rows.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380848_1490245343","id":"20190426-113837_348868411","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:292"},{"text":"%md\n***Task 2.0 a***\nUse `mapPartitions` to split the `sentencesRDD` out of exercise 1 without flattening it.\n\n***Task 2.0 b***\nUse `mapPartitionsWithIndex` to split the `sentencesRDD` out of exercise 1 without flattening it.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 2.0 a</em></strong><br/>Use <code>mapPartitions</code> to split the <code>sentencesRDD</code> out of exercise 1 without flattening it.</p>\n<p><strong><em>Task 2.0 b</em></strong><br/>Use <code>mapPartitionsWithIndex</code> to split the <code>sentencesRDD</code> out of exercise 1 without flattening it.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380849_-15726914","id":"20190426-113846_1729498002","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:293"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380849_-1599174298","id":"20190426-113852_707093913","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:294"},{"text":"%md\n### Solution 2.0 a","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 2.0 a</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380852_1194941996","id":"20190426-113903_2071583017","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:295"},{"text":"%pyspark\nwordCountWithPartitions = sentencesRDD.mapPartitions(lambda partition: [word.split(' ') for word in partition])\n\nfor element in wordCountWithPartitions.collect():\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Spark', 'I', 'am', 'your', 'father']\n['May', 'the', 'spark', 'be', 'with', 'you']\n['Spark', 'I', 'am', 'your', 'father']\n"}]},"apps":[],"jobName":"paragraph_1558537380854_338465058","id":"20190426-113916_550287079","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:296"},{"text":"%md\n### Solution 2.0 b","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 2.0 b</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380854_1481383516","id":"20190426-113927_1324182421","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:297"},{"text":"%pyspark\nwordCountWithPartitionsWithIdx = sentencesRDD.mapPartitionsWithIndex(lambda idx, partition: [(word.split(' '), idx) for word in partition])\n\nfor element in wordCountWithPartitionsWithIdx.collect():\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(['Spark', 'I', 'am', 'your', 'father'], 0)\n(['May', 'the', 'spark', 'be', 'with', 'you'], 1)\n(['Spark', 'I', 'am', 'your', 'father'], 1)\n"}]},"apps":[],"jobName":"paragraph_1558537380856_1112730099","id":"20190426-113945_1098213291","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:298"},{"text":"%md\n***Task 2.1***\nWe will deal with a snapshot of the million songs dataset containing only 1000 rows. Explore the data using appropriate actions like `count`, `show`, `printSchema`, `first`, `describe` or `take` of the RDD API and the DataFrame API.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 2.1</em></strong><br/>We will deal with a snapshot of the million songs dataset containing only 1000 rows. Explore the data using appropriate actions like <code>count</code>, <code>show</code>, <code>printSchema</code>, <code>first</code>, <code>describe</code> or <code>take</code> of the RDD API and the DataFrame API.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380856_411372877","id":"20190426-113953_324893766","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:299"},{"text":"%pyspark\nmillionSongsDF = spark.read.option(\"header\", True).option(\"inferSchema\", True).csv(\"s3a://cs-spark-basic-training/millionSongs1000/\")\nmillionSongsRDD = millionSongsDF.rdd","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380858_-501572060","id":"20190426-114000_1369220237","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:300"},{"text":"%pyspark\n# Please add your solution for the RDD API in here\n\n# Count the number of elements in the RDD\n\n\n# Output the first 5 elements\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380859_518912135","id":"20190426-114012_1603350459","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:301"},{"text":"%md\n### Solution 2.1 RDD API","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 2.1 RDD API</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380859_2133782104","id":"20190426-114022_810211037","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:302"},{"text":"%pyspark\nprint(\"Number of Rows: \")\nprint(millionSongsRDD.count())\nprint\n\nprint(\"First 5 elements: \")\nfor element in millionSongsRDD.take(5):\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Number of Rows: \n1000\n\nFirst 5 elements: \nRow(artist=u'Mad Professor', year=1996, loudness=-10.591)\nRow(artist=u'Dave Edmunds', year=1984, loudness=-9.627)\nRow(artist=u'Benabar', year=2001, loudness=-10.352)\nRow(artist=u'Soul-Junk', year=0, loudness=-7.041)\nRow(artist=u'Niels Van Gogh', year=0, loudness=-7.239)\n"}]},"apps":[],"jobName":"paragraph_1558537380860_-1358885778","id":"20190426-114052_1733315463","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:303"},{"text":"%pyspark\n# Please add your solution for the DataFrame API in here\n\n\n# Output the schema of the DataFrame\n\n\n# Count the number of rows in the DataFrame\n\n\n# Output the DataFrame itself\n\n\n# Output basic statistics for numeric and string columns\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380861_-687776834","id":"20190426-114100_1310494594","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:304"},{"text":"%md\n### Solution 2.1 DataFrame API","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 2.1 DataFrame API</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380861_844134305","id":"20190426-114116_2080546143","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:305"},{"text":"%pyspark\nprint(\"DataFrame Schema: \")\nmillionSongsDF.printSchema()\nprint\n\nprint(\"Number of Rows: \")\nprint(millionSongsDF.count())\nprint\n\nprint(\"DataFrame itself: \")\nmillionSongsDF.show()\nprint\n\nprint(\"Basic statistics: \")\nmillionSongsDF.describe().show()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame Schema: \nroot\n |-- artist: string (nullable = true)\n |-- year: integer (nullable = true)\n |-- loudness: double (nullable = true)\n\n\nNumber of Rows: \n1000\n\nDataFrame itself: \n+--------------------+----+--------+\n|              artist|year|loudness|\n+--------------------+----+--------+\n|       Mad Professor|1996| -10.591|\n|        Dave Edmunds|1984|  -9.627|\n|             Benabar|2001| -10.352|\n|           Soul-Junk|   0|  -7.041|\n|      Niels Van Gogh|   0|  -7.239|\n|             Cyssero|   0|  -6.949|\n|       Gillian Hills|1998|   -5.94|\n|            Telecast|2005| -14.761|\n|089 Clique feat. ...|   0|  -6.743|\n|The Commercial Hi...|   0|  -6.888|\n|  Montini Experience|   0|  -5.984|\n|       Happy The Man|1990| -19.581|\n| The Hollywood Brats|   0|   -7.74|\n|     Vassar Clements|1998| -16.435|\n|   Teddy Pendergrass|   0| -11.409|\n|       Parkway Drive|2003|  -5.498|\n|          Dissonance|   0|  -8.463|\n|             Shakira|2005|  -6.439|\n|           Leadbelly|   0| -12.327|\n|    The Housemartins|2009|  -8.457|\n+--------------------+----+--------+\nonly showing top 20 rows\n\n\nBasic statistics: \n+-------+-------------------+-----------------+-------------------+\n|summary|             artist|             year|           loudness|\n+-------+-------------------+-----------------+-------------------+\n|  count|               1000|             1000|               1000|\n|   mean|              546.5|          1034.95|-10.137460000000008|\n| stddev|  620.1326471006022|998.8690589346016|  5.037850339623481|\n|    min|\"Diego \"\"El Cigala\"|                0|            -38.806|\n|    max|          zebrahead|             2010|             -0.086|\n+-------+-------------------+-----------------+-------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1558537380861_1956899646","id":"20190426-114133_1360285495","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:306"},{"text":"%md\n***Task 2.2***\nFind out which artist has the most songs in the millionSongs dataset. Use the RDD API on `millionSongsRDD` and the DataFrame API on `millionSongsDF`.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 2.2</em></strong><br/>Find out which artist has the most songs in the millionSongs dataset. Use the RDD API on <code>millionSongsRDD</code> and the DataFrame API on <code>millionSongsDF</code>.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380862_-1577657812","id":"20190426-114145_368902187","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:307"},{"text":"%pyspark\n# Please add your solution in here\nfrom operator import add\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380862_-351733083","id":"20190426-114155_2052057753","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:308"},{"text":"%md\n### Solution 2.2 RDD API","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 2.2 RDD API</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380863_-1890900986","id":"20190426-114206_1508261156","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:309"},{"text":"%pyspark\nfrom operator import add\n\nsongCountByArtistRDD = millionSongsRDD.map(lambda song: (song[0], 1)).reduceByKey(add).sortBy(lambda song: song[1], ascending = False)\n\nfor element in songCountByArtistRDD.take(10):\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(u'Glen Washington', 3)\n(u'Peter White', 2)\n(u'Ini Kamoze', 2)\n(u'Keletigui et ses Tambourinis', 2)\n(u'Cockney Rejects', 2)\n(u'Johnny Mathis', 2)\n(u'The Black Keys', 2)\n(u'Shakira', 2)\n(u'Justin', 2)\n(u'Yma Sumac', 2)\n"}]},"apps":[],"jobName":"paragraph_1558537380864_-1064994879","id":"20190522-121908_1238219097","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:310"},{"text":"%pyspark\n# Please add your solution for the DataFrame API in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380865_-1691942136","id":"20190426-114238_100209508","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:311"},{"text":"%md\n### Solution 2.2 DataFrame API","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 2.2 DataFrame API</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380866_1820698453","id":"20190426-114252_2026192604","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:312"},{"text":"%pyspark\nsongCountByArtistDF = millionSongsDF.groupBy(\"artist\").count().orderBy(\"count\", ascending = False)\n\nsongCountByArtistDF.show(10)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----+\n|              artist|count|\n+--------------------+-----+\n|     Glen Washington|    3|\n|         Jimmy Smith|    2|\n|Keletigui et ses ...|    2|\n|    Seguridad Social|    2|\n|           The Hives|    2|\n|   Elliot Goldenthal|    2|\n|           Yma Sumac|    2|\n|        Annie Lennox|    2|\n|      The Black Keys|    2|\n|          Ini Kamoze|    2|\n+--------------------+-----+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1558537380866_2139988153","id":"20190426-114306_1061276923","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:313"},{"text":"%md\n***Task 2.3***\nCompute the average loudness for each artist and each year with the RDD API as well as the DataFrame API. Ignore years with value = 0.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 2.3</em></strong><br/>Compute the average loudness for each artist and each year with the RDD API as well as the DataFrame API. Ignore years with value = 0.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380866_1119739429","id":"20190426-114314_435390900","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:314"},{"text":"%pyspark\n# Please add your solution for the DataFrame API in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380868_-464756188","id":"20190426-114321_1384742673","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:315"},{"text":"%md\n### Solution 2.3 DataFrame API","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 2.3 DataFrame API</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380868_-149278516","id":"20190522-124147_1655078195","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:316"},{"text":"%pyspark\nloudnessByArtistYearDF = millionSongsDF.filter(\"year > 0\").groupBy(\"artist\", \"year\").mean(\"loudness\").orderBy(\"avg(loudness)\")\n\nloudnessByArtistYearDF.show()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+----+-------------+\n|              artist|year|avg(loudness)|\n+--------------------+----+-------------+\n|            Messiaen|2008|      -38.806|\n|         Solar Quest|1998|      -34.694|\n|              Gescom|1998|      -28.814|\n|   Zbigniew Preisner|1993|      -26.587|\n|        Noa Assembly|2002|       -26.55|\n|               INADE|1997|      -26.225|\n|        Bill Doggett|1956|      -25.623|\n|      Eberhard Weber|1988|      -25.616|\n|     Giovanni Allevi|1997|      -23.832|\n|         Debby Boone|2005|      -23.305|\n|       Damien Jurado|2006|      -22.651|\n|           Immersion|2001|      -22.324|\n|         Lauryn Hill|1998|        -21.8|\n|     Wynton Marsalis|1983|      -21.629|\n| Organized Konfusion|1997|      -21.435|\n|         Noel Coward|1955|      -21.365|\n|          Bill Cosby|1964|      -21.196|\n|     The Last Atlant|2008|       -20.86|\n|Country Joe & The...|1967|      -20.631|\n|        Dave Brubeck|1976|      -20.433|\n+--------------------+----+-------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1558537380870_1431395188","id":"20190522-124149_1680055434","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:317"},{"text":"%pyspark\n# Please add your solution for the RDD API in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380870_-1986875800","id":"20190522-124552_1262199696","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:318"},{"text":"%md\n### Solution 2.3 RDD API","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 2.3 RDD API</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380871_233066917","id":"20190426-114330_649732537","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:319"},{"text":"%pyspark\nmeanOfList = lambda myList: reduce(lambda accum, addMe: accum + addMe, myList)/len(myList)\n\nloudnessByArtistYearRDD = millionSongsRDD.filter(lambda song: song[1] > 0).map(lambda song: ((song[0], song[1]), song[2])).groupByKey().mapValues(meanOfList).sortBy(lambda song: song[1])\n\nfor element in loudnessByArtistYearRDD.collect():\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"((u'Messiaen', 2008), -38.806)\n((u'Solar Quest', 1998), -34.694)\n((u'Gescom', 1998), -28.814)\n((u'Zbigniew Preisner', 1993), -26.587)\n((u'Noa Assembly', 2002), -26.55)\n((u'INADE', 1997), -26.225)\n((u'Bill Doggett', 1956), -25.623)\n((u'Eberhard Weber', 1988), -25.616)\n((u'Giovanni Allevi', 1997), -23.832)\n((u'Debby Boone', 2005), -23.305)\n((u'Damien Jurado', 2006), -22.651)\n((u'Immersion', 2001), -22.324)\n((u'Lauryn Hill', 1998), -21.8)\n((u'Wynton Marsalis', 1983), -21.629)\n((u'Organized Konfusion', 1997), -21.435)\n((u'Noel Coward', 1955), -21.365)\n((u'Bill Cosby', 1964), -21.196)\n((u'The Last Atlant', 2008), -20.86)\n((u'Country Joe & The Fish', 1967), -20.631)\n((u'Dave Brubeck', 1976), -20.433)\n((u'Giora Feidman', 1989), -20.408)\n((u'Kitty Wells', 1997), -20.218)\n((u'Stargarden', 2004), -19.877)\n((u'Scott Joplin', 1972), -19.713)\n((u'Julie Doiron', 2000), -19.704)\n((u'Suzie Leblanc', 2007), -19.621)\n((u'Happy The Man', 1990), -19.581)\n((u'Tony Bennett', 1997), -19.51)\n((u'Severed Heads', 2004), -19.261)\n((u'The Fratellis', 2006), -19.253)\n((u'Gene Krupa & His Orchestra', 1993), -19.053)\n((u'Cockney Rejects', 2001), -18.808)\n((u'Elliot Goldenthal', 2002), -18.722)\n((u'De De Lind', 1973), -18.673)\n((u'Throwing Muses', 1992), -18.526)\n((u'Paulinho Da Viola', 1971), -18.456)\n((u'Pretz', 2006), -18.246)\n((u'Hammock', 2008), -18.155)\n((u'Tom Rush', 1965), -17.993)\n((u'Percy Faith', 2002), -17.862)\n((u'9 Lazy 9', 1994), -17.848)\n((u'Kronos Quartet', 2002), -17.674)\n((u'JOHN COLTRANE', 1993), -17.665)\n((u'Ramin Djawadi', 2009), -17.52)\n((u'Clifford Brown / Max Roach Quintet', 2000), -17.485)\n((u'Laura Fygi', 1998), -17.455)\n((u'The Disposable Heroes Of Hiphoprisy', 1992), -17.137)\n((u'Lyrics Born', 2005), -17.126)\n((u'Westbam', 1997), -16.886)\n((u'Freddie Hubbard', 1970), -16.714)\n((u'The Verve Pipe', 1992), -16.647)\n((u'Vangelis', 2007), -16.594)\n((u'Vassar Clements', 1998), -16.435)\n((u'Merle Travis', 1947), -16.191)\n((u'Yma Sumac', 1954), -16.123)\n((u'Elliott Sharp`s Terraplane', 2008), -16.016)\n((u'Danny Kaye', 1999), -15.994)\n((u'Xavier Cugat', 1958), -15.731)\n((u'Trentem\\xf8ller', 2006), -15.73)\n((u'Kammerflimmer Kollektief', 2010), -15.717)\n((u'Lesley Garrett / International Staff Band of The Salvation Army / International Staff Band of The Salvation Army', 2000), -15.693)\n((u'United Future Organization', 1996), -15.653)\n((u'Little Milton', 1994), -15.639)\n((u'Blueboy', 1992), -15.619)\n((u'Gary Numan', 1994), -15.507)\n((u'Paddy Kelly', 2006), -15.276)\n((u'Rasputina', 1996), -15.19)\n((u'Roger Hodgson', 1998), -15.111)\n((u'William Fitzsimmons', 2009), -15.07)\n((u'Minnie Driver', 2004), -15.064)\n((u'Orbital', 2005), -15.046)\n((u'Telecast', 2005), -14.761)\n((u'Renato Russo', 1995), -14.743)\n((u'Percy Sledge', 1968), -14.742)\n((u'The Gay Blades', 2008), -14.541)\n((u'Das EFX', 1992), -14.525)\n((u'DD/MM/YYYY', 2005), -14.517)\n((u'Malkit Singh', 1999), -14.492)\n((u'Agitation Free', 1999), -14.488)\n((u'Jeff Foxworthy', 1993), -14.391)\n((u'Fred Astaire', 1989), -14.363)\n((u'Causa Sui', 2009), -14.343)\n((u'Art Pepper', 1977), -14.269)\n((u'Birdsongs of the Mesozoic', 1989), -14.248)\n((u'Haley Bonar', 2008), -14.21)\n((u'Jonathan King', 2001), -14.031)\n((u'Dan Fogelberg', 1985), -13.954)\n((u'Grayson Capps', 2008), -13.953)\n((u'Clouds Forming Crowns', 2005), -13.835)\n((u'Constantines', 2008), -13.804)\n((u'Elliot Goldenthal', 2003), -13.798)\n((u'Nick Cave/Warren Ellis', 2006), -13.797)\n((u'Desmond Dekker', 1980), -13.791)\n((u'Elvis Costello & The Imposters', 2004), -13.776)\n((u'Cat Power', 1996), -13.757)\n((u'Alison Krauss / Union Station', 1997), -13.712)\n((u'Jacques Higelin', 1985), -13.663)\n((u'Altan', 2003), -13.629)\n((u'Kanye West', 2005), -13.549)\n((u'Carlo Siliotto', 2007), -13.375)\n((u'The Exploited', 1992), -13.368)\n((u'Vanessa Daou', 1994), -13.293)\n((u'Mojo Nixon', 1990), -13.292)\n((u'Moonshake', 1992), -13.28)\n((u'Sue Keller', 2004), -13.267)\n((u'Der Plan', 1983), -13.248)\n((u'Cher', 1974), -13.208)\n((u'Savoy Brown Blues Band', 1967), -13.2)\n((u'Merle Haggard', 1996), -13.055)\n((u'Bo Carter', 1994), -12.962)\n((u'Sanseverino', 2004), -12.847)\n((u\"Flamin' Groovies\", 1991), -12.845)\n((u'Damien Leith', 2008), -12.839)\n((u'Lucinda Williams', 1992), -12.829)\n((u'Intex Systems', 2006), -12.822)\n((u'Barry White', 1995), -12.798)\n((u'Carl-Johan Vallgren', 2001), -12.779)\n((u'Lisa Lynne', 1999), -12.757)\n((u'Opgeduveld', 2002), -12.725)\n((u'Natalie Cole', 1991), -12.72)\n((u'Al Jarreau', 1994), -12.702)\n((u'Molly Johnson', 2006), -12.691)\n((u'Steppenwolf', 1968), -12.516)\n((u'Phil Collins', 1985), -12.476)\n((u'Queen', 1989), -12.427)\n((u'Sunset Rubdown', 2006), -12.354)\n((u'Kroke', 1997), -12.319)\n((u'Josh White', 1995), -12.312)\n((u'Government Issue', 1991), -12.282)\n((u'Bailter Space', 1990), -12.253)\n((u'DMX Krew', 1997), -12.221)\n((u'The Willowz', 2007), -12.132)\n((u'A Tribe Called Quest', 2003), -12.013)\n((u'Blur', 1993), -11.941)\n((u'Jorma Kaukonen', 2002), -11.872)\n((u'Supertramp', 1974), -11.86)\n((u'Tito Puente', 1995), -11.821)\n((u'Jonatha Brooke', 1999), -11.785)\n((u'Spooky Tooth', 1969), -11.779)\n((u'Poncho Sanchez', 1999), -11.775)\n((u'Cher', 1973), -11.77)\n((u'John Lord Fonda', 2006), -11.731)\n((u'The Smashing Pumpkins', 1991), -11.709)\n((u'Mac Davis', 2000), -11.708)\n((u'Chi-Lites', 1971), -11.701)\n((u'Schweisser', 1997), -11.673)\n((u'Madonna', 1992), -11.67)\n((u'Brightboy', 2006), -11.612)\n((u'Adele', 2007), -11.6)\n((u'Dr. Hook', 1976), -11.438)\n((u'Conway Twitty', 1994), -11.414)\n((u'Basia', 1989), -11.408)\n((u'The Antlers', 2007), -11.392)\n((u'Lavay Smith & Her Red Hot Skillet Lickers', 2000), -11.366)\n((u'Bananarama', 1981), -11.353)\n((u'The Ejected', 1983), -11.256)\n((u'Clannad', 1987), -11.195)\n((u'Boney James', 1992), -11.193)\n((u'Lars Demian', 1991), -11.184)\n((u'Judie Tzuke', 1980), -11.183)\n((u'Graham Nash', 1986), -11.163)\n((u'Filippa Giordano', 1999), -11.155)\n((u'Hank Marvin', 2007), -11.14)\n((u'They Might Be Giants', 1990), -11.017)\n((u'The Andrews Sisters', 1991), -11.01)\n((u'Jonathan Richman', 2008), -10.974)\n((u'Th\\x19 Faith Healers', 1992), -10.966)\n((u'Janis Joplin', 1988), -10.949)\n((u'Black Moth Super Rainbow', 2003), -10.899)\n((u'One Bad Pig', 1989), -10.874)\n((u'Stone Temple Pilots', 1994), -10.867)\n((u'Laurel Aitken', 2009), -10.784)\n((u'J.C. Lodge', 1990), -10.711)\n((u'DJ Gregory', 2003), -10.691)\n((u'740 Boyz', 1996), -10.68)\n((u'Smokey Robinson & The Miracles', 1986), -10.617)\n((u'Red Foley', 1993), -10.592)\n((u'Mad Professor', 1996), -10.591)\n((u'Dead Soul Tribe', 2007), -10.573)\n((u'Mystery Girls', 2008), -10.56)\n((u'The Lurkers', 1996), -10.536)\n((u'Nena Daconte', 2008), -10.488)\n((u'Eartha Kitt', 1988), -10.481)\n((u'Irwin Goodman', 1990), -10.481)\n((u'The Pharcyde', 1993), -10.373)\n((u'Peggy Sue', 2010), -10.366)\n((u'Benabar', 2001), -10.352)\n((u'Monks Of Doom', 1992), -10.347)\n((u'Roberto Carlos', 1990), -10.302)\n((u'Material Issue', 1991), -10.301)\n((u'Carole King', 1971), -10.263)\n((u'Alcatrazz', 1983), -10.229)\n((u'The Jazz Butcher', 2003), -10.228)\n((u'The LK', 2005), -10.196)\n((u'Magic Sam', 1957), -10.176)\n((u'Alejandro Santiago', 1999), -10.165)\n((u'Johnny Mathis', 1996), -10.163)\n((u'Johnny Mathis', 2003), -10.158)\n((u'Brian Wilson', 1995), -10.128)\n((u'Georgia Satellites', 1988), -10.098)\n((u'Beaten Awake', 2006), -10.066)\n((u'Seven Mary Three', 1997), -10.047)\n((u'Iambia', 2001), -10.042)\n((u'Hot Action Cop', 2003), -10.029)\n((u\"Gasolin'\", 2000), -9.973)\n((u'Maxwell', 1996), -9.943)\n((u'Hardrock Gunter', 1999), -9.908)\n((u'Depth Charge', 2008), -9.886)\n((u'Earthling', 1994), -9.866)\n((u'Savatage', 2010), -9.83)\n((u'Robert Palmer', 1998), -9.824)\n((u'Butcher Boy', 2007), -9.823)\n((u\"Howlin' Wolf\", 1974), -9.799)\n((u'Weather Report', 1974), -9.796)\n((u'HUM', 1993), -9.779)\n((u'Kotaro Oshio', 2005), -9.77)\n((u'Psihomodo Pop', 1999), -9.761)\n((u'Giorgio Moroder', 2000), -9.712)\n((u'Belle & Sebastian', 2003), -9.703)\n((u'Duke Special', 2002), -9.697)\n((u'Gene Pitney', 1988), -9.665)\n((u'Lou Reed', 1972), -9.634)\n((u'Dave Edmunds', 1984), -9.627)\n((u'Heavy D & The Boyz', 1988), -9.582)\n((u'Luz', 2002), -9.577)\n((u'Weekender', 2003), -9.539)\n((u'Lewis Black', 2003), -9.473)\n((u'MHz', 2002), -9.456)\n((u'Dennis Brown Presents Prince Jammy', 2004), -9.414)\n((u'Vainica Doble', 1973), -9.399)\n((u'Mick Ronson', 1997), -9.369)\n((u'Chris Thile', 2001), -9.339)\n((u'Percy Mayfield', 1990), -9.335)\n((u'Sunday Munich', 2000), -9.287)\n((u'Los Chichos', 1982), -9.281)\n((u'Los Straitjackets', 1999), -9.263)\n((u'Mungo Jerry', 1972), -9.259)\n((u'Perturbazione', 2005), -9.245)\n((u'The Dingees', 1999), -9.077)\n((u'Strong Arm Steady', 2010), -9.074)\n((u'Archers Of Loaf', 1995), -9.036)\n((u'LL Cool J / Lyfe Jennings', 2006), -8.983)\n((u'Nitty Gritty Dirt Band', 1971), -8.95)\n((u'Trueby Trio', 2003), -8.936)\n((u'Udo Lindenberg;Ellen ten Damme', 1990), -8.924)\n((u'Bah Samba', 1998), -8.922)\n((u'Carrie Newcomer', 1998), -8.882)\n((u'Elvis Crespo', 1999), -8.825)\n((u'Bobby Womack', 1981), -8.803)\n((u'The Hidden Cameras', 2004), -8.8)\n((u'Annie Lennox', 1992), -8.79)\n((u'Tanto Metro & Devonte', 2003), -8.757)\n((u\"Four Bitchin' Babes\", 2002), -8.73)\n((u'Roy Ayers / Carl Clay', 1973), -8.722)\n((u'Habakuk', 2007), -8.717)\n((u'Seguridad Social', 1997), -8.704)\n((u'Ann Peebles', 1978), -8.665)\n((u'Kathy Mattea', 1987), -8.651)\n((u'Languis', 2004), -8.639)\n((u'Shalamar', 2004), -8.618)\n((u'The Jazz Crusaders', 1970), -8.58)\n((u'Thirteen Senses', 2005), -8.552)\n((u'Quantic', 2004), -8.471)\n((u'Dionne Warwick', 2003), -8.457)\n((u'The Housemartins', 2009), -8.457)\n((u'Smile Empty Soul', 2003), -8.393)\n((u'Hermeto Pascoal', 1979), -8.391)\n((u'Brandon Heath', 2006), -8.346)\n((u'Sister Sledge', 1985), -8.324)\n((u'Ultrakurt', 2003), -8.319)\n((u'Dead Soul Tribe', 2002), -8.312)\n((u'Neikka RPM', 2004), -8.302)\n((u'Dismantled', 2006), -8.298)\n((u'Junior Boys', 2004), -8.289)\n((u'Bill Perry', 2001), -8.246)\n((u'Qntal', 2008), -8.243)\n((u'Rozalla', 1992), -8.168)\n((u'Aceyalone', 2007), -8.126)\n((u'Others', 2004), -8.118)\n((u'George Lopez', 2007), -8.116)\n((u'SNFU', 1996), -8.101)\n((u'Popof', 2009), -8.094)\n((u'Alexander Sch\\xf6ld', 2005), -8.078)\n((u'Francis Dunnery', 1991), -8.023)\n((u'Cesare Cremonini', 2006), -8.021)\n((u'Levon Helm', 2009), -8.009)\n((u'Dot Allison', 2009), -7.975)\n((u'La Fiebre', 1993), -7.958)\n((u'Filthy Thieving Bastards', 2001), -7.955)\n((u'Heatmiser', 1993), -7.935)\n((u'Maria Peszek', 2005), -7.873)\n((u'Dschinghis Khan', 1993), -7.866)\n((u'Mahala Rai Banda', 2005), -7.845)\n((u'Los Tipitos', 2006), -7.844)\n((u'Ednita Nazario', 2008), -7.75)\n((u'The Fabulous Thunderbirds', 2003), -7.735)\n((u'The Brothers Johnson', 1980), -7.724)\n((u'Mr. Capone-E', 2006), -7.71)\n((u'CCCP', 2006), -7.706)\n((u'Kode 9 & The Spaceape', 2006), -7.701)\n((u'Psapp', 2008), -7.692)\n((u'Super Furry Animals', 1999), -7.692)\n((u'Weezer', 1994), -7.678)\n((u\"Oscar D'Le\\xf3n\", 1998), -7.667)\n((u'Jimmy Cliff', 1969), -7.654)\n((u'Rockefeller', 2005), -7.645)\n((u'Racebannon', 2002), -7.633)\n((u'Lyn Collins', 1975), -7.624)\n((u'Medina Azahara', 1993), -7.616)\n((u'Princess Lover', 2007), -7.608)\n((u'Trapeze', 2003), -7.567)\n((u'Late Night Sneaky', 2004), -7.544)\n((u'Richard Thompson', 1999), -7.485)\n((u'The Teardrop Explodes', 1981), -7.456)\n((u'The Dials', 2007), -7.456)\n((u'Ludacris / Nate Dogg', 2001), -7.454)\n((u'Juno Reactor', 2008), -7.446)\n((u'Dub Trio', 2008), -7.429)\n((u'La Mafia', 1991), -7.425)\n((u'Les Trois Accords', 2008), -7.367)\n((u'Fleshtones', 1982), -7.33)\n((u'The Tea Party', 1996), -7.289)\n((u'American Dog', 2001), -7.284)\n((u'Ini Kamoze', 2009), -7.262)\n((u'Commander Tom', 1995), -7.255)\n((u'Koffee Brown', 2001), -7.225)\n((u'The Church', 2003), -7.225)\n((u'Antibalas', 2007), -7.197)\n((u'The Black Keys', 2003), -7.18)\n((u'Trisomie 21', 2009), -7.178)\n((u'Africando All Stars', 2001), -7.163)\n((u'Will.I.Am', 2007), -7.12)\n((u'Crucial Conflict', 2008), -7.097)\n((u'Third Day', 1999), -7.091)\n((u'Japanische Kampfh\\xf6rspiele', 2009), -7.089)\n((u'Klaatu', 1981), -7.075)\n((u'Sincabeza', 2010), -7.064)\n((u'Tommy Castro', 2005), -7.045)\n((u'Buildings Breeding', 2006), -7.015)\n((u'Synsun', 2008), -6.984)\n((u'Yerba Brava', 2001), -6.978)\n((u'Art Of Noise', 1983), -6.978)\n((u'Markus Kruneg\\xe5rd', 2009), -6.971)\n((u'Meshuggah', 2008), -6.969)\n((u'Tm Juke And The Jack Baker Trio Present?', 2008), -6.954)\n((u'Cities', 2006), -6.892)\n((u'Sisqo / Beanie Sigel', 1999), -6.887)\n((u'The Rogers Sisters', 2006), -6.884)\n((u'X-Perience', 2006), -6.874)\n((u'Nikola Sarcevic', 2010), -6.861)\n((u'Anthony Hamilton', 2005), -6.8345)\n((u'Savage Grace', 1983), -6.815)\n((u'Stretch Arm Strong', 1998), -6.796)\n((u'MAB', 2007), -6.77)\n((u'Kay Starr', 1989), -6.75)\n((u'Jars Of Clay', 1999), -6.737)\n((u'Lucy Pearl', 2001), -6.697)\n((u'Electric Boys', 1992), -6.696)\n((u'Bjorn Berge', 2009), -6.695)\n((u'Mandy Moore', 2003), -6.668)\n((u'Kelly Key', 2006), -6.666)\n((u'Dritte Wahl', 1998), -6.645)\n((u'Live', 1997), -6.642)\n((u'Papas Da L\\xedngua', 2008), -6.604)\n((u'Crazy Frog', 2006), -6.592)\n((u'Alex Britti', 1998), -6.571)\n((u'Garbage', 1999), -6.552)\n((u'The Black Keys', 2008), -6.55)\n((u'The Weakerthans', 2010), -6.535)\n((u'Errors', 2010), -6.52)\n((u'Hate Eternal', 2005), -6.481)\n((u'Lars Vaular', 2009), -6.469)\n((u'Casper & The Cookies', 2003), -6.453)\n((u'Lincoln Brewster', 2005), -6.45)\n((u'Shakira', 2005), -6.439)\n((u'Lunascape', 2005), -6.391)\n((u'Of Montreal', 2001), -6.383)\n((u'Southern Pacific', 2003), -6.383)\n((u'Rasco', 2005), -6.37)\n((u'Jenni Vartiainen', 2010), -6.363)\n((u'Sleepy Brown', 2006), -6.337)\n((u'Will.I.Am', 2001), -6.336)\n((u'Wyclef Jean', 2002), -6.294)\n((u'Les Sexareenos', 2005), -6.282)\n((u'Baracuda', 2003), -6.267)\n((u'John Fogerty', 1986), -6.226)\n((u'Eux Autres', 2007), -6.222)\n((u'Skinless', 2006), -6.208)\n((u'Bloodlined Calligraphy', 2006), -6.149)\n((u'M-Clan', 1995), -6.127)\n((u'Sergent Garcia', 1997), -6.121)\n((u'Zacarias Ferre\\xedra', 2006), -6.092)\n((u'Dizzy Gillespie', 1990), -6.089)\n((u'Taylor Dayne', 1988), -6.088)\n((u'Bill Engvall', 1999), -6.054)\n((u'Tarkan', 1997), -6.014)\n((u'Blood On The Wall', 2004), -6.009)\n((u'The Pretenders', 1987), -5.997)\n((u'F.P.', 2009), -5.995)\n((u'R\\xf6yksopp', 2005), -5.994)\n((u'Prince Fatty', 2008), -5.98)\n((u'Falling Up', 2009), -5.957)\n((u'Cockney Rejects', 1997), -5.956)\n((u'Gillian Hills', 1998), -5.94)\n((u'Richi M.', 2000), -5.937)\n((u'Neffa', 2001), -5.933)\n((u'Jesse Malin', 2007), -5.923)\n((u'Carpathian', 2006), -5.881)\n((u'Femi Kuti', 1998), -5.86)\n((u'Sex Pistols', 1998), -5.818)\n((u'E.G. Daily', 1999), -5.813)\n((u'The Boo Radleys', 1998), -5.802)\n((u'The Most Serene Republic', 2005), -5.797)\n((u'La Cabra Mecanica', 2005), -5.796)\n((u'Chavela Vargas', 1991), -5.779)\n((u'The Raspberries', 1972), -5.771)\n((u'Spin Doctors', 1994), -5.764)\n((u'The Green Pajamas', 2007), -5.762)\n((u'Ras Shiloh', 2007), -5.761)\n((u'The Whip', 2008), -5.695)\n((u'Dominici', 2007), -5.683)\n((u'Toenut', 1995), -5.637)\n((u'Laaz Rockit', 1991), -5.636)\n((u'The Dirty Projectors', 2003), -5.627)\n((u'Usher', 2000), -5.626)\n((u'Finntroll', 2004), -5.612)\n((u'Beyonc\\xe9', 2005), -5.606)\n((u'Dark by Design', 2003), -5.5)\n((u'Common Rider', 2002), -5.499)\n((u'Parkway Drive', 2003), -5.498)\n((u'Siobhan Donaghy', 2007), -5.398)\n((u'Kings Of Leon', 2003), -5.372)\n((u'Loikaemie', 2002), -5.281)\n((u'The Exies', 2004), -5.224)\n((u'Toni Braxton Featuring Shaggy', 2001), -5.21)\n((u'Bullet Boys', 2000), -5.209)\n((u'FFH', 2005), -5.202)\n((u'Kokolo', 2009), -5.136)\n((u'Syd\\xe4n_ syd\\xe4n', 2005), -5.109)\n((u'Spice Girls', 1997), -5.048)\n((u'Farmakon', 2003), -5.027)\n((u'Ginuwine', 2003), -4.993)\n((u'Rave Allstars', 2002), -4.987)\n((u'Everyday Sunday', 2004), -4.948)\n((u'Pete Townshend', 1980), -4.938)\n((u'Kids In The Way', 2005), -4.906)\n((u'The Hives', 2004), -4.891)\n((u'The Cat Empire', 2005), -4.814)\n((u'Busy Bee', 1982), -4.811)\n((u'Kinesis', 2003), -4.802)\n((u'Sieges Even', 2008), -4.799)\n((u'Marc Anthony', 2007), -4.788)\n((u'Remembering Never', 2002), -4.787)\n((u'UK Subs', 2002), -4.772)\n((u'Danity Kane', 2008), -4.763)\n((u'Yo Yo Mundi', 2002), -4.762)\n((u'Dulce Liquido', 2003), -4.75)\n((u'They Might Be Giants', 2007), -4.743)\n((u'Cyan Velvet Project', 2005), -4.731)\n((u'La Sonrisa De Julia', 2008), -4.713)\n((u'I:Cube', 1996), -4.701)\n((u'Emilie Simon', 2009), -4.681)\n((u'Gotthard', 2001), -4.584)\n((u'Chixdiggit!', 1998), -4.554)\n((u'Emigrate', 2007), -4.542)\n((u'Diomedes Diaz;Cocha Molina', 1987), -4.481)\n((u'Marah', 2008), -4.44)\n((u'Winterborn', 2006), -4.407)\n((u'Ann Lee', 1999), -4.392)\n((u'The Metros', 2008), -4.346)\n((u'Nightrage', 2003), -4.332)\n((u'Chrome Division', 2008), -4.291)\n((u'Biohazard', 2003), -4.276)\n((u'Pleymo', 2001), -4.271)\n((u'Eagles Of Death Metal', 2008), -4.27)\n((u'Hope Of The States', 2006), -4.249)\n((u'Kasabian', 2006), -4.218)\n((u'Blink-182', 1994), -4.209)\n((u'Tad Morose', 2000), -4.2)\n((u'KATAKLYSM', 2008), -4.148)\n((u'Shannon Noll', 2005), -4.127)\n((u'Screeching Weasel', 2000), -4.126)\n((u'I Am Ghost', 2005), -3.985)\n((u'No Use For A Name', 1995), -3.95)\n((u'Coal Chamber', 2003), -3.9)\n((u'Frog Eyes', 2002), -3.875)\n((u'Adrenalin O.D.', 1986), -3.843)\n((u'Gadjo / Alexandra Prince', 2004), -3.77)\n((u'Shakira', 2009), -3.73)\n((u'Vision of Disorder', 1998), -3.665)\n((u'zebrahead', 2008), -3.651)\n((u'MyChildren MyBride', 2008), -3.624)\n((u'Pleasure P', 2009), -3.592)\n((u'Max Pezzali / 883', 2004), -3.591)\n((u'Deftones', 2005), -3.524)\n((u'Vanilla Pod', 2003), -3.522)\n((u'Hundred Reasons', 2004), -3.519)\n((u'Dirty Danger', 2009), -3.371)\n((u'July For Kings', 2002), -3.346)\n((u'Tinchy Stryder / N-Dubz', 2009), -3.345)\n((u'The Hickey Underworld', 2009), -3.323)\n((u'40 Below Summer', 2006), -3.133)\n((u'Tankard', 1986), -3.126)\n((u'Jay-Z', 2002), -3.078)\n((u'No More Kings', 2009), -3.054)\n((u'Forever The Sickest Kids', 2009), -2.979)\n((u'Alison Hinds', 2007), -2.934)\n((u'Nosferatu', 1999), -2.93)\n((u'Demon Hunter', 2007), -2.874)\n((u'Jessica Simpson', 2001), -2.487)\n((u'Idlewild', 2006), -2.485)\n((u'Jimmy Eat World', 2005), -2.157)\n((u'Across Five Aprils', 2003), -1.879)\n((u'DEW-SCENTED', 2003), -1.767)\n((u'The Manhattan Love Suicides', 2008), -0.086)\n"}]},"apps":[],"jobName":"paragraph_1558537380871_1045474888","id":"20190426-114351_93325692","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:320"},{"text":"%md\n***Task 2.4***\nTry to improve the performance of the previous RDD task by using `reduceByKey`.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 2.4</em></strong><br/>Try to improve the performance of the previous RDD task by using <code>reduceByKey</code>.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380874_-1074968779","id":"20190426-114413_1167407947","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:321"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380875_-868191325","id":"20190426-114425_110700691","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:322"},{"text":"%md\n### Solution 2.4","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 2.4</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380876_-549971201","id":"20190426-114442_1773625899","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:323"},{"text":"%pyspark\nloudnessByArtistYearRBK = millionSongsRDD.filter(lambda song: song[1] > 0).map(lambda song: ((song[0], song[1]), (song[2], 1))).reduceByKey(lambda accum, addMe: (accum[0] + addMe[0], accum[1] + addMe[1])).map(lambda song: (song[0], song[1][0] / song[1][1])).sortBy(lambda song: song[-1])\n\nfor element in loudnessByArtistYearRBK.collect():\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"((u'Messiaen', 2008), -38.806)\n((u'Solar Quest', 1998), -34.694)\n((u'Gescom', 1998), -28.814)\n((u'Zbigniew Preisner', 1993), -26.587)\n((u'Noa Assembly', 2002), -26.55)\n((u'INADE', 1997), -26.225)\n((u'Bill Doggett', 1956), -25.623)\n((u'Eberhard Weber', 1988), -25.616)\n((u'Giovanni Allevi', 1997), -23.832)\n((u'Debby Boone', 2005), -23.305)\n((u'Damien Jurado', 2006), -22.651)\n((u'Immersion', 2001), -22.324)\n((u'Lauryn Hill', 1998), -21.8)\n((u'Wynton Marsalis', 1983), -21.629)\n((u'Organized Konfusion', 1997), -21.435)\n((u'Noel Coward', 1955), -21.365)\n((u'Bill Cosby', 1964), -21.196)\n((u'The Last Atlant', 2008), -20.86)\n((u'Country Joe & The Fish', 1967), -20.631)\n((u'Dave Brubeck', 1976), -20.433)\n((u'Giora Feidman', 1989), -20.408)\n((u'Kitty Wells', 1997), -20.218)\n((u'Stargarden', 2004), -19.877)\n((u'Scott Joplin', 1972), -19.713)\n((u'Julie Doiron', 2000), -19.704)\n((u'Suzie Leblanc', 2007), -19.621)\n((u'Happy The Man', 1990), -19.581)\n((u'Tony Bennett', 1997), -19.51)\n((u'Severed Heads', 2004), -19.261)\n((u'The Fratellis', 2006), -19.253)\n((u'Gene Krupa & His Orchestra', 1993), -19.053)\n((u'Cockney Rejects', 2001), -18.808)\n((u'Elliot Goldenthal', 2002), -18.722)\n((u'De De Lind', 1973), -18.673)\n((u'Throwing Muses', 1992), -18.526)\n((u'Paulinho Da Viola', 1971), -18.456)\n((u'Pretz', 2006), -18.246)\n((u'Hammock', 2008), -18.155)\n((u'Tom Rush', 1965), -17.993)\n((u'Percy Faith', 2002), -17.862)\n((u'9 Lazy 9', 1994), -17.848)\n((u'Kronos Quartet', 2002), -17.674)\n((u'JOHN COLTRANE', 1993), -17.665)\n((u'Ramin Djawadi', 2009), -17.52)\n((u'Clifford Brown / Max Roach Quintet', 2000), -17.485)\n((u'Laura Fygi', 1998), -17.455)\n((u'The Disposable Heroes Of Hiphoprisy', 1992), -17.137)\n((u'Lyrics Born', 2005), -17.126)\n((u'Westbam', 1997), -16.886)\n((u'Freddie Hubbard', 1970), -16.714)\n((u'The Verve Pipe', 1992), -16.647)\n((u'Vangelis', 2007), -16.594)\n((u'Vassar Clements', 1998), -16.435)\n((u'Merle Travis', 1947), -16.191)\n((u'Yma Sumac', 1954), -16.123)\n((u'Elliott Sharp`s Terraplane', 2008), -16.016)\n((u'Danny Kaye', 1999), -15.994)\n((u'Xavier Cugat', 1958), -15.731)\n((u'Trentem\\xf8ller', 2006), -15.73)\n((u'Kammerflimmer Kollektief', 2010), -15.717)\n((u'Lesley Garrett / International Staff Band of The Salvation Army / International Staff Band of The Salvation Army', 2000), -15.693)\n((u'United Future Organization', 1996), -15.653)\n((u'Little Milton', 1994), -15.639)\n((u'Blueboy', 1992), -15.619)\n((u'Gary Numan', 1994), -15.507)\n((u'Paddy Kelly', 2006), -15.276)\n((u'Rasputina', 1996), -15.19)\n((u'Roger Hodgson', 1998), -15.111)\n((u'William Fitzsimmons', 2009), -15.07)\n((u'Minnie Driver', 2004), -15.064)\n((u'Orbital', 2005), -15.046)\n((u'Telecast', 2005), -14.761)\n((u'Renato Russo', 1995), -14.743)\n((u'Percy Sledge', 1968), -14.742)\n((u'The Gay Blades', 2008), -14.541)\n((u'Das EFX', 1992), -14.525)\n((u'DD/MM/YYYY', 2005), -14.517)\n((u'Malkit Singh', 1999), -14.492)\n((u'Agitation Free', 1999), -14.488)\n((u'Jeff Foxworthy', 1993), -14.391)\n((u'Fred Astaire', 1989), -14.363)\n((u'Causa Sui', 2009), -14.343)\n((u'Art Pepper', 1977), -14.269)\n((u'Birdsongs of the Mesozoic', 1989), -14.248)\n((u'Haley Bonar', 2008), -14.21)\n((u'Jonathan King', 2001), -14.031)\n((u'Dan Fogelberg', 1985), -13.954)\n((u'Grayson Capps', 2008), -13.953)\n((u'Clouds Forming Crowns', 2005), -13.835)\n((u'Constantines', 2008), -13.804)\n((u'Elliot Goldenthal', 2003), -13.798)\n((u'Nick Cave/Warren Ellis', 2006), -13.797)\n((u'Desmond Dekker', 1980), -13.791)\n((u'Elvis Costello & The Imposters', 2004), -13.776)\n((u'Cat Power', 1996), -13.757)\n((u'Alison Krauss / Union Station', 1997), -13.712)\n((u'Jacques Higelin', 1985), -13.663)\n((u'Altan', 2003), -13.629)\n((u'Kanye West', 2005), -13.549)\n((u'Carlo Siliotto', 2007), -13.375)\n((u'The Exploited', 1992), -13.368)\n((u'Vanessa Daou', 1994), -13.293)\n((u'Mojo Nixon', 1990), -13.292)\n((u'Moonshake', 1992), -13.28)\n((u'Sue Keller', 2004), -13.267)\n((u'Der Plan', 1983), -13.248)\n((u'Cher', 1974), -13.208)\n((u'Savoy Brown Blues Band', 1967), -13.2)\n((u'Merle Haggard', 1996), -13.055)\n((u'Bo Carter', 1994), -12.962)\n((u'Sanseverino', 2004), -12.847)\n((u\"Flamin' Groovies\", 1991), -12.845)\n((u'Damien Leith', 2008), -12.839)\n((u'Lucinda Williams', 1992), -12.829)\n((u'Intex Systems', 2006), -12.822)\n((u'Barry White', 1995), -12.798)\n((u'Carl-Johan Vallgren', 2001), -12.779)\n((u'Lisa Lynne', 1999), -12.757)\n((u'Opgeduveld', 2002), -12.725)\n((u'Natalie Cole', 1991), -12.72)\n((u'Al Jarreau', 1994), -12.702)\n((u'Molly Johnson', 2006), -12.691)\n((u'Steppenwolf', 1968), -12.516)\n((u'Phil Collins', 1985), -12.476)\n((u'Queen', 1989), -12.427)\n((u'Sunset Rubdown', 2006), -12.354)\n((u'Kroke', 1997), -12.319)\n((u'Josh White', 1995), -12.312)\n((u'Government Issue', 1991), -12.282)\n((u'Bailter Space', 1990), -12.253)\n((u'DMX Krew', 1997), -12.221)\n((u'The Willowz', 2007), -12.132)\n((u'A Tribe Called Quest', 2003), -12.013)\n((u'Blur', 1993), -11.941)\n((u'Jorma Kaukonen', 2002), -11.872)\n((u'Supertramp', 1974), -11.86)\n((u'Tito Puente', 1995), -11.821)\n((u'Jonatha Brooke', 1999), -11.785)\n((u'Spooky Tooth', 1969), -11.779)\n((u'Poncho Sanchez', 1999), -11.775)\n((u'Cher', 1973), -11.77)\n((u'John Lord Fonda', 2006), -11.731)\n((u'The Smashing Pumpkins', 1991), -11.709)\n((u'Mac Davis', 2000), -11.708)\n((u'Chi-Lites', 1971), -11.701)\n((u'Schweisser', 1997), -11.673)\n((u'Madonna', 1992), -11.67)\n((u'Brightboy', 2006), -11.612)\n((u'Adele', 2007), -11.6)\n((u'Dr. Hook', 1976), -11.438)\n((u'Conway Twitty', 1994), -11.414)\n((u'Basia', 1989), -11.408)\n((u'The Antlers', 2007), -11.392)\n((u'Lavay Smith & Her Red Hot Skillet Lickers', 2000), -11.366)\n((u'Bananarama', 1981), -11.353)\n((u'The Ejected', 1983), -11.256)\n((u'Clannad', 1987), -11.195)\n((u'Boney James', 1992), -11.193)\n((u'Lars Demian', 1991), -11.184)\n((u'Judie Tzuke', 1980), -11.183)\n((u'Graham Nash', 1986), -11.163)\n((u'Filippa Giordano', 1999), -11.155)\n((u'Hank Marvin', 2007), -11.14)\n((u'They Might Be Giants', 1990), -11.017)\n((u'The Andrews Sisters', 1991), -11.01)\n((u'Jonathan Richman', 2008), -10.974)\n((u'Th\\x19 Faith Healers', 1992), -10.966)\n((u'Janis Joplin', 1988), -10.949)\n((u'Black Moth Super Rainbow', 2003), -10.899)\n((u'One Bad Pig', 1989), -10.874)\n((u'Stone Temple Pilots', 1994), -10.867)\n((u'Laurel Aitken', 2009), -10.784)\n((u'J.C. Lodge', 1990), -10.711)\n((u'DJ Gregory', 2003), -10.691)\n((u'740 Boyz', 1996), -10.68)\n((u'Smokey Robinson & The Miracles', 1986), -10.617)\n((u'Red Foley', 1993), -10.592)\n((u'Mad Professor', 1996), -10.591)\n((u'Dead Soul Tribe', 2007), -10.573)\n((u'Mystery Girls', 2008), -10.56)\n((u'The Lurkers', 1996), -10.536)\n((u'Nena Daconte', 2008), -10.488)\n((u'Eartha Kitt', 1988), -10.481)\n((u'Irwin Goodman', 1990), -10.481)\n((u'The Pharcyde', 1993), -10.373)\n((u'Peggy Sue', 2010), -10.366)\n((u'Benabar', 2001), -10.352)\n((u'Monks Of Doom', 1992), -10.347)\n((u'Roberto Carlos', 1990), -10.302)\n((u'Material Issue', 1991), -10.301)\n((u'Carole King', 1971), -10.263)\n((u'Alcatrazz', 1983), -10.229)\n((u'The Jazz Butcher', 2003), -10.228)\n((u'The LK', 2005), -10.196)\n((u'Magic Sam', 1957), -10.176)\n((u'Alejandro Santiago', 1999), -10.165)\n((u'Johnny Mathis', 1996), -10.163)\n((u'Johnny Mathis', 2003), -10.158)\n((u'Brian Wilson', 1995), -10.128)\n((u'Georgia Satellites', 1988), -10.098)\n((u'Beaten Awake', 2006), -10.066)\n((u'Seven Mary Three', 1997), -10.047)\n((u'Iambia', 2001), -10.042)\n((u'Hot Action Cop', 2003), -10.029)\n((u\"Gasolin'\", 2000), -9.973)\n((u'Maxwell', 1996), -9.943)\n((u'Hardrock Gunter', 1999), -9.908)\n((u'Depth Charge', 2008), -9.886)\n((u'Earthling', 1994), -9.866)\n((u'Savatage', 2010), -9.83)\n((u'Robert Palmer', 1998), -9.824)\n((u'Butcher Boy', 2007), -9.823)\n((u\"Howlin' Wolf\", 1974), -9.799)\n((u'Weather Report', 1974), -9.796)\n((u'HUM', 1993), -9.779)\n((u'Kotaro Oshio', 2005), -9.77)\n((u'Psihomodo Pop', 1999), -9.761)\n((u'Giorgio Moroder', 2000), -9.712)\n((u'Belle & Sebastian', 2003), -9.703)\n((u'Duke Special', 2002), -9.697)\n((u'Gene Pitney', 1988), -9.665)\n((u'Lou Reed', 1972), -9.634)\n((u'Dave Edmunds', 1984), -9.627)\n((u'Heavy D & The Boyz', 1988), -9.582)\n((u'Luz', 2002), -9.577)\n((u'Weekender', 2003), -9.539)\n((u'Lewis Black', 2003), -9.473)\n((u'MHz', 2002), -9.456)\n((u'Dennis Brown Presents Prince Jammy', 2004), -9.414)\n((u'Vainica Doble', 1973), -9.399)\n((u'Mick Ronson', 1997), -9.369)\n((u'Chris Thile', 2001), -9.339)\n((u'Percy Mayfield', 1990), -9.335)\n((u'Sunday Munich', 2000), -9.287)\n((u'Los Chichos', 1982), -9.281)\n((u'Los Straitjackets', 1999), -9.263)\n((u'Mungo Jerry', 1972), -9.259)\n((u'Perturbazione', 2005), -9.245)\n((u'The Dingees', 1999), -9.077)\n((u'Strong Arm Steady', 2010), -9.074)\n((u'Archers Of Loaf', 1995), -9.036)\n((u'LL Cool J / Lyfe Jennings', 2006), -8.983)\n((u'Nitty Gritty Dirt Band', 1971), -8.95)\n((u'Trueby Trio', 2003), -8.936)\n((u'Udo Lindenberg;Ellen ten Damme', 1990), -8.924)\n((u'Bah Samba', 1998), -8.922)\n((u'Carrie Newcomer', 1998), -8.882)\n((u'Elvis Crespo', 1999), -8.825)\n((u'Bobby Womack', 1981), -8.803)\n((u'The Hidden Cameras', 2004), -8.8)\n((u'Annie Lennox', 1992), -8.79)\n((u'Tanto Metro & Devonte', 2003), -8.757)\n((u\"Four Bitchin' Babes\", 2002), -8.73)\n((u'Roy Ayers / Carl Clay', 1973), -8.722)\n((u'Habakuk', 2007), -8.717)\n((u'Seguridad Social', 1997), -8.704)\n((u'Ann Peebles', 1978), -8.665)\n((u'Kathy Mattea', 1987), -8.651)\n((u'Languis', 2004), -8.639)\n((u'Shalamar', 2004), -8.618)\n((u'The Jazz Crusaders', 1970), -8.58)\n((u'Thirteen Senses', 2005), -8.552)\n((u'Quantic', 2004), -8.471)\n((u'Dionne Warwick', 2003), -8.457)\n((u'The Housemartins', 2009), -8.457)\n((u'Smile Empty Soul', 2003), -8.393)\n((u'Hermeto Pascoal', 1979), -8.391)\n((u'Brandon Heath', 2006), -8.346)\n((u'Sister Sledge', 1985), -8.324)\n((u'Ultrakurt', 2003), -8.319)\n((u'Dead Soul Tribe', 2002), -8.312)\n((u'Neikka RPM', 2004), -8.302)\n((u'Dismantled', 2006), -8.298)\n((u'Junior Boys', 2004), -8.289)\n((u'Bill Perry', 2001), -8.246)\n((u'Qntal', 2008), -8.243)\n((u'Rozalla', 1992), -8.168)\n((u'Aceyalone', 2007), -8.126)\n((u'Others', 2004), -8.118)\n((u'George Lopez', 2007), -8.116)\n((u'SNFU', 1996), -8.101)\n((u'Popof', 2009), -8.094)\n((u'Alexander Sch\\xf6ld', 2005), -8.078)\n((u'Francis Dunnery', 1991), -8.023)\n((u'Cesare Cremonini', 2006), -8.021)\n((u'Levon Helm', 2009), -8.009)\n((u'Dot Allison', 2009), -7.975)\n((u'La Fiebre', 1993), -7.958)\n((u'Filthy Thieving Bastards', 2001), -7.955)\n((u'Heatmiser', 1993), -7.935)\n((u'Maria Peszek', 2005), -7.873)\n((u'Dschinghis Khan', 1993), -7.866)\n((u'Mahala Rai Banda', 2005), -7.845)\n((u'Los Tipitos', 2006), -7.844)\n((u'Ednita Nazario', 2008), -7.75)\n((u'The Fabulous Thunderbirds', 2003), -7.735)\n((u'The Brothers Johnson', 1980), -7.724)\n((u'Mr. Capone-E', 2006), -7.71)\n((u'CCCP', 2006), -7.706)\n((u'Kode 9 & The Spaceape', 2006), -7.701)\n((u'Psapp', 2008), -7.692)\n((u'Super Furry Animals', 1999), -7.692)\n((u'Weezer', 1994), -7.678)\n((u\"Oscar D'Le\\xf3n\", 1998), -7.667)\n((u'Jimmy Cliff', 1969), -7.654)\n((u'Rockefeller', 2005), -7.645)\n((u'Racebannon', 2002), -7.633)\n((u'Lyn Collins', 1975), -7.624)\n((u'Medina Azahara', 1993), -7.616)\n((u'Princess Lover', 2007), -7.608)\n((u'Trapeze', 2003), -7.567)\n((u'Late Night Sneaky', 2004), -7.544)\n((u'Richard Thompson', 1999), -7.485)\n((u'The Teardrop Explodes', 1981), -7.456)\n((u'The Dials', 2007), -7.456)\n((u'Ludacris / Nate Dogg', 2001), -7.454)\n((u'Juno Reactor', 2008), -7.446)\n((u'Dub Trio', 2008), -7.429)\n((u'La Mafia', 1991), -7.425)\n((u'Les Trois Accords', 2008), -7.367)\n((u'Fleshtones', 1982), -7.33)\n((u'The Tea Party', 1996), -7.289)\n((u'American Dog', 2001), -7.284)\n((u'Ini Kamoze', 2009), -7.262)\n((u'Commander Tom', 1995), -7.255)\n((u'Koffee Brown', 2001), -7.225)\n((u'The Church', 2003), -7.225)\n((u'Antibalas', 2007), -7.197)\n((u'The Black Keys', 2003), -7.18)\n((u'Trisomie 21', 2009), -7.178)\n((u'Africando All Stars', 2001), -7.163)\n((u'Will.I.Am', 2007), -7.12)\n((u'Crucial Conflict', 2008), -7.097)\n((u'Third Day', 1999), -7.091)\n((u'Japanische Kampfh\\xf6rspiele', 2009), -7.089)\n((u'Klaatu', 1981), -7.075)\n((u'Sincabeza', 2010), -7.064)\n((u'Tommy Castro', 2005), -7.045)\n((u'Buildings Breeding', 2006), -7.015)\n((u'Synsun', 2008), -6.984)\n((u'Yerba Brava', 2001), -6.978)\n((u'Art Of Noise', 1983), -6.978)\n((u'Markus Kruneg\\xe5rd', 2009), -6.971)\n((u'Meshuggah', 2008), -6.969)\n((u'Tm Juke And The Jack Baker Trio Present?', 2008), -6.954)\n((u'Cities', 2006), -6.892)\n((u'Sisqo / Beanie Sigel', 1999), -6.887)\n((u'The Rogers Sisters', 2006), -6.884)\n((u'X-Perience', 2006), -6.874)\n((u'Nikola Sarcevic', 2010), -6.861)\n((u'Anthony Hamilton', 2005), -6.8345)\n((u'Savage Grace', 1983), -6.815)\n((u'Stretch Arm Strong', 1998), -6.796)\n((u'MAB', 2007), -6.77)\n((u'Kay Starr', 1989), -6.75)\n((u'Jars Of Clay', 1999), -6.737)\n((u'Lucy Pearl', 2001), -6.697)\n((u'Electric Boys', 1992), -6.696)\n((u'Bjorn Berge', 2009), -6.695)\n((u'Mandy Moore', 2003), -6.668)\n((u'Kelly Key', 2006), -6.666)\n((u'Dritte Wahl', 1998), -6.645)\n((u'Live', 1997), -6.642)\n((u'Papas Da L\\xedngua', 2008), -6.604)\n((u'Crazy Frog', 2006), -6.592)\n((u'Alex Britti', 1998), -6.571)\n((u'Garbage', 1999), -6.552)\n((u'The Black Keys', 2008), -6.55)\n((u'The Weakerthans', 2010), -6.535)\n((u'Errors', 2010), -6.52)\n((u'Hate Eternal', 2005), -6.481)\n((u'Lars Vaular', 2009), -6.469)\n((u'Casper & The Cookies', 2003), -6.453)\n((u'Lincoln Brewster', 2005), -6.45)\n((u'Shakira', 2005), -6.439)\n((u'Lunascape', 2005), -6.391)\n((u'Of Montreal', 2001), -6.383)\n((u'Southern Pacific', 2003), -6.383)\n((u'Rasco', 2005), -6.37)\n((u'Jenni Vartiainen', 2010), -6.363)\n((u'Sleepy Brown', 2006), -6.337)\n((u'Will.I.Am', 2001), -6.336)\n((u'Wyclef Jean', 2002), -6.294)\n((u'Les Sexareenos', 2005), -6.282)\n((u'Baracuda', 2003), -6.267)\n((u'John Fogerty', 1986), -6.226)\n((u'Eux Autres', 2007), -6.222)\n((u'Skinless', 2006), -6.208)\n((u'Bloodlined Calligraphy', 2006), -6.149)\n((u'M-Clan', 1995), -6.127)\n((u'Sergent Garcia', 1997), -6.121)\n((u'Zacarias Ferre\\xedra', 2006), -6.092)\n((u'Dizzy Gillespie', 1990), -6.089)\n((u'Taylor Dayne', 1988), -6.088)\n((u'Bill Engvall', 1999), -6.054)\n((u'Tarkan', 1997), -6.014)\n((u'Blood On The Wall', 2004), -6.009)\n((u'The Pretenders', 1987), -5.997)\n((u'F.P.', 2009), -5.995)\n((u'R\\xf6yksopp', 2005), -5.994)\n((u'Prince Fatty', 2008), -5.98)\n((u'Falling Up', 2009), -5.957)\n((u'Cockney Rejects', 1997), -5.956)\n((u'Gillian Hills', 1998), -5.94)\n((u'Richi M.', 2000), -5.937)\n((u'Neffa', 2001), -5.933)\n((u'Jesse Malin', 2007), -5.923)\n((u'Carpathian', 2006), -5.881)\n((u'Femi Kuti', 1998), -5.86)\n((u'Sex Pistols', 1998), -5.818)\n((u'E.G. Daily', 1999), -5.813)\n((u'The Boo Radleys', 1998), -5.802)\n((u'The Most Serene Republic', 2005), -5.797)\n((u'La Cabra Mecanica', 2005), -5.796)\n((u'Chavela Vargas', 1991), -5.779)\n((u'The Raspberries', 1972), -5.771)\n((u'Spin Doctors', 1994), -5.764)\n((u'The Green Pajamas', 2007), -5.762)\n((u'Ras Shiloh', 2007), -5.761)\n((u'The Whip', 2008), -5.695)\n((u'Dominici', 2007), -5.683)\n((u'Toenut', 1995), -5.637)\n((u'Laaz Rockit', 1991), -5.636)\n((u'The Dirty Projectors', 2003), -5.627)\n((u'Usher', 2000), -5.626)\n((u'Finntroll', 2004), -5.612)\n((u'Beyonc\\xe9', 2005), -5.606)\n((u'Dark by Design', 2003), -5.5)\n((u'Common Rider', 2002), -5.499)\n((u'Parkway Drive', 2003), -5.498)\n((u'Siobhan Donaghy', 2007), -5.398)\n((u'Kings Of Leon', 2003), -5.372)\n((u'Loikaemie', 2002), -5.281)\n((u'The Exies', 2004), -5.224)\n((u'Toni Braxton Featuring Shaggy', 2001), -5.21)\n((u'Bullet Boys', 2000), -5.209)\n((u'FFH', 2005), -5.202)\n((u'Kokolo', 2009), -5.136)\n((u'Syd\\xe4n_ syd\\xe4n', 2005), -5.109)\n((u'Spice Girls', 1997), -5.048)\n((u'Farmakon', 2003), -5.027)\n((u'Ginuwine', 2003), -4.993)\n((u'Rave Allstars', 2002), -4.987)\n((u'Everyday Sunday', 2004), -4.948)\n((u'Pete Townshend', 1980), -4.938)\n((u'Kids In The Way', 2005), -4.906)\n((u'The Hives', 2004), -4.891)\n((u'The Cat Empire', 2005), -4.814)\n((u'Busy Bee', 1982), -4.811)\n((u'Kinesis', 2003), -4.802)\n((u'Sieges Even', 2008), -4.799)\n((u'Marc Anthony', 2007), -4.788)\n((u'Remembering Never', 2002), -4.787)\n((u'UK Subs', 2002), -4.772)\n((u'Danity Kane', 2008), -4.763)\n((u'Yo Yo Mundi', 2002), -4.762)\n((u'Dulce Liquido', 2003), -4.75)\n((u'They Might Be Giants', 2007), -4.743)\n((u'Cyan Velvet Project', 2005), -4.731)\n((u'La Sonrisa De Julia', 2008), -4.713)\n((u'I:Cube', 1996), -4.701)\n((u'Emilie Simon', 2009), -4.681)\n((u'Gotthard', 2001), -4.584)\n((u'Chixdiggit!', 1998), -4.554)\n((u'Emigrate', 2007), -4.542)\n((u'Diomedes Diaz;Cocha Molina', 1987), -4.481)\n((u'Marah', 2008), -4.44)\n((u'Winterborn', 2006), -4.407)\n((u'Ann Lee', 1999), -4.392)\n((u'The Metros', 2008), -4.346)\n((u'Nightrage', 2003), -4.332)\n((u'Chrome Division', 2008), -4.291)\n((u'Biohazard', 2003), -4.276)\n((u'Pleymo', 2001), -4.271)\n((u'Eagles Of Death Metal', 2008), -4.27)\n((u'Hope Of The States', 2006), -4.249)\n((u'Kasabian', 2006), -4.218)\n((u'Blink-182', 1994), -4.209)\n((u'Tad Morose', 2000), -4.2)\n((u'KATAKLYSM', 2008), -4.148)\n((u'Shannon Noll', 2005), -4.127)\n((u'Screeching Weasel', 2000), -4.126)\n((u'I Am Ghost', 2005), -3.985)\n((u'No Use For A Name', 1995), -3.95)\n((u'Coal Chamber', 2003), -3.9)\n((u'Frog Eyes', 2002), -3.875)\n((u'Adrenalin O.D.', 1986), -3.843)\n((u'Gadjo / Alexandra Prince', 2004), -3.77)\n((u'Shakira', 2009), -3.73)\n((u'Vision of Disorder', 1998), -3.665)\n((u'zebrahead', 2008), -3.651)\n((u'MyChildren MyBride', 2008), -3.624)\n((u'Pleasure P', 2009), -3.592)\n((u'Max Pezzali / 883', 2004), -3.591)\n((u'Deftones', 2005), -3.524)\n((u'Vanilla Pod', 2003), -3.522)\n((u'Hundred Reasons', 2004), -3.519)\n((u'Dirty Danger', 2009), -3.371)\n((u'July For Kings', 2002), -3.346)\n((u'Tinchy Stryder / N-Dubz', 2009), -3.345)\n((u'The Hickey Underworld', 2009), -3.323)\n((u'40 Below Summer', 2006), -3.133)\n((u'Tankard', 1986), -3.126)\n((u'Jay-Z', 2002), -3.078)\n((u'No More Kings', 2009), -3.054)\n((u'Forever The Sickest Kids', 2009), -2.979)\n((u'Alison Hinds', 2007), -2.934)\n((u'Nosferatu', 1999), -2.93)\n((u'Demon Hunter', 2007), -2.874)\n((u'Jessica Simpson', 2001), -2.487)\n((u'Idlewild', 2006), -2.485)\n((u'Jimmy Eat World', 2005), -2.157)\n((u'Across Five Aprils', 2003), -1.879)\n((u'DEW-SCENTED', 2003), -1.767)\n((u'The Manhattan Love Suicides', 2008), -0.086)\n"}]},"apps":[],"jobName":"paragraph_1558537380877_495297497","id":"20190426-114456_1173923550","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:324"},{"text":"%md\n***Task 2.5***\nInvestigate the Web UI by observing the Event Timeline and the DAGs of the last exercises.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 2.5</em></strong><br/>Investigate the Web UI by observing the Event Timeline and the DAGs of the last exercises.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380879_34694311","id":"20190426-114504_1262690075","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:325"},{"text":"%md\n# Exercise 3 - Ingestion and saving\n\nIn this exercise we will become familiar with general aspects of data ingestion and saving.\n\nWe will deal with a snapshot of the NYC Taxi dataset containing only 100 rows.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 3 - Ingestion and saving</h1>\n<p>In this exercise we will become familiar with general aspects of data ingestion and saving.</p>\n<p>We will deal with a snapshot of the NYC Taxi dataset containing only 100 rows.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380879_-14921140","id":"20190426-114513_1560706809","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:326"},{"text":"%md\n***Task 3.1***\nLoad a DataFrame from a blank-delimited CSV file (s3a://cs-spark-basic-training/exercises/chapter3/) containing a snapshot of the NYC Taxi dataset. Compare the infered data types of the snapshot with the corresponding columns of the complete dataset. Are there differences?","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 3.1</em></strong><br/>Load a DataFrame from a blank-delimited CSV file (s3a://cs-spark-basic-training/exercises/chapter3/) containing a snapshot of the NYC Taxi dataset. Compare the infered data types of the snapshot with the corresponding columns of the complete dataset. Are there differences?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380880_-1174351098","id":"20190426-114521_2006042763","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:327"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380881_240761182","id":"20190426-114643_770859394","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:328"},{"text":"%md\n### Solution 3.1","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 3.1</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380881_1657632885","id":"20190426-114653_1763111690","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:329"},{"text":"%pyspark\ntaxiSnap = spark.read.option(\"header\", True).option(\"inferSchema\", True).option(\"delimiter\", \" \").csv(\"s3a://cs-spark-basic-training/exercises/chapter3/\")\n\ntaxiSnap.printSchema()  # With schema inferring only 'pickup_datetime' has a wrong data type\n\ntaxiSnap.show()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- medallion: string (nullable = true)\n |-- rate_code: integer (nullable = true)\n |-- pickup_datetime: string (nullable = true)\n |-- trip_distance: double (nullable = true)\n |-- store_and_fwd_flag: string (nullable = true)\n\n+--------------------+---------+--------------------+-------------+------------------+\n|           medallion|rate_code|     pickup_datetime|trip_distance|store_and_fwd_flag|\n+--------------------+---------+--------------------+-------------+------------------+\n|DFD2202EE08F7A8DC...|        1|2013-01-07T23:54:...|          0.7|                 B|\n|E12F6AF991172EAC3...|        1|2013-01-08T09:50:...|          0.7|                 N|\n|3349F919AA8AE5DC9...|        1|2013-01-10T14:27:...|          4.4|                 N|\n|0C5296F3C8B16E702...|        1|2013-01-07T22:25:...|          2.3|                 N|\n|4C005EEBAA7BF26B8...|        1|2013-01-07T21:13:...|          1.1|                 N|\n|A3B17384165197E18...|        1|2013-01-07T06:26:...|          0.5|                 N|\n|0F9E0728AB1E40D5C...|        1|2013-01-05T19:04:...|          2.8|                 N|\n|2C159C8FCCDE50174...|        1|2013-01-07T04:45:...|          0.9|                 N|\n|DD98E2C3AF5C47B44...|        2|2013-01-02T06:58:...|          3.0|                 B|\n|E8950C1BF2CE598E9...|        2|2013-01-05T21:23:...|          0.3|                 C|\n|2C0E91FF20A856C89...|        2|2013-01-07T18:24:...|          2.3|                 C|\n|D8AADA4E722C87C10...|        2|2013-01-10T17:19:...|          5.9|                 C|\n|47CFD616C05775804...|        2|2013-01-07T18:45:...|          1.9|                 C|\n|961D9C9506D105D3A...|        2|2013-01-10T15:17:...|          1.0|                 C|\n|38CA8BCB4180F32BE...|        2|2013-01-07T22:35:...|         16.1|                 C|\n|312E0CB058D7FC1A6...|        4|2013-01-05T14:00:...|          0.8|                 B|\n|D5367E940A20B9D25...|        4|2013-01-08T12:50:...|          1.1|                 B|\n|1944EB168702ED8E6...|        4|2013-01-08T08:30:...|          0.8|                 B|\n|0428E3DD09EA5A63D...|        4|2013-01-07T16:19:...|          0.9|                 B|\n|DDB3F3E0172B1FBF0...|        4|2013-01-07T18:42:...|          1.0|                 B|\n+--------------------+---------+--------------------+-------------+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1558537380882_-890102919","id":"20190426-114708_2070506577","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:330"},{"text":"%md\n***Task 3.2***\nIn case of wrong inferred data types correct them manually and load the file again with corrected data types.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 3.2</em></strong><br/>In case of wrong inferred data types correct them manually and load the file again with corrected data types.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380886_-1254901117","id":"20190426-114717_302575124","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:331"},{"text":"%pyspark\n# Please add your solution in here\nfrom pyspark.sql.types import StructType,StructField,StringType,IntegerType,TimestampType,DoubleType\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380887_-962949813","id":"20190426-114730_2028527486","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:332"},{"text":"%md\n### Solution 3.2","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 3.2</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380889_-1711288595","id":"20190426-114740_1876929644","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:333"},{"text":"%pyspark\nfrom pyspark.sql.types import StructType,StructField,StringType,IntegerType,TimestampType,DoubleType\n\n# Manually define the schema\ntaxiSchema = StructType([\n  StructField(\"medallion\", StringType()),\n  StructField(\"rate_code\", IntegerType()),\n  StructField(\"pickup_datetime\", TimestampType()), \n  StructField(\"trip_distance\", DoubleType()),\n  StructField(\"store_and_fwd_flag\", StringType())\n ])\n\ntaxiSnapshot = spark.read.option(\"header\", True).option(\"delimiter\", \" \").option(\"timestampFormat\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\").schema(taxiSchema).csv(\"s3a://cs-spark-basic-training/exercises/chapter3/\")\n\ntaxiSnapshot.printSchema()\n\ntaxiSnapshot.show(50, False)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- medallion: string (nullable = true)\n |-- rate_code: integer (nullable = true)\n |-- pickup_datetime: timestamp (nullable = true)\n |-- trip_distance: double (nullable = true)\n |-- store_and_fwd_flag: string (nullable = true)\n\n+--------------------------------+---------+-------------------+-------------+------------------+\n|medallion                       |rate_code|pickup_datetime    |trip_distance|store_and_fwd_flag|\n+--------------------------------+---------+-------------------+-------------+------------------+\n|DFD2202EE08F7A8DC9A57B02ACB81FE2|1        |2013-01-07 23:54:15|0.7          |B                 |\n|E12F6AF991172EAC3553144A0AF75A19|1        |2013-01-08 09:50:05|0.7          |N                 |\n|3349F919AA8AE5DC9C50A3773EA45BD8|1        |2013-01-10 14:27:28|4.4          |N                 |\n|0C5296F3C8B16E702F8F2E06F5106552|1        |2013-01-07 22:25:46|2.3          |N                 |\n|4C005EEBAA7BF26B84B21586332488A2|1        |2013-01-07 21:13:02|1.1          |N                 |\n|A3B17384165197E18CA0A1BB61277EE9|1        |2013-01-07 06:26:32|0.5          |N                 |\n|0F9E0728AB1E40D5CEB0C6EDBF805CCB|1        |2013-01-05 19:04:43|2.8          |N                 |\n|2C159C8FCCDE50174CF6CFC07E75F1BA|1        |2013-01-07 04:45:14|0.9          |N                 |\n|DD98E2C3AF5C47B4449F720ECC5778D4|2        |2013-01-02 06:58:08|3.0          |B                 |\n|E8950C1BF2CE598E95DE0CA5C89FA4BA|2        |2013-01-05 21:23:06|0.3          |C                 |\n|2C0E91FF20A856C891483ED63589F982|2        |2013-01-07 18:24:11|2.3          |C                 |\n|D8AADA4E722C87C10E609654612630DD|2        |2013-01-10 17:19:42|5.9          |C                 |\n|47CFD616C057758044C57D1B4BEFE759|2        |2013-01-07 18:45:40|1.9          |C                 |\n|961D9C9506D105D3A7E88229F0487033|2        |2013-01-10 15:17:20|1.0          |C                 |\n|38CA8BCB4180F32BEDE6FE085F4E445E|2        |2013-01-07 22:35:11|16.1         |C                 |\n|312E0CB058D7FC1A6494EDB66D360CD2|4        |2013-01-05 14:00:07|0.8          |B                 |\n|D5367E940A20B9D2550BF7CF7AE01681|4        |2013-01-08 12:50:22|1.1          |B                 |\n|1944EB168702ED8E6B9FD94E988D0197|4        |2013-01-08 08:30:16|0.8          |B                 |\n|0428E3DD09EA5A63D85509C7CA8C0199|4        |2013-01-07 16:19:22|0.9          |B                 |\n|DDB3F3E0172B1FBF0C9E39CA773CC6E3|4        |2013-01-07 18:42:42|1.0          |B                 |\n|B14118AD4BF381D80035EF546CE7AEFA|4        |2013-01-10 14:11:57|3.3          |B                 |\n|4728FA63A46613319446ED726626FED3|4        |2013-01-08 08:04:43|1.4          |B                 |\n|24BBC0F0660705A705213997B408E775|4        |2013-01-07 15:32:02|0.8          |B                 |\n|8C019CD008A70CC21058D22CF873E42E|4        |2013-01-08 03:50:07|1.0          |B                 |\n|24929E5F008DBC4C0E551B957F619910|1        |2013-01-08 10:38:07|20.0         |N                 |\n|826C0A320CFC98F461EA887C2F9D1509|1        |2013-01-08 11:19:08|1.8          |N                 |\n|281BD3C8825FF093DCEC21A7E65697CE|1        |2013-01-07 18:03:30|0.5          |N                 |\n|A954A71B6D44265AE756BF807E069396|1        |2013-01-07 10:05:50|1.1          |N                 |\n|D0AA7AE64A25B645CD2E4556E691EC0F|1        |2013-01-10 14:27:05|0.2          |N                 |\n|333D72A3E9C09AD9EFBF79F549EFA67B|1        |2013-01-01 09:19:27|0.5          |N                 |\n|FC82D4D00FE8AB93B2973EECB3559EA8|1        |2013-01-05 21:28:33|2.9          |N                 |\n+--------------------------------+---------+-------------------+-------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1558537380889_-398814965","id":"20190426-114759_1526011862","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:334"},{"text":"%md\n***Task 3.3***\nSave the corrected DataFrame to your directory as a Parquet file and partition it by ***rate_code***. Additionally make sure you can save your file no matter if there already exists one. Afterwards have a look into the directory you saved the file to. What can you see?","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 3.3</em></strong><br/>Save the corrected DataFrame to your directory as a Parquet file and partition it by <strong><em>rate_code</em></strong>. Additionally make sure you can save your file no matter if there already exists one. Afterwards have a look into the directory you saved the file to. What can you see?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380891_-185279219","id":"20190426-114805_2116631019","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:335"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380892_816993946","id":"20190426-114904_915342060","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:336"},{"text":"%md\n### Solution 3.3","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 3.3</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380892_1483810283","id":"20190426-114912_1709288510","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:337"},{"text":"%pyspark\ntaxiSnapshot.write.partitionBy(\"store_and_fwd_flag\", \"rate_code\").mode(\"overwrite\").save(\"s3a://cs-spark-basic-training/solution3.3/YOUR_NAME\")","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380893_1193572252","id":"20190426-114926_45623322","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:338"},{"text":"%md\n***Task 3.4***\nMake yourself familiar with the `.basePath` option. For more information about this option please have a look [here](https://spark.apache.org/docs/latest/sql-programming-guide.html#partition-discovery).\nAfter your familiar with the `.basePath` option please read in your previously saved snapshot of the NYC Taxi dataset in two different ways:\n1. Read in the files as DataFrame again by using the `.basePath` option which ***excludes*** the subdirectory *store_and_fwd_flag* and subsequent subdirectories.\n2. Read in the files as DataFrame again by using the `.basePath` option which ***includes*** the subdirectory *store_and_fwd_flag*.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 3.4</em></strong><br/>Make yourself familiar with the <code>.basePath</code> option. For more information about this option please have a look <a href=\"https://spark.apache.org/docs/latest/sql-programming-guide.html#partition-discovery\">here</a>.<br/>After your familiar with the <code>.basePath</code> option please read in your previously saved snapshot of the NYC Taxi dataset in two different ways:<br/>1. Read in the files as DataFrame again by using the <code>.basePath</code> option which <strong><em>excludes</em></strong> the subdirectory <em>store_and_fwd_flag</em> and subsequent subdirectories.<br/>2. Read in the files as DataFrame again by using the <code>.basePath</code> option which <strong><em>includes</em></strong> the subdirectory <em>store_and_fwd_flag</em>.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380894_1607651986","id":"20190426-114936_684814812","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:339"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380894_-1783170144","id":"20190426-115006_930161589","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:340"},{"text":"%md\n### Solution 3.4","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 3.4</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380895_-610617467","id":"20190426-115015_1786384562","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:341"},{"text":"%pyspark\nfirstBasePath = \"s3a://cs-spark-basic-training/solution3.3/YOUR_NAME/\"\n\nfirst = spark.read.option(\"basePath\", firstBasePath).load(\"s3a://cs-spark-basic-training/solution3.3/YOUR_NAME/store_and_fwd_flag=B/\")\n\nfirst.printSchema()\n\n\nsecondBasePath = \"s3a://cs-spark-basic-training/solution3.3/YOUR_NAME/store_and_fwd_flag=B/\"\n\nsecond = spark.read.option(\"basePath\", secondBasePath).load(\"s3a://cs-spark-basic-training/solution3.3/YOUR_NAME/store_and_fwd_flag=B/\")\n\nsecond.printSchema()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- medallion: string (nullable = true)\n |-- pickup_datetime: timestamp (nullable = true)\n |-- trip_distance: double (nullable = true)\n |-- store_and_fwd_flag: string (nullable = true)\n |-- rate_code: integer (nullable = true)\n\nroot\n |-- medallion: string (nullable = true)\n |-- pickup_datetime: timestamp (nullable = true)\n |-- trip_distance: double (nullable = true)\n |-- rate_code: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1558537380896_-2143629239","id":"20190426-115043_1918291128","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:342"},{"text":"%md\n***Task 3.5***\nTry to ingest in-memory data as DataFrames and RDDs","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 3.5</em></strong><br/>Try to ingest in-memory data as DataFrames and RDDs</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380896_987714129","id":"20190426-115056_33549502","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:343"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380897_-1583444234","id":"20190426-115106_307301910","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:344"},{"text":"%md\n### Solution 3.5","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 3.5</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380897_-1058798688","id":"20190426-115122_2026650478","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:345"},{"text":"%pyspark\n# DataFrame\nvehicleSchema = StructType([\n StructField('brand', StringType()),\n StructField('model', StringType()),\n StructField('fourWheeler', BooleanType())\n])\n\nsampleVehicles = [\n  ('Dacia', 'Duster', True),\n  ('BMW', 'Isetta', False),\n  ('Yamaha', 'YZF-R1M', False)\n]\n\nfleetDF = spark.createDataFrame(sampleVehicles, schema = vehicleSchema)\nfleetDF.show()\n\n# RDD\nfleetRDD = sc.parallelize(sampleVehicles)\nfor element in fleetRDD.collect():\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------+-------+-----------+\n| brand|  model|fourWheeler|\n+------+-------+-----------+\n| Dacia| Duster|       true|\n|   BMW| Isetta|      false|\n|Yamaha|YZF-R1M|      false|\n+------+-------+-----------+\n\n('Dacia', 'Duster', True)\n('BMW', 'Isetta', False)\n('Yamaha', 'YZF-R1M', False)\n"}]},"apps":[],"jobName":"paragraph_1558537380901_1578965846","id":"20190426-115139_1179394565","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:346"},{"text":"%md\n# Exercise 4 - Spark SQL\n\nIn this exercise we will become familiar with Spark SQL structured data processing.\n\nSee also the offical [Spark SQL programming guide](https://spark.apache.org/docs/latest/sql-programming-guide.html).\n\nData: *New York City Taxi Dataset*, 22 MB zipped Parquets with overall 999,999 rows","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 4 - Spark SQL</h1>\n<p>In this exercise we will become familiar with Spark SQL structured data processing.</p>\n<p>See also the offical <a href=\"https://spark.apache.org/docs/latest/sql-programming-guide.html\">Spark SQL programming guide</a>.</p>\n<p>Data: <em>New York City Taxi Dataset</em>, 22 MB zipped Parquets with overall 999,999 rows</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380902_607591422","id":"20190426-115147_353449463","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:347"},{"text":"%md\n***Task 4.1***\nLoad the data in a DataFrame and infer the schema automatically.\nUse `show()` to visualize the DataFrame.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 4.1</em></strong><br/>Load the data in a DataFrame and infer the schema automatically.<br/>Use <code>show()</code> to visualize the DataFrame.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380902_-875676876","id":"20190426-115218_103627136","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:348"},{"text":"%pyspark\ntaxiDataPath = \"s3a://cs-spark-basic-training/nyctaxi/\"","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380902_255114351","id":"20190426-115235_1432749415","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:349"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380903_-1134409584","id":"20190426-115245_1225209014","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:350"},{"text":"%md\n### Solution 4.1","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 4.1</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380903_2073950733","id":"20190426-115252_375727088","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:351"},{"text":"%pyspark\ntaxiDfEmptyCol = spark.read.parquet(taxiDataPath)\n\ntaxiDfEmptyCol.show()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+--------------------+---------+---------+------------------+-------------------+-------------------+---------------+-----------------+-------------+----------------+---------------+-----------------+----------------+---+-----------+---------+-------+----------+------------+------------+\n|           medallion|        hack_license|vendor_id|rate_code|store_and_fwd_flag|    pickup_datetime|   dropoff_datetime|passenger_count|trip_time_in_secs|trip_distance|pickup_longitude|pickup_latitude|dropoff_longitude|dropoff_latitude|   |fare_amount|surcharge|mta_tax|tip_amount|tolls_amount|total_amount|\n+--------------------+--------------------+---------+---------+------------------+-------------------+-------------------+---------------+-----------------+-------------+----------------+---------------+-----------------+----------------+---+-----------+---------+-------+----------+------------+------------+\n|DFD2202EE08F7A8DC...|51EE87E3205C985EF...|      CMT|        1|                 N|2013-01-07 23:54:15|2013-01-07 23:58:20|              2|              244|          0.7|      -73.974602|      40.759945|       -73.984734|       40.759388|CSH|        5.0|      0.5|    0.5|       0.0|         0.0|         6.0|\n|0B57B9633A2FECD3D...|CCD4367B417ED6634...|      CMT|        1|                 N|2013-01-07 12:39:18|2013-01-07 13:10:56|              3|             1898|         10.7|      -73.989937|      40.756775|        -73.86525|        40.77063|CSH|       34.0|      0.0|    0.5|       0.0|         4.8|        39.3|\n|E12F6AF991172EAC3...|06918214E951FA000...|      CMT|        1|                 N|2013-01-08 09:50:05|2013-01-08 10:02:54|              1|              768|          0.7|       -73.99556|      40.749294|       -73.988686|       40.759052|CSH|        9.0|      0.0|    0.5|       0.0|         0.0|         9.5|\n|3349F919AA8AE5DC9...|7CE849FEF67514F08...|      CMT|        1|                 N|2013-01-10 14:27:28|2013-01-10 14:45:21|              1|             1073|          4.4|      -74.010391|      40.708702|       -73.987846|       40.756104|CSH|       16.5|      0.0|    0.5|       0.0|         0.0|        17.0|\n|0C5296F3C8B16E702...|D2363240A9295EF57...|      CMT|        1|                 N|2013-01-07 22:25:46|2013-01-07 22:36:56|              1|              669|          2.3|      -73.989708|      40.756714|       -73.977615|       40.787575|CSH|       10.5|      0.5|    0.5|       0.0|         0.0|        11.5|\n|4C005EEBAA7BF26B8...|351BE7D984BE17DB2...|      CMT|        1|                 N|2013-01-07 21:13:02|2013-01-07 21:22:31|              1|              568|          1.1|      -73.978439|      40.764679|       -73.977684|       40.777004|CSH|        8.0|      0.5|    0.5|       0.0|         0.0|         9.0|\n|A3B17384165197E18...|B8396B62883EA332E...|      CMT|        1|                 N|2013-01-07 06:26:32|2013-01-07 06:28:24|              2|              111|          0.5|      -73.965317|      40.769375|       -73.967133|       40.763699|CSH|        4.0|      0.5|    0.5|       0.0|         0.0|         5.0|\n|0F9E0728AB1E40D5C...|8434E8A33D8C01505...|      CMT|        1|                 N|2013-01-05 19:04:43|2013-01-05 19:13:58|              1|              555|          2.8|      -73.966682|      40.761139|       -73.938515|       40.792332|CSH|       10.0|      0.0|    0.5|       0.0|         0.0|        10.5|\n|2C159C8FCCDE50174...|51C567531541EE45C...|      CMT|        1|                 N|2013-01-07 04:45:14|2013-01-07 04:48:56|              1|              222|          0.9|      -73.991936|      40.749622|       -73.978531|       40.751308|CSH|        5.5|      0.5|    0.5|       0.0|         0.0|         6.5|\n|DD98E2C3AF5C47B44...|79807332B275653A2...|      CMT|        1|                 N|2013-01-02 06:58:08|2013-01-02 07:24:24|              1|             1576|          3.0|      -73.987022|      40.759373|       -73.862022|       40.768017|CSH|        2.5|      0.0|    0.5|       0.0|         4.8|         7.8|\n|E8950C1BF2CE598E9...|E4D2F480F3C91138B...|      CMT|        1|                 N|2013-01-05 21:23:06|2013-01-05 21:25:19|              1|              132|          0.3|      -73.959496|      40.779442|       -73.960724|       40.775745|CSH|        3.5|      0.5|    0.5|       0.0|         0.0|         4.5|\n|0B57B9633A2FECD3D...|CCD4367B417ED6634...|      CMT|        1|                 N|2013-01-07 14:38:35|2013-01-07 14:46:13|              1|              457|          0.6|      -73.990623|      40.756813|       -73.982101|       40.758984|CSH|        6.5|      0.0|    0.5|       0.0|         0.0|         7.0|\n|2C0E91FF20A856C89...|1DA2F6543A62B8ED9...|      CMT|        1|                 N|2013-01-07 18:24:11|2013-01-07 18:36:15|              1|              724|          2.3|      -73.986534|        40.7342|       -73.987869|        40.75914|CSH|       10.5|      1.0|    0.5|       0.0|         0.0|        12.0|\n|D8AADA4E722C87C10...|8F1E4F779A4D67431...|      CMT|        1|                 N|2013-01-10 17:19:42|2013-01-10 17:51:18|              1|             1896|          5.9|      -73.963608|      40.774113|       -73.944038|       40.717518|CSH|       24.0|      1.0|    0.5|       0.0|         0.0|        25.5|\n|82420BD631D2BB88E...|213779F7AA40E5800...|      CMT|        1|                 N|2013-01-08 10:38:22|2013-01-08 10:56:19|              1|             1076|          3.1|      -73.967682|      40.751221|       -73.995232|       40.717422|CSH|       14.0|      0.0|    0.5|       0.0|         0.0|        14.5|\n|47CFD616C05775804...|A6DCBA545B1E1A2DC...|      CMT|        1|                 N|2013-01-07 18:45:40|2013-01-07 19:00:14|              1|              874|          1.9|      -73.977676|      40.746544|       -73.999458|       40.738972|CSH|       10.5|      1.0|    0.5|       0.0|         0.0|        12.0|\n|961D9C9506D105D3A...|65683B8714DEF5F78...|      CMT|        1|                 N|2013-01-10 15:17:20|2013-01-10 15:28:22|              1|              661|          1.0|      -73.988495|      40.737442|       -73.988106|         40.7491|CSH|        8.0|      0.0|    0.5|       0.0|         0.0|         8.5|\n|38CA8BCB4180F32BE...|CE7A3E2632A838C9C...|      CMT|        1|                 N|2013-01-07 22:35:11|2013-01-07 22:59:29|              1|             1457|         16.1|      -73.790016|      40.644058|       -73.956703|       40.747852|CSH|       44.5|      0.5|    0.5|       0.0|         0.0|        45.5|\n|50296A056AF5D2215...|4F3E6D0E69CABD895...|      CMT|        4|                 N|2013-01-08 02:22:17|2013-01-08 02:24:47|              1|              150|          0.5|       -73.99469|      40.750191|       -73.990089|       40.757217|CSH|        4.0|      0.5|    0.5|       0.0|         0.0|         5.0|\n|CD847FE5884F10A28...|5FEFD00D9773268B7...|      CMT|        1|                 N|2013-01-08 10:44:06|2013-01-08 10:46:09|              1|              123|          0.3|      -73.989296|      40.756313|       -73.987885|       40.751122|DIS|        3.5|      0.0|    0.5|       0.0|         0.0|         4.0|\n+--------------------+--------------------+---------+---------+------------------+-------------------+-------------------+---------------+-----------------+-------------+----------------+---------------+-----------------+----------------+---+-----------+---------+-------+----------+------------+------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1558537380903_-252703527","id":"20190426-115307_999355881","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:352"},{"text":"%md\n***Task 4.2***\nAfter observing the DataFrame you should see that there is a column without any name. Provide this column with the name *payment_type* by using `.withColumnRenamed`. Additionally check the schema of the DataFrame and count the rows.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 4.2</em></strong><br/>After observing the DataFrame you should see that there is a column without any name. Provide this column with the name <em>payment_type</em> by using <code>.withColumnRenamed</code>. Additionally check the schema of the DataFrame and count the rows.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380904_1536813868","id":"20190426-115315_309545530","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:353"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380905_1663876338","id":"20190426-115325_100485639","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:354"},{"text":"%md\n### Solution 4.2","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 4.2</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380905_-1930582143","id":"20190426-115337_1442209122","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:355"},{"text":"%pyspark\ntaxiDataDF = taxiDfEmptyCol.withColumnRenamed(\"\", \"payment_type\")\n\n# Check if we need to change data types\ntaxiDataDF.printSchema()\n\n# Number of rows 999,999\ntaxiDataDF.count()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- medallion: string (nullable = true)\n |-- hack_license: string (nullable = true)\n |-- vendor_id: string (nullable = true)\n |-- rate_code: integer (nullable = true)\n |-- store_and_fwd_flag: string (nullable = true)\n |-- pickup_datetime: timestamp (nullable = true)\n |-- dropoff_datetime: timestamp (nullable = true)\n |-- passenger_count: integer (nullable = true)\n |-- trip_time_in_secs: integer (nullable = true)\n |-- trip_distance: double (nullable = true)\n |-- pickup_longitude: double (nullable = true)\n |-- pickup_latitude: double (nullable = true)\n |-- dropoff_longitude: double (nullable = true)\n |-- dropoff_latitude: double (nullable = true)\n |-- payment_type: string (nullable = true)\n |-- fare_amount: double (nullable = true)\n |-- surcharge: double (nullable = true)\n |-- mta_tax: double (nullable = true)\n |-- tip_amount: double (nullable = true)\n |-- tolls_amount: double (nullable = true)\n |-- total_amount: double (nullable = true)\n\n999999\n"}]},"apps":[],"jobName":"paragraph_1558537380906_667038665","id":"20190426-115347_267186050","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:356"},{"text":"%md \n***Task 4.3***\nEven though the schema is correct, let's try to change \"pickup_datetime\" to a unix timestamp temporarily","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 4.3</em></strong><br/>Even though the schema is correct, let&rsquo;s try to change &ldquo;pickup_datetime&rdquo; to a unix timestamp temporarily</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380906_726907113","id":"20190426-115355_111477295","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:357"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380908_1025630056","id":"20190426-115403_432846929","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:358"},{"text":"%md\n### Solution 4.3","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 4.3</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380912_616773524","id":"20190426-115410_1358348778","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:359"},{"text":"%pyspark\ntaxiDataDF.withColumn('pickup_datetime', taxiDataDF['pickup_datetime'].cast(\"integer\")).printSchema()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- medallion: string (nullable = true)\n |-- hack_license: string (nullable = true)\n |-- vendor_id: string (nullable = true)\n |-- rate_code: integer (nullable = true)\n |-- store_and_fwd_flag: string (nullable = true)\n |-- pickup_datetime: integer (nullable = true)\n |-- dropoff_datetime: timestamp (nullable = true)\n |-- passenger_count: integer (nullable = true)\n |-- trip_time_in_secs: integer (nullable = true)\n |-- trip_distance: double (nullable = true)\n |-- pickup_longitude: double (nullable = true)\n |-- pickup_latitude: double (nullable = true)\n |-- dropoff_longitude: double (nullable = true)\n |-- dropoff_latitude: double (nullable = true)\n |-- payment_type: string (nullable = true)\n |-- fare_amount: double (nullable = true)\n |-- surcharge: double (nullable = true)\n |-- mta_tax: double (nullable = true)\n |-- tip_amount: double (nullable = true)\n |-- tolls_amount: double (nullable = true)\n |-- total_amount: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1558537380913_-459844314","id":"20190426-115425_1465239858","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:360"},{"text":"%md\n***Task 4.4***\nCreate a temporary view of the taxi DataFrame.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 4.4</em></strong><br/>Create a temporary view of the taxi DataFrame.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380914_-379423425","id":"20190426-115437_1725660206","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:361"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380914_-1968528881","id":"20190426-115446_1116307462","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:362"},{"text":"%md\n### Solution 4.4","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 4.4</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380914_-1892130275","id":"20190426-115454_916643717","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:363"},{"text":"%pyspark\ntaxiDataDF.createOrReplaceTempView(\"taxidata\")","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380915_-570508319","id":"20190426-115509_1740482036","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:364"},{"text":"%md\n***Task 4.5***\nSelect all tips smaller 14 and greater 0.01 and fares smaller 60 by using SQL and visualize the outcome with a scatter plot.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 4.5</em></strong><br/>Select all tips smaller 14 and greater 0.01 and fares smaller 60 by using SQL and visualize the outcome with a scatter plot.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380915_-116818950","id":"20190426-115519_1151782660","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:365"},{"text":"%sql\n-- Please add your solution in here\n-- State '%sql' in the first line to use SQL syntax\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\nmismatched input '<EOF>' expecting {'(', 'SELECT', 'FROM', 'ADD', 'DESC', 'WITH', 'VALUES', 'CREATE', 'TABLE', 'INSERT', 'DELETE', 'DESCRIBE', 'EXPLAIN', 'SHOW', 'USE', 'DROP', 'ALTER', 'MAP', 'SET', 'RESET', 'START', 'COMMIT', 'ROLLBACK', 'REDUCE', 'REFRESH', 'CLEAR', 'CACHE', 'UNCACHE', 'DFS', 'TRUNCATE', 'ANALYZE', 'LIST', 'REVOKE', 'GRANT', 'LOCK', 'UNLOCK', 'MSCK', 'EXPORT', 'IMPORT', 'LOAD'}(line 1, pos 35)\n\n== SQL ==\n-- Please add your solution in here\n-----------------------------------^^^\n\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380916_684708003","id":"20190426-115527_1902468745","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:366"},{"text":"%md\n### Solution 4.5","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 4.5</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380916_1469933760","id":"20190426-115547_423695264","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:367"},{"text":"%sql\nSELECT tip_amount, fare_amount FROM taxidata WHERE tip_amount < 14.0 AND tip_amount > 0.01 AND fare_amount < 60.0","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Table or view not found: taxidata; line 1 pos 36\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380916_331826295","id":"20190426-115615_890024844","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:368"},{"text":"%md\n***Task 4.6***\nCalculate the correlation between tips greater 0.01 and smaller 14 as well as the fare smaller 60. ","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 4.6</em></strong><br/>Calculate the correlation between tips greater 0.01 and smaller 14 as well as the fare smaller 60.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380917_-751557826","id":"20190426-115621_842801666","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:369"},{"text":"%sql\n-- Please add your solution in here\n-- State '%sql' in the first line to use SQL syntax\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"medallion":"string","hack_license":"string","vendor_id":"string","rate_code":"string","store_and_fwd_flag":"string","pickup_datetime":"string","dropoff_datetime":"string","passenger_count":"string","trip_time_in_secs":"string","trip_distance":"string","pickup_longitude":"string","pickup_latitude":"string","dropoff_longitude":"string","dropoff_latitude":"string","payment_type":"string","fare_amount":"string","surcharge":"string","mta_tax":"string","tip_amount":"string","tolls_amount":"string","total_amount":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\nmismatched input '<EOF>' expecting {'(', 'SELECT', 'FROM', 'ADD', 'DESC', 'WITH', 'VALUES', 'CREATE', 'TABLE', 'INSERT', 'DELETE', 'DESCRIBE', 'EXPLAIN', 'SHOW', 'USE', 'DROP', 'ALTER', 'MAP', 'SET', 'RESET', 'START', 'COMMIT', 'ROLLBACK', 'REDUCE', 'REFRESH', 'CLEAR', 'CACHE', 'UNCACHE', 'DFS', 'TRUNCATE', 'ANALYZE', 'LIST', 'REVOKE', 'GRANT', 'LOCK', 'UNLOCK', 'MSCK', 'EXPORT', 'IMPORT', 'LOAD'}(line 1, pos 35)\n\n== SQL ==\n-- Please add your solution in here\n-----------------------------------^^^\n\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380917_325108607","id":"20190426-115705_1791422238","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:370"},{"text":"%md\n### Solution 4.6","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 4.6</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380918_-601431403","id":"20190426-115718_414067807","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:371"},{"text":"%sql\nSELECT CORR(tip_amount, fare_amount) FROM taxidata WHERE tip_amount BETWEEN 0.01 AND 14.0 AND fare_amount < 60.0","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Table or view not found: taxidata; line 1 pos 42\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380918_-1794725481","id":"20190426-115855_237128008","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:372"},{"text":"%md\n***Task 4.7***\nQuery the average tip amount by passenger count for tips greater than 0 and sort it by average tip amount.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 4.7</em></strong><br/>Query the average tip amount by passenger count for tips greater than 0 and sort it by average tip amount.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380918_1711385300","id":"20190426-115914_1255703469","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:373"},{"text":"%sql\n-- Please add your solution in here\n-- State '%sql' in the first line to use SQL syntax\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\nno viable alternative at input '<EOF>'(line 1, pos 35)\n\n== SQL ==\n-- Please add your solution in here\n-----------------------------------^^^\n\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380919_-341704912","id":"20190426-115929_812434132","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:374"},{"text":"%md\n### Solution 4.7","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 4.7</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380920_-1289351329","id":"20190426-115944_1757246088","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:375"},{"text":"%sql\nSELECT passenger_count, AVG(tip_amount) AS average_tip FROM taxidata WHERE tip_amount > 0.0 GROUP BY passenger_count ORDER BY average_tip DESC","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Table or view not found: taxidata; line 1 pos 60\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380921_798089450","id":"20190426-115958_867138658","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:376"},{"text":"%md\n***Task 4.8***\nQuery the percentage tips of fares by payment type for tips greater 0 and sort it by percentage.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 4.8</em></strong><br/>Query the percentage tips of fares by payment type for tips greater 0 and sort it by percentage.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380922_-1467035554","id":"20190426-120004_1992028028","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:377"},{"text":"%sql\n-- Please add your solution in here\n-- State '%sql' in the first line to use SQL syntax\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\nno viable alternative at input '<EOF>'(line 1, pos 35)\n\n== SQL ==\n-- Please add your solution in here\n-----------------------------------^^^\n\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380922_-341935310","id":"20190426-120019_600765624","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:378"},{"text":"%md\n### Solution 4.8","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 4.8</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380923_-905989612","id":"20190426-120027_1777901921","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:379"},{"text":"%sql\nSELECT payment_type, AVG(tip_amount), AVG(fare_amount), (AVG(tip_amount) / AVG(fare_amount))*100 AS tip_percent FROM taxidata WHERE tip_amount > 0.0 GROUP BY payment_type ORDER BY tip_percent DESC ","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Table or view not found: taxidata; line 1 pos 117\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380923_-589288177","id":"20190426-120042_1923366668","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:380"},{"text":"%md\n***Task 4.9***\nQuery the total amount of trips and the average distance per hour (0 until 23) on basis of the pickup time.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 4.9</em></strong><br/>Query the total amount of trips and the average distance per hour (0 until 23) on basis of the pickup time.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380925_48131253","id":"20190426-120051_1594281766","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:381"},{"text":"%sql\n-- Please add your solution in here\n-- State '%sql' in the first line to use SQL syntax\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\nno viable alternative at input '<EOF>'(line 1, pos 35)\n\n== SQL ==\n-- Please add your solution in here\n-----------------------------------^^^\n\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380925_-2023806495","id":"20190426-120100_797276502","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:382"},{"text":"%md\n### Solution 4.9","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 4.9</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380926_1512732532","id":"20190426-120108_1765115561","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:383"},{"text":"%sql\nSELECT HOUR(pickup_datetime) AS hour, AVG(trip_distance) AS avg_dist, COUNT(*) AS count FROM taxidata GROUP BY HOUR(pickup_datetime) ORDER BY avg_dist DESC","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Table or view not found: taxidata; line 1 pos 93\nset zeppelin.spark.sql.stacktrace = true to see full stacktrace"}]},"apps":[],"jobName":"paragraph_1558537380930_-439874990","id":"20190426-120122_860793362","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:384"},{"text":"%md\n# Exercise 5 - Performance tuning\n\nIn this exercise we will become familiar with the most common optimization techniques in Spark.\n\nOnce again we will use the *New York City Taxi Dataset* (22 MB zipped parquet files with 999,999 rows)","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exercise 5 - Performance tuning</h1>\n<p>In this exercise we will become familiar with the most common optimization techniques in Spark.</p>\n<p>Once again we will use the <em>New York City Taxi Dataset</em> (22 MB zipped parquet files with 999,999 rows)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380930_282212771","id":"20190426-120128_942230135","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:385"},{"text":"%md\n***Task 5.1***\nLoad NYC Taxi dataset again into a DataFrame and count the amount of rows the dataset is containing. Afterwards repeat this task but this time with caching the DataFrame.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 5.1</em></strong><br/>Load NYC Taxi dataset again into a DataFrame and count the amount of rows the dataset is containing. Afterwards repeat this task but this time with caching the DataFrame.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380931_1319894750","id":"20190426-120136_1822387923","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:386"},{"text":"%md\n***Task 5.1.1***\nLoad NYC Taxi dataset into DataFrame and count it without caching. Notice the duration the count is taking.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 5.1.1</em></strong><br/>Load NYC Taxi dataset into DataFrame and count it without caching. Notice the duration the count is taking.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380933_443841912","id":"20190426-120142_396581584","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:387"},{"text":"%pyspark\n# Load the NYC Taxi dataset into a DataFrame\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380934_1059416093","id":"20190426-120148_251085277","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:388"},{"text":"%pyspark\n# Count the amount of rows of this DataFrame\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380934_-1409456607","id":"20190426-120155_1116300576","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:389"},{"text":"%md\n### Solution 5.1.1","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 5.1.1</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380934_-393933862","id":"20190426-120219_1269096368","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:390"},{"text":"%pyspark\ntaxi = spark.read.load(\"s3a://cs-spark-basic-training/nyctaxi/\")","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380935_-949659040","id":"20190426-120230_1777258684","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:391"},{"text":"%pyspark\ntaxi.count()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"999999\n"}]},"apps":[],"jobName":"paragraph_1558537380935_644521315","id":"20190426-120247_2090882905","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:392"},{"text":"%md\n***Task 5.1.2***\nNow load the same dataset into a second DataFrame and count it again. Notice the duration of the second count and compare it with the first count.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 5.1.2</em></strong><br/>Now load the same dataset into a second DataFrame and count it again. Notice the duration of the second count and compare it with the first count.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380936_15198039","id":"20190426-120254_1152832021","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:393"},{"text":"%pyspark\n# Load the same dataset into a second DataFrame and cache it\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380936_-359693421","id":"20190426-120303_47438194","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:394"},{"text":"%pyspark\n# Count the amount of rows of the second DataFrame\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380937_-1640303359","id":"20190426-120318_2105685741","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:395"},{"text":"%md\n### Solution 5.1.2","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 5.1.2</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380938_584545045","id":"20190426-120328_120217976","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:396"},{"text":"%pyspark\ntaxi2 = spark.read.load(\"s3a://cs-spark-basic-training/nyctaxi/\")\ntaxi2.cache()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[medallion: string, hack_license: string, vendor_id: string, rate_code: int, store_and_fwd_flag: string, pickup_datetime: timestamp, dropoff_datetime: timestamp, passenger_count: int, trip_time_in_secs: int, trip_distance: double, pickup_longitude: double, pickup_latitude: double, dropoff_longitude: double, dropoff_latitude: double, : string, fare_amount: double, surcharge: double, mta_tax: double, tip_amount: double, tolls_amount: double, total_amount: double]\n"}]},"apps":[],"jobName":"paragraph_1558537380938_1970491776","id":"20190426-120345_970320118","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:397"},{"text":"%pyspark\ntaxi2.count()","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"999999\n"}]},"apps":[],"jobName":"paragraph_1558537380939_824625567","id":"20190426-120405_2128414809","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:398"},{"text":"%md\n***Task 5.1.3*** Have a look into the Spark web UI and become familiar with its tabs. Can you see differences by comparing `5.1.1` and `5.1.2` in the Spark web UI (DAG, Event timeline, stages, durations, shufflings, etc.)?","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 5.1.3</em></strong> Have a look into the Spark web UI and become familiar with its tabs. Can you see differences by comparing <code>5.1.1</code> and <code>5.1.2</code> in the Spark web UI (DAG, Event timeline, stages, durations, shufflings, etc.)?</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380941_-306784334","id":"20190426-120412_374746632","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:399"},{"text":"%md\n***Task 5.2***\nConvert the DataFrame of ***Task 5.1.1*** into a RDD and output every single row of the DataFrame. Afterwards only output the first 100 rows. Compare the duration these commands took.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 5.2</em></strong><br/>Convert the DataFrame of <strong><em>Task 5.1.1</em></strong> into a RDD and output every single row of the DataFrame. Afterwards only output the first 100 rows. Compare the duration these commands took.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380942_1150233563","id":"20190426-120420_1928808661","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:400"},{"text":"%md\n***Task 5.2.1*** Convert the DataFrame of ***Task 5.1.1*** into a RDD and output every single element.","user":"anonymous","dateUpdated":"2019-05-22T15:10:21+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 5.2.1</em></strong> Convert the DataFrame of <strong><em>Task 5.1.1</em></strong> into a RDD and output every single element.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380942_-1528494191","id":"20190426-120427_1263337016","dateCreated":"2019-05-22T15:03:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:401","dateFinished":"2019-05-22T15:10:23+0000","dateStarted":"2019-05-22T15:10:21+0000"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380942_1388125986","id":"20190426-120434_1608362117","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:402"},{"text":"%md\n### Solution 5.2.1","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 5.2.1</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380943_-633785081","id":"20190426-120446_1252788028","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:403"},{"text":"%pyspark\ntaxiRDD = taxi.rdd\n\nfor element in taxiRDD.collect():\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:10:47+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'taxi' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'taxi' is not defined\n\n"}]},"apps":[],"jobName":"paragraph_1558537380943_-289023780","id":"20190426-120515_1020324739","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:404"},{"text":"%md\n***Task 5.2.2*** Now let´s output only the first 100 rows and compare the durations.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 5.2.2</em></strong> Now let´s output only the first 100 rows and compare the durations.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380944_-415335025","id":"20190426-120525_463928321","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:405"},{"text":"%pyspark\n# Please add your solution in here\n","user":"anonymous","dateUpdated":"2019-05-22T15:10:53+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1558537380944_156029722","id":"20190426-120534_38428299","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:406"},{"text":"%md\n### Solution 5.2.2","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 5.2.2</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380945_-481021935","id":"20190426-120541_1186825795","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:407"},{"text":"%pyspark\nfor element in taxiRDD.take(100):\n    print(element)","user":"anonymous","dateUpdated":"2019-05-22T15:11:26+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'taxiRDD' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 312, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'taxiRDD' is not defined\n\n"}]},"apps":[],"jobName":"paragraph_1558537380947_1104932493","id":"20190426-120553_702896845","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:408"},{"text":"%md\n***Task 5.3.1*** The subsequent code snippet finds all prime numbers between 2 and 2 million and displays 10 primes. Find out how to determine the number of partitions after each operation. Notice the duration the whole code snippet took.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 5.3.1</em></strong> The subsequent code snippet finds all prime numbers between 2 and 2 million and displays 10 primes. Find out how to determine the number of partitions after each operation. Notice the duration the whole code snippet took.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380947_374673749","id":"20190426-120603_582467258","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:409"},{"text":"%pyspark\n# Please add your completions in here\n\n# Construct all non-primes from 2 to 500 k (duplicates are tolerated)\nnonPrimes = sc.parallelize(range(2,500000)).map(lambda x: (x, (range(2,500000 / x))))\n\nnonPrimesFlat = nonPrimes.flatMap(lambda x: map(lambda y: y* x[0],x[1]))\n\n# Get all primes by excluding all non-primes from 2 to 500 k\nprime = sc.parallelize(range(2, 500000)).subtract(nonPrimesFlat)\n\n# Display 10 primes\nprime.take(10)","user":"anonymous","dateUpdated":"2019-05-22T15:12:52+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\n"}]},"apps":[],"jobName":"paragraph_1558537380950_-911577528","id":"20190426-120610_1826630253","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:410"},{"text":"%md\n### Solution 5.3.1","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 5.3.1</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380950_1627624747","id":"20190426-120619_236153871","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:411"},{"text":"%pyspark \n# Construct all non-primes from 2 to 500 k (duplicates are tolerated)\nnonPrimes = sc.parallelize(range(2,500000)).map(lambda x: (x, (range(2,500000 / x))))\nprint('nonPrimes is distributed across {} partitions'.format(nonPrimes.getNumPartitions()))\n\nnonPrimesFlat = nonPrimes.flatMap(lambda x: map(lambda y: y* x[0],x[1]))\nprint('nonPrimesFlat is distributed across {} partitions'.format(nonPrimesFlat.getNumPartitions()))\n\n# Get all primes by excluding all non-primes from 2 to 500 k\nprime = sc.parallelize(range(2, 500000)).subtract(nonPrimesFlat)\nprint('prime is distributed across {} partitions'.format(prime.getNumPartitions()))\n\n# Display 10 primes\nprime.take(10)","user":"anonymous","dateUpdated":"2019-05-22T15:13:16+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\n"}]},"apps":[],"jobName":"paragraph_1558537380951_449431318","id":"20190426-120633_1159838601","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:412"},{"text":"%md\n***Task 5.3.2*** Now try to optimize the code of Task 5.3.1 by using `repartition`. Remember the rule of thumb for repartitioning and figure out the necessary information for applying it. Notice the duration the whole code snippet is taking now.","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Task 5.3.2</em></strong> Now try to optimize the code of Task 5.3.1 by using <code>repartition</code>. Remember the rule of thumb for repartitioning and figure out the necessary information for applying it. Notice the duration the whole code snippet is taking now.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380951_195387646","id":"20190426-120646_340850043","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:413"},{"text":"%pyspark\n# Please add your completions in here\n\n# Construct all non-primes from 2 to 500 k (duplicates are tolerated)\nnonPrimes = sc.parallelize(range(2,500000)).map(lambda x: (x, (range(2,500000 / x))))\n\nnonPrimesFlat = nonPrimes.flatMap(lambda x: map(lambda y: y* x[0],x[1]))\n\n# Get all primes by excluding all non-primes from 2 to 500 k\nprime = sc.parallelize(range(2, 500000)).subtract(nonPrimesFlat)\n\n# Display 10 primes\nprime.take(10)","user":"anonymous","dateUpdated":"2019-05-22T15:14:54+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\n"}]},"apps":[],"jobName":"paragraph_1558537380952_292434878","id":"20190426-120655_1484164494","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:414"},{"text":"%md\n### Solution 5.3.2","user":"anonymous","dateUpdated":"2019-05-22T15:03:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Solution 5.3.2</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1558537380952_1717534056","id":"20190426-120708_1515438840","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:415"},{"text":"%pyspark\n# Construct all non-primes from 2 to 500 k (duplicates are tolerated)\nnonPrimes = sc.parallelize(range(2,500000)).map(lambda x: (x, (range(2,500000 / x))))\nprint('nonPrimes is distributed across {} partitions'.format(nonPrimes.getNumPartitions()))\n\n# Rule of thumb: number of partitions = cores per CPU * CPU per cluster * 2 or 3\nnonPrimesRep = nonPrimes.repartition(36)\nprint('nonPrimesRep is distributed across {} partitions'.format(nonPrimesRep.getNumPartitions()))\n\nnonPrimesRepFlat = nonPrimesRep.flatMap(lambda x: map(lambda y: y* x[0],x[1]))\nprint('nonPrimesRepFlat is distributed across {} partitions'.format(nonPrimesRepFlat.getNumPartitions()))\n\n# Get all primes by excluding all non-primes from 2 to 500 k\nprime = sc.parallelize(range(2, 500000)).subtract(nonPrimesRepFlat)\nprint('prime is distributed across {} partitions'.format(prime.getNumPartitions()))\n\n# Display 10 primes\nprime.take(10)","user":"anonymous","dateUpdated":"2019-05-22T15:14:55+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 319, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_python-7449687324443856767.py\", line 307, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'sc' is not defined\n\n"}]},"apps":[],"jobName":"paragraph_1558537380953_-1679906429","id":"20190426-120729_1832274050","dateCreated":"2019-05-22T15:03:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:416"}],"name":"/6. Exercises/6.2 Exercises - Python","id":"2EDRC5F3Y","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}