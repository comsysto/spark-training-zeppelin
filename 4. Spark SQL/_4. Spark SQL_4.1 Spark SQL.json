{"paragraphs":[{"text":"%md <img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://global-uploads.webflow.com/5ad0acc69f356a98471287a3/5ae073d500595f83d49e713a_logo_Comsysto-Reply_color.svg' style='width:400px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163035_1101721852","id":"20190424-175622_731521033","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:25822"},{"text":"%md\n# 4.1 Spark SQL","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>4.1 Spark SQL</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163035_723008150","id":"20190424-175715_2003769450","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25823"},{"text":"%md\n***4.1.1 Spark SQL on DataFrames and Datasets***\n\n***4.1.2 Spark SQL on views***\n\n***4.1.3 Joining, aggregating and grouping***","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>4.1.1 Spark SQL on DataFrames and Datasets</em></strong></p>\n<p><strong><em>4.1.2 Spark SQL on views</em></strong></p>\n<p><strong><em>4.1.3 Joining, aggregating and grouping</em></strong></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163035_-535083683","id":"20190424-175722_539396371","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25824"},{"text":"%md\n## 4.1.1 Spark SQL on DataFrames and Dataset\n\nSpark provides two ways of SQL queries - SQL queries on DataFrames and Datasets as well as SQL queries on views.\nIn this section you can see an example for an Spark SQL query on DataFrames and Datasets.","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>4.1.1 Spark SQL on DataFrames and Dataset</h2>\n<p>Spark provides two ways of SQL queries - SQL queries on DataFrames and Datasets as well as SQL queries on views.<br/>In this section you can see an example for an Spark SQL query on DataFrames and Datasets.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163036_1686681473","id":"20190424-175728_693630565","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25825"},{"text":"%md\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>","user":"anonymous","dateUpdated":"2019-05-21T09:16:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163036_1511227412","id":"20190424-175737_23632375","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25826","dateFinished":"2019-05-21T09:16:20+0000","dateStarted":"2019-05-21T09:16:20+0000"},{"text":"%spark\n// Spark SQL query on a DataFrame\nval songDF = spark.read.load(\"s3a://cs-spark-basic-training/Songs/\")\nsongDF.show()\n\nsongDF.select($\"artist\", $\"loudness\")\n      .where(\"artist like '%Boy%'\")\n      .orderBy($\"loudness\")\n      .groupBy($\"artist\")\n      .count()\n      .show()","user":"anonymous","dateUpdated":"2019-05-21T09:17:17+0000","config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+--------+\n|       artist|loudness|\n+-------------+--------+\n|Frank Sinatra|   -10.0|\n| Beastie Boys|    -5.0|\n|         Muse|    -7.0|\n+-------------+--------+\n\n+------------+-----+\n|      artist|count|\n+------------+-----+\n|Beastie Boys|    1|\n+------------+-----+\n\nsongDF: org.apache.spark.sql.DataFrame = [artist: string, loudness: double]\n"}]},"apps":[],"jobName":"paragraph_1558430163036_1312589265","id":"20190424-175746_698853042","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25827","dateFinished":"2019-05-21T09:17:34+0000","dateStarted":"2019-05-21T09:17:17+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=138","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=139","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=140","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=141","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=142","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=143","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=144","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=145","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=146"],"interpreterSettingId":"spark"}}},{"text":"%md\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>","user":"anonymous","dateUpdated":"2019-05-21T09:17:45+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163036_-1969169369","id":"20190424-175752_1740785109","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25828","dateFinished":"2019-05-21T09:17:45+0000","dateStarted":"2019-05-21T09:17:45+0000"},{"text":"%pyspark\n# Spark SQL query on a DataFrame\nsongDF = spark.read.load(\"s3a://cs-spark-basic-training/Songs/\")\nsongDF.show()\n\nsongDF.select(\"artist\", \"loudness\").filter(songDF.artist.like(\"%Boy%\")).orderBy(songDF.loudness).groupBy(songDF.artist).count().show()","user":"anonymous","dateUpdated":"2019-05-21T09:19:10+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+--------+\n|       artist|loudness|\n+-------------+--------+\n|Frank Sinatra|   -10.0|\n| Beastie Boys|    -5.0|\n|         Muse|    -7.0|\n+-------------+--------+\n\n+------------+-----+\n|      artist|count|\n+------------+-----+\n|Beastie Boys|    1|\n+------------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1558430163037_1342089581","id":"20190424-175810_1004543255","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25829","dateFinished":"2019-05-21T09:19:15+0000","dateStarted":"2019-05-21T09:19:10+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=156","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=157","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=158","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=159","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=160","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=161","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=162","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=163","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=164"],"interpreterSettingId":"spark"}}},{"text":"%md\n## 4.1.2 Spark SQL on views\n\nIt´s also possible to use Spark SQL on views. Therefore one has to create a view of the DataFrame or the Dataset.\n\nPossibilities of view creation:\n\n* `.createTempView(\"usersViewName\")` -> Creates a view called *usersViewName* if there is not already a view with the same name\n\n* `.createOrReplaceTempView(\"usersViewName\")` -> Creates a view called *usersViewName* or replaces it if there is already a view with the same name\n\n* `.createGlobalTempView(\"usersViewName\")` -> Creates a global view called *usersViewName* which can be queried across multiple SparkSessions","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>4.1.2 Spark SQL on views</h2>\n<p>It´s also possible to use Spark SQL on views. Therefore one has to create a view of the DataFrame or the Dataset.</p>\n<p>Possibilities of view creation:</p>\n<ul>\n  <li>\n  <p><code>.createTempView(&quot;usersViewName&quot;)</code> -&gt; Creates a view called <em>usersViewName</em> if there is not already a view with the same name</p></li>\n  <li>\n  <p><code>.createOrReplaceTempView(&quot;usersViewName&quot;)</code> -&gt; Creates a view called <em>usersViewName</em> or replaces it if there is already a view with the same name</p></li>\n  <li>\n  <p><code>.createGlobalTempView(&quot;usersViewName&quot;)</code> -&gt; Creates a global view called <em>usersViewName</em> which can be queried across multiple SparkSessions</p></li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163037_-764879594","id":"20190424-175814_1913043897","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25830"},{"text":"%md\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>","user":"anonymous","dateUpdated":"2019-05-21T09:19:59+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163037_1204822513","id":"20190424-175823_459966105","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25831","dateFinished":"2019-05-21T09:19:59+0000","dateStarted":"2019-05-21T09:19:59+0000"},{"text":"%spark\n// Create view called 'songDF'\nsongDF.createOrReplaceTempView(\"viewDF\")\n\n// Query view\nspark.sql(\"select artist, loudness, count(artist) from viewDF where artist like '%Boy%' group by artist, loudness order by artist asc\").show()","user":"anonymous","dateUpdated":"2019-05-21T09:21:31+0000","config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------+--------+-------------+\n|      artist|loudness|count(artist)|\n+------------+--------+-------------+\n|Beastie Boys|    -5.0|            1|\n+------------+--------+-------------+\n\n"}]},"apps":[],"jobName":"paragraph_1558430163037_-1009206328","id":"20190424-175835_1045987213","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25832","dateFinished":"2019-05-21T09:21:33+0000","dateStarted":"2019-05-21T09:21:31+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=166"],"interpreterSettingId":"spark"}}},{"text":"%md\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>","user":"anonymous","dateUpdated":"2019-05-21T09:21:13+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163038_15453656","id":"20190424-175840_55818327","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25833","dateFinished":"2019-05-21T09:21:13+0000","dateStarted":"2019-05-21T09:21:13+0000"},{"text":"%pyspark\n# Create view called 'songDF'\nsongDF.createOrReplaceTempView('viewDF')\n\n# Query view\nspark.sql('''select artist, loudness, count(artist) from viewDF where artist like '%Boy%' group by artist, loudness order by artist asc''').show()","user":"anonymous","dateUpdated":"2019-05-21T09:21:34+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------+--------+-------------+\n|      artist|loudness|count(artist)|\n+------------+--------+-------------+\n|Beastie Boys|    -5.0|            1|\n+------------+--------+-------------+\n\n"}]},"apps":[],"jobName":"paragraph_1558430163038_995525085","id":"20190424-175858_419355055","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25834","dateFinished":"2019-05-21T09:21:35+0000","dateStarted":"2019-05-21T09:21:34+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=167"],"interpreterSettingId":"spark"}}},{"text":"%md\nIn browser applications like notebooks you can also use a SQL interpreter (in case of databricks `%sql`) instead of using `spark.sql()` in combination with the Spark interpreter.\nThe Spark interpreter is the default one.","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In browser applications like notebooks you can also use a SQL interpreter (in case of databricks <code>%sql</code>) instead of using <code>spark.sql()</code> in combination with the Spark interpreter.<br/>The Spark interpreter is the default one.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163038_209617995","id":"20190424-175905_1287959029","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25835"},{"text":"%sql\nSelect artist, loudness, count(artist) from viewDF where artist like '%Boy%' group by artist, loudness order by artist asc","user":"anonymous","dateUpdated":"2019-05-21T09:21:45+0000","config":{"lineNumbers":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"artist":"string","loudness":"string","count(artist)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"artist\tloudness\tcount(artist)\nBeastie Boys\t-5.0\t1\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1558430163038_1067933016","id":"20190424-175914_1058535062","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25836","dateFinished":"2019-05-21T09:21:43+0000","dateStarted":"2019-05-21T09:21:42+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=168"],"interpreterSettingId":"spark"}}},{"text":"%md\n## 4.1.3 Joining, aggregating and grouping\n\nJoining, aggregating and grouping are working the same way as we´ve already seen in section [1.2.5 Use DataFrame API](https://dbc.comsysto.com/#notebook/85989/command/88775)","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>4.1.3 Joining, aggregating and grouping</h2>\n<p>Joining, aggregating and grouping are working the same way as we´ve already seen in section <a href=\"https://dbc.comsysto.com/#notebook/85989/command/88775\">1.2.5 Use DataFrame API</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163039_-431319539","id":"20190424-175930_1067581782","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25837"},{"text":"%md\n### Joining\n\n***Available join types:***\n\n * inner (default)\n \n * outer\n \n * left_outer\n \n * right_outer\n \n * leftsemi\n \n * crossJoin","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Joining</h3>\n<p><strong><em>Available join types:</em></strong></p>\n<ul>\n  <li>\n  <p>inner (default)</p></li>\n  <li>\n  <p>outer</p></li>\n  <li>\n  <p>left_outer</p></li>\n  <li>\n  <p>right_outer</p></li>\n  <li>\n  <p>leftsemi</p></li>\n  <li>\n  <p>crossJoin</p></li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163039_-505747996","id":"20190424-180000_338659907","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25838"},{"text":"%md\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>","user":"anonymous","dateUpdated":"2019-05-21T09:22:38+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163039_426444754","id":"20190424-180011_1789377781","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25839","dateFinished":"2019-05-21T09:22:38+0000","dateStarted":"2019-05-21T09:22:38+0000"},{"text":"%spark\n// Create second DataFrame out of in-memory data\nval listenersDF = spark.createDataFrame(Seq((\"Muse\", 4571),(\"Frank Sinatra\", 1658),(\"Beastie Boys\", 2483)))\n                       .withColumnRenamed(\"_1\", \"band\")\n                       .withColumnRenamed(\"_2\", \"listeners\")\n\nlistenersDF.show()\n\nlistenersDF.createOrReplaceTempView(\"listenersDF\")","user":"anonymous","dateUpdated":"2019-05-21T09:22:54+0000","config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+---------+\n|         band|listeners|\n+-------------+---------+\n|         Muse|     4571|\n|Frank Sinatra|     1658|\n| Beastie Boys|     2483|\n+-------------+---------+\n\nlistenersDF: org.apache.spark.sql.DataFrame = [band: string, listeners: int]\n"}]},"apps":[],"jobName":"paragraph_1558430163039_1401126252","id":"20190424-180019_1149594813","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25840","dateFinished":"2019-05-21T09:22:55+0000","dateStarted":"2019-05-21T09:22:54+0000"},{"text":"%md\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>","user":"anonymous","dateUpdated":"2019-05-21T09:23:07+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163039_-1730135355","id":"20190424-180024_17228047","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25841","dateFinished":"2019-05-21T09:23:07+0000","dateStarted":"2019-05-21T09:23:07+0000"},{"text":"%pyspark\n# Create second DataFrame out of in-memory data\nlistenersDF = spark.createDataFrame([(\"Muse\", 4571),(\"Frank Sinatra\", 1658),(\"Beastie Boys\", 2483)]).withColumnRenamed(\"_1\", \"band\").withColumnRenamed(\"_2\", \"listeners\")\n\nlistenersDF.show()\n\nlistenersDF.createOrReplaceTempView(\"listenersDF\")","user":"anonymous","dateUpdated":"2019-05-21T09:26:56+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+---------+\n|         band|listeners|\n+-------------+---------+\n|         Muse|     4571|\n|Frank Sinatra|     1658|\n| Beastie Boys|     2483|\n+-------------+---------+\n\n"}]},"apps":[],"jobName":"paragraph_1558430163040_-1152073916","id":"20190424-180041_1285319072","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25842","dateFinished":"2019-05-21T09:26:57+0000","dateStarted":"2019-05-21T09:26:56+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=176","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=177"],"interpreterSettingId":"spark"}}},{"text":"%md\nJoining by using SQL on DataFrames and Datasets","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Joining by using SQL on DataFrames and Datasets</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163040_1153469896","id":"20190424-180047_564853536","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25843"},{"text":"%md\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>","user":"anonymous","dateUpdated":"2019-05-21T09:23:15+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://hazelcast.org/wp-content/uploads/2016/04/scala-logo.jpg' style='width:100px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163040_-1778486138","id":"20190424-180054_645671290","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25844","dateFinished":"2019-05-21T09:23:15+0000","dateStarted":"2019-05-21T09:23:15+0000"},{"text":"%spark\nsongDF.join(listenersDF, songDF(\"artist\")===listenersDF(\"band\")).show()","user":"anonymous","dateUpdated":"2019-05-21T09:27:02+0000","config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+--------+-------------+---------+\n|       artist|loudness|         band|listeners|\n+-------------+--------+-------------+---------+\n|Frank Sinatra|   -10.0|Frank Sinatra|     1658|\n| Beastie Boys|    -5.0| Beastie Boys|     2483|\n|         Muse|    -7.0|         Muse|     4571|\n+-------------+--------+-------------+---------+\n\n"}]},"apps":[],"jobName":"paragraph_1558430163040_1667483147","id":"20190424-180101_511101527","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25845","dateFinished":"2019-05-21T09:27:06+0000","dateStarted":"2019-05-21T09:27:02+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=178","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=179","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=180"],"interpreterSettingId":"spark"}}},{"text":"%md\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>","user":"anonymous","dateUpdated":"2019-05-21T09:27:15+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<img src='https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg' style='width:150px'>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163041_-1570589677","id":"20190424-180118_499596349","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25846","dateFinished":"2019-05-21T09:27:15+0000","dateStarted":"2019-05-21T09:27:15+0000"},{"text":"%pyspark\nsongDF.join(listenersDF, songDF.artist == listenersDF.band).show()","user":"anonymous","dateUpdated":"2019-05-21T09:27:20+0000","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+--------+-------------+---------+\n|       artist|loudness|         band|listeners|\n+-------------+--------+-------------+---------+\n|         Muse|    -7.0|         Muse|     4571|\n|Frank Sinatra|   -10.0|Frank Sinatra|     1658|\n| Beastie Boys|    -5.0| Beastie Boys|     2483|\n+-------------+--------+-------------+---------+\n\n"}]},"apps":[],"jobName":"paragraph_1558430163041_1513468147","id":"20190424-180136_2091734001","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25847","dateFinished":"2019-05-21T09:27:21+0000","dateStarted":"2019-05-21T09:27:20+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=181","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=182","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=183"],"interpreterSettingId":"spark"}}},{"text":"%md\nJoining by using SQL on views","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Joining by using SQL on views</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163041_21301258","id":"20190424-180144_813333021","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25848"},{"text":"%spark\nspark.sql(\"select viewDF.artist, viewDF.loudness, listenersDF.band, listenersDF.listeners from viewDF join listenersDF on viewDF.artist = listenersDF.band\").show()","user":"anonymous","dateUpdated":"2019-05-21T09:27:25+0000","config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+--------+-------------+---------+\n|       artist|loudness|         band|listeners|\n+-------------+--------+-------------+---------+\n|         Muse|    -7.0|         Muse|     4571|\n|Frank Sinatra|   -10.0|Frank Sinatra|     1658|\n| Beastie Boys|    -5.0| Beastie Boys|     2483|\n+-------------+--------+-------------+---------+\n\n"}]},"apps":[],"jobName":"paragraph_1558430163041_-1714976863","id":"20190424-180151_160958143","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25849","dateFinished":"2019-05-21T09:27:27+0000","dateStarted":"2019-05-21T09:27:25+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=184","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=185","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=186"],"interpreterSettingId":"spark"}}},{"text":"%md\nJoining by using SQL interpreter in browser applications","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Joining by using SQL interpreter in browser applications</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163042_1415720920","id":"20190424-180158_1985401616","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25850"},{"text":"%sql\nSelect * from viewDF join listenersDF on viewDF.artist = listenersDF.band ","user":"anonymous","dateUpdated":"2019-05-21T09:27:32+0000","config":{"lineNumbers":true,"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"artist":"string","loudness":"string","band":"string","listeners":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"artist\tloudness\tband\tlisteners\nMuse\t-7.0\tMuse\t4571\nFrank Sinatra\t-10.0\tFrank Sinatra\t1658\nBeastie Boys\t-5.0\tBeastie Boys\t2483\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1558430163042_1367471942","id":"20190424-180220_2093044228","dateCreated":"2019-05-21T09:16:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25851","dateFinished":"2019-05-21T09:27:31+0000","dateStarted":"2019-05-21T09:27:31+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=187","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=188","http://ip-172-31-46-129.eu-central-1.compute.internal:4040/jobs/job?id=189"],"interpreterSettingId":"spark"}}},{"text":"%md\n### Aggregating and grouping\n\n* DataFrames can be grouped (`groupBy`, `groupByKey`) in a SQL-like fashion. Grouping functions can be found in the [Dataset API](https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.Dataset).\n\n* DataFrames can be aggregated as well. Aggregation functions can be found in the [built-in DataFrame functions](https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions$).\n\n* Examples for aggregation functions:\n - count\n - sum\n - first\n - max\n - avg","user":"anonymous","dateUpdated":"2019-05-21T09:16:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Aggregating and grouping</h3>\n<ul>\n  <li>\n  <p>DataFrames can be grouped (<code>groupBy</code>, <code>groupByKey</code>) in a SQL-like fashion. Grouping functions can be found in the <a href=\"https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.Dataset\">Dataset API</a>.</p></li>\n  <li>\n  <p>DataFrames can be aggregated as well. Aggregation functions can be found in the <a href=\"https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions$\">built-in DataFrame functions</a>.</p></li>\n  <li>\n  <p>Examples for aggregation functions:</p></li>\n  <li>count</li>\n  <li>sum</li>\n  <li>first</li>\n  <li>max</li>\n  <li>avg</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1558430163042_61622666","id":"20190424-180229_1548912125","dateCreated":"2019-05-21T09:16:03+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25852"}],"name":"/4. Spark SQL/4.1 Spark SQL","id":"2ECTPQ3DP","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"python:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}